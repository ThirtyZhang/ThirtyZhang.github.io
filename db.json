{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/explosion.min.js","path":"libs/others/explosion.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/text.js","path":"libs/others/text.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/fireworks.js","path":"libs/others/fireworks.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/avatar.jpg","path":"medias/avatars/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/cww97.jpg","path":"medias/avatars/cww97.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/babyq.png","path":"medias/avatars/babyq.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/fun4go.png","path":"medias/avatars/fun4go.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/hael.jpg","path":"medias/avatars/hael.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/huaji.jpg","path":"medias/avatars/huaji.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/hzwer.jpg","path":"medias/avatars/hzwer.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ids2.jpg","path":"medias/avatars/ids2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/kewlgrl.jpg","path":"medias/avatars/kewlgrl.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ldy.jpg","path":"medias/avatars/ldy.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/liyucheng.jpg","path":"medias/avatars/liyucheng.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/michael.jpg","path":"medias/avatars/michael.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mouse.jpg","path":"medias/avatars/mouse.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mpy634.png","path":"medias/avatars/mpy634.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","path":"medias/avatars/myzhihu.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qiqiang.jpg","path":"medias/avatars/qiqiang.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/spacesac.png","path":"medias/avatars/spacesac.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/sunchangzhi.jpg","path":"medias/avatars/sunchangzhi.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/taowei.jpg","path":"medias/avatars/taowei.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhaokangzhe.jpg","path":"medias/avatars/zhaokangzhe.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/27.jpg","path":"medias/featureimages/27.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","path":"libs/jquery/jquery-2.2.0.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/antnlp.ico","path":"medias/avatars/antnlp.ico","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/duyupei.jpg","path":"medias/avatars/duyupei.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/gsy.jpg","path":"medias/avatars/gsy.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/liyangzone.jpg","path":"medias/avatars/liyangzone.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lijiaqian.png","path":"medias/avatars/lijiaqian.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/milyyy.jpg","path":"medias/avatars/milyyy.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mizunashi.png","path":"medias/avatars/mizunashi.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qiandongwei.jpg","path":"medias/avatars/qiandongwei.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/xuzhongyou.jpg","path":"medias/avatars/xuzhongyou.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhangting.jpg","path":"medias/avatars/zhangting.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zzw.jpg","path":"medias/avatars/zzw.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/24.jpg","path":"medias/featureimages/24.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/25.jpg","path":"medias/featureimages/25.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","path":"libs/awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/0xbird.png","path":"medias/avatars/0xbird.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lyn-draw.jpg","path":"medias/avatars/lyn-draw.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lzh.png","path":"medias/avatars/lzh.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qianqian.png","path":"medias/avatars/qianqian.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/1.jpg","path":"medias/music/avatars/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/10.jpg","path":"medias/music/avatars/10.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/11.jpg","path":"medias/music/avatars/11.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/12.jpg","path":"medias/music/avatars/12.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/7.jpg","path":"medias/music/avatars/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","path":"libs/awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","path":"libs/awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mashiro.jpg","path":"medias/avatars/mashiro.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/2.jpg","path":"medias/music/avatars/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/3.jpg","path":"medias/music/avatars/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/6.jpg","path":"medias/music/avatars/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/8.jpg","path":"medias/music/avatars/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/9.jpg","path":"medias/music/avatars/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","path":"libs/awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jitao.jpg","path":"medias/avatars/jitao.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/4.jpg","path":"medias/music/avatars/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","path":"libs/awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","path":"libs/awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jingjing.jpg","path":"medias/avatars/jingjing.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhangyi.jpg","path":"medias/avatars/zhangyi.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/26.jpg","path":"medias/featureimages/26.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/5.jpg","path":"medias/music/avatars/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","path":"libs/awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/1.m4a","path":"medias/music/1.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/11.m4a","path":"medias/music/11.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/起床进行曲.m4a","path":"medias/music/起床进行曲.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/Turnin.m4a","path":"medias/music/Turnin.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/10.mp3","path":"medias/music/10.mp3","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/12.m4a","path":"medias/music/12.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/Still.m4a","path":"medias/music/Still.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/CountingStars.m4a","path":"medias/music/CountingStars.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/夜空中最亮的星.m4a","path":"medias/music/夜空中最亮的星.m4a","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/daoxiang.mp3","path":"medias/music/daoxiang.mp3","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/zuimeideqidai.flac","path":"medias/music/zuimeideqidai.flac","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/xiangyu.flac","path":"medias/music/xiangyu.flac","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"d97f69ff63501de89cfd341c68e4d6ed5c8a5b3a","modified":1579462260303},{"_id":"source/CNAME","hash":"48add1cf538ccdfaa98f378abe5a758c1b4e82ce","modified":1579472614000},{"_id":"themes/matery/.gitignore","hash":"eaa3d84cb77d92a21b111fd1e37f53edc1ff9de0","modified":1579462260316},{"_id":"themes/matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1579462260316},{"_id":"themes/matery/README.md","hash":"7ef16198a2c5ff580f006582286354caf160c7fe","modified":1579462260317},{"_id":"themes/matery/README_CN.md","hash":"a94324950e0299bcfcbc106cf2ca65c93e1fe843","modified":1579462260317},{"_id":"themes/matery/_config.yml","hash":"ab22e483de843b258a79b513de0350fcdfe0a3dc","modified":1579689248077},{"_id":"source/_data/friends.json","hash":"97cd698d18127d70a00e33b76e66d74f04100c0b","modified":1579462260304},{"_id":"source/_data/musics.json","hash":"672a1cedd052ca44ea9207e382bc92e7c4fafc37","modified":1579664753561},{"_id":"source/_posts/2017-conclusion.md","hash":"2fe909c3b38cbe8e80630c0ccee812f5c389ba34","modified":1579477204584},{"_id":"source/_posts/EasyHexo搭建个人博客.md","hash":"49c56c912bec73641499aa842a1f1027b8548329","modified":1579689804689},{"_id":"source/_posts/Github国内访问加速.md","hash":"9fc2efa0083c43ce2b7ac632f9d439410f7681ba","modified":1579612325983},{"_id":"source/_posts/Markdown语法.md","hash":"2b244ce82d51de5985245d82fd8f8f5b879a7dde","modified":1579551325036},{"_id":"source/_posts/Vue文档风格的Typora主题.md","hash":"96002e7ac67736a6f92d8ee66a1d99ebb678ca01","modified":1579612574607},{"_id":"source/_posts/git快速上手.md","hash":"d024334f8d64fc9685966bcba6cee648420e65c7","modified":1579616206531},{"_id":"source/_posts/预习路线.md","hash":"c39a8da3f756b9fa8962a50358a60822af580371","modified":1579551678900},{"_id":"source/about/index.md","hash":"26ebe6aa4a0da580e7bbd47830015144806862e3","modified":1579594436821},{"_id":"source/archives/index.md","hash":"a62b7d9b8a8bdf966ec5c823e71581d2b185156e","modified":1579462260313},{"_id":"source/categories/index.md","hash":"76889deb16e0d61d5c585f26a0e69f01de6cab74","modified":1579462260313},{"_id":"source/contact/index.md","hash":"0a7580ccdd8a4fba925e9aedcb8fb35c8abb1954","modified":1579471735066},{"_id":"source/friends/index.md","hash":"2fad15eac8c62070f1520034c6d23773225d8ef6","modified":1579471872654},{"_id":"source/tags/index.md","hash":"98697833897097a5c65521ea02baa1c6f85948d8","modified":1579462260315},{"_id":"themes/matery/languages/default.yml","hash":"527c795b8c41fe62bf35603ffebfa6d4a7929a2c","modified":1579462260319},{"_id":"themes/matery/languages/zh-CN.yml","hash":"d92db4b986bb6f0d228e9a8249383103bf56342d","modified":1579462260321},{"_id":"themes/matery/layout/404.ejs","hash":"f08a0f507b36f3652520a41381f71167488405c7","modified":1579462260321},{"_id":"themes/matery/layout/about.ejs","hash":"e87752e59f021b5139b1155a264da11ab469a9aa","modified":1579462260341},{"_id":"themes/matery/layout/archive.ejs","hash":"1b5023571894404d75caffa28128fc9c49f9095d","modified":1579462260342},{"_id":"themes/matery/layout/categories.ejs","hash":"c431e772d0f7700592228bbd9502793bdc28a893","modified":1579462260342},{"_id":"themes/matery/layout/category.ejs","hash":"2d421e10c3b8fd2c4f725e5eaa967c4a1429c707","modified":1579462260343},{"_id":"themes/matery/layout/contact.ejs","hash":"1513c5a40b7cc0b6e5854cf8c3253958bcb486cb","modified":1579462260344},{"_id":"themes/matery/layout/friends.ejs","hash":"b9b75ff45324da5b4ddbb6e16ea1ecd239dbc310","modified":1579462260344},{"_id":"themes/matery/layout/index.ejs","hash":"7fc5a6c4f0229c0be43b7d1315524c468346fbb8","modified":1579462260345},{"_id":"themes/matery/layout/layout.ejs","hash":"2ba4110dc596424b1220a259c8e594da774e7f59","modified":1579462260345},{"_id":"themes/matery/layout/post.ejs","hash":"9ecae79690293cacdccc172118f1fe481705b1f2","modified":1579462260345},{"_id":"themes/matery/layout/tag.ejs","hash":"5cdf3a1d72f54285ee9cb826fd0e4a0449093215","modified":1579462260346},{"_id":"themes/matery/layout/tags.ejs","hash":"851c0ee599e91e7b1d657673859e8b6ff79cf50b","modified":1579462260346},{"_id":"themes/matery/source/favicon.png","hash":"78b5cb22e23cfb4dba919986421e7f4ed8ca363c","modified":1579498878456},{"_id":"source/_posts/Markdown语法/2.png","hash":"db877a92261bbadbeabda539b734f9541a158940","modified":1579692903928},{"_id":"source/_posts/Markdown语法/3.png","hash":"3763821c378f3c5fb93b1551c6327b8cf329ccef","modified":1579692903950},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"cb99dc352397ec5d0765794d7b8884972e61973b","modified":1579462260321},{"_id":"themes/matery/layout/_partial/bg-cover-content.ejs","hash":"6bf708dbd705b486bc464e9be8e8834bbd692850","modified":1579462260323},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"d5a7b9bb96e04c0a3485dd873748f19c50a6a04f","modified":1579462260323},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"42dda8e67f7f09d148347887e52f18aea546df26","modified":1579462260323},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"b2312f832e582f0c7bfbbfd847c9af926bc2fcd5","modified":1579661440327},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"a3a140e6aeeb6f289e4b821a577ef548267f3de1","modified":1579462260324},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"fd4034bca2eb3987dcf113e6477260bee97eb1e7","modified":1579462260325},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"d8c40dbc8106b5bc53ceb727ad968c1d8f234261","modified":1579462260325},{"_id":"themes/matery/layout/_partial/google-analytics.ejs","hash":"890c8f04c1f4905dfceb3ea9fd6efdd040d79c01","modified":1579462260326},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"764d20ae433f558e81249ff0c8105ac53e6d3f59","modified":1579524721046},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"821e1af65990521c9e0288178d8e5b18c73a9cab","modified":1579462260327},{"_id":"themes/matery/layout/_partial/index-cover.ejs","hash":"d4042e5521ceb5f3255cd4455ac7ccd227fee6df","modified":1579462260327},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"42728561c09589f79b698eb059ab4def53ed3642","modified":1579462260328},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"e761f0104fbf431671bbe6bebc91ca82f737f4d2","modified":1579462260328},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"3a82fcb6f31d69971cb564985842c14ac02cdca0","modified":1579462260328},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"dfdeea9c59d157acb851d4bf44bf95f81787523c","modified":1579462260329},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"166c0b9753f3f913bd801e82ad5b268004be198d","modified":1579462260329},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"82cb8090cde663fa7ad67418a802997b3057e957","modified":1579462260330},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"3f208f33e4e12becdb8323e6e64e20ad60c3fb2a","modified":1579462260330},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"3b42900247d5ea4ea5b68e2be44420a0d54785ad","modified":1579462260330},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"4e73f10eacb5d00a0681cb44fe5c039cd8ab03cd","modified":1579462260331},{"_id":"themes/matery/layout/_partial/reprint-statement.ejs","hash":"f85a222ec3f9bc27eb7978015e63a16514b38791","modified":1579462260332},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"73624d9db81e87ff0c12310bb873fbd0b5221021","modified":1579462260332},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"e859fe6e0259e0c123cb7ceda6e4cac836318ffc","modified":1579462260332},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"0f2e1e27d21492cf228e786daead985b1e1dcea4","modified":1579462260333},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"55272fab7a3303e94f1839ebd7ca6cf9965fb328","modified":1579462260333},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"c3039180ddb2eb17e724b8441e5f93e79859aef7","modified":1579462260334},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"b2b22d4fc4e46b051f67216c391f629f4ff552b5","modified":1579462260334},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"5284712d84bbaa4f0d88026ac3ec5a8c13e00056","modified":1579462260335},{"_id":"themes/matery/layout/_widget/dream.ejs","hash":"2af85ddef6e61a44cbe10e8f6272a8324681ee3f","modified":1579462260335},{"_id":"themes/matery/layout/_widget/music.ejs","hash":"fc50cb4bbc1f4d0e4c9f5941f1c3c74bea742db7","modified":1579462260336},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"9ea672db65f1e5b8fad1ffafb1614f25adc97e63","modified":1579462260336},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"785cb588a31215876f6737213054ba0e8552fff0","modified":1579462260337},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"c6f713316ce75ad08ac5d1587bd8ce42e894e9ae","modified":1579462260337},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"4608af6151f0e32f668c89f09343748340021478","modified":1579462260338},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"0aaf0a111b9aa07ff37f6286eeac5506283f47f8","modified":1579462260339},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"d439d86818de179d64965d4f7f5fa56147fd9221","modified":1579462260339},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"bf604fe9c435f0fb9a559cac9c35772579b590e8","modified":1579462260340},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"6310903eb0e434d6f9a59ca669aab7fae38d4797","modified":1579462260340},{"_id":"themes/matery/layout/_widget/video.ejs","hash":"05f5e2acace5730cdf7bed650375ad88f6b5d1b7","modified":1579462260341},{"_id":"themes/matery/source/css/gitment.css","hash":"d5ef623065d1fbc897119f7b70ccf7563e329917","modified":1579462260347},{"_id":"themes/matery/source/css/matery.css","hash":"cc377faeb8c5115e062baaab23e50ba16c0e4b66","modified":1579667799653},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"4e3e855767ac5a48b13af1d6a42df13d8975e03f","modified":1579462260348},{"_id":"themes/matery/source/css/my.css","hash":"7c1de46e8a9b8a4947953937b76ec64c7efc3614","modified":1579596500728},{"_id":"themes/matery/source/js/search.js","hash":"77ecae23dd3edd8ad962c5b12954652bb2f7a1b6","modified":1579462260351},{"_id":"themes/matery/source/js/matery.js","hash":"208b7806caa943c115aa0825c9c72a0781404775","modified":1579462260351},{"_id":"source/_posts/预习路线/1.png","hash":"13c268c102b6456966c99af69634df9ea2002bbb","modified":1579692903997},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1579462260353},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1579462260354},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1579462260355},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1579462260355},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","hash":"33810b2b757fc4327bc1d3b83bb5e0d3dc1fec5b","modified":1579462260391},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","hash":"5d52d3b34fceb9d7e11f1beaf7ed380b4249dec4","modified":1579462260392},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"021898a16279ac2ffe75af4f902fab2a0a39f11a","modified":1579462260410},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1579462260413},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"26849509f196a2d21bbfd15696e5d5153163b8f1","modified":1579462260415},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"4e6538c8312aeeab845d361c37a8c1a0931241f0","modified":1579462260416},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"f81cd7bfcf7aa2d043bd3e6077df42656fc44b82","modified":1579462260427},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1579462260432},{"_id":"themes/matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1579462260435},{"_id":"themes/matery/source/libs/others/explosion.min.js","hash":"5b76fa72a85cfb27d54b00128393ece773d65386","modified":1579462260435},{"_id":"themes/matery/source/libs/others/snow.js","hash":"b393f069781eef788a0ae66b2681cece8fea2851","modified":1579462260438},{"_id":"themes/matery/source/libs/others/text.js","hash":"fdf18f65977e4bc358dfb5fb0b7c98492ae72efd","modified":1579462260438},{"_id":"themes/matery/source/libs/others/fireworks.js","hash":"e9c74f2dd3953d4d8dec44e9977574d00702e84d","modified":1579462260437},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1579462260439},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"f646f2bb75bcd1eb65b2788ac7bf15d4fd243ce9","modified":1579462260445},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1579462260446},{"_id":"themes/matery/source/medias/avatars/avatar.jpg","hash":"6272a627a6aedc67c80b5d4a3a1fb2dcd3089445","modified":1579469735777},{"_id":"themes/matery/source/medias/avatars/cww97.jpg","hash":"6af987cafc55d8d031534dd5e0f722fff19f70ec","modified":1579462260460},{"_id":"themes/matery/source/medias/avatars/babyq.png","hash":"be5432588003e5a52c02e690622eec72b5f7346c","modified":1579462260459},{"_id":"themes/matery/source/medias/avatars/fun4go.png","hash":"0f4333973a972a629cfbabf601bc7c192b65376c","modified":1579462260463},{"_id":"themes/matery/source/medias/avatars/hael.jpg","hash":"e66ccedab38bb2e8fc45fac024e234ab8e7b9d54","modified":1579462260467},{"_id":"themes/matery/source/medias/avatars/huaji.jpg","hash":"86be7eed2a491455ccfe3e7da46366ff477765ca","modified":1579462260468},{"_id":"themes/matery/source/medias/avatars/hzwer.jpg","hash":"53a66bb5e65d2abd5b7412edf094c1e0b1094492","modified":1579462260469},{"_id":"themes/matery/source/medias/avatars/ids2.jpg","hash":"2c8d3ac6ab5ac6196bac83766fde975daca91c32","modified":1579462260469},{"_id":"themes/matery/source/medias/avatars/kewlgrl.jpg","hash":"3af0fd1029a1511bb3c0e90871e41b35e714b01f","modified":1579462260476},{"_id":"themes/matery/source/medias/avatars/ldy.jpg","hash":"906ef214d1f2fe52a663738340ad5623f826bd82","modified":1579462260477},{"_id":"themes/matery/source/medias/avatars/liyucheng.jpg","hash":"12055a27fa667c87d2319475968056e1a8ad0f08","modified":1579462260482},{"_id":"themes/matery/source/medias/avatars/michael.jpg","hash":"331a2ab20c299196f5a3089b8445fc8f55346cb6","modified":1579462260498},{"_id":"themes/matery/source/medias/avatars/mouse.jpg","hash":"2eae273885b9859150a1f98f74b3df12ca9a207c","modified":1579462260506},{"_id":"themes/matery/source/medias/avatars/mpy634.png","hash":"30f88e09c02b37c2dc684d4ee3237e327bb23f8b","modified":1579462260507},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","hash":"245bf683033c88588e6b0e74bde5398866731652","modified":1579462260508},{"_id":"themes/matery/source/medias/avatars/qiqiang.jpg","hash":"081459866f922d9558a88cd4d7155d91fa730322","modified":1579462260513},{"_id":"themes/matery/source/medias/avatars/spacesac.png","hash":"ff1bdb058f1f0499312da1a082ba97d78590db1a","modified":1579462260514},{"_id":"themes/matery/source/medias/avatars/sunchangzhi.jpg","hash":"bbe2a15fd474ab62dbd14fea72deb1113a4fb005","modified":1579462260515},{"_id":"themes/matery/source/medias/avatars/taowei.jpg","hash":"e58b03b70656aa7a27238be38dac3896d9d16f10","modified":1579462260516},{"_id":"themes/matery/source/medias/avatars/zhaokangzhe.jpg","hash":"c8242bd13f08a9ddb97e26f216bc729b12ed9058","modified":1579462260527},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"c84eade01bef2d245ce3574718ce39d01ae95c6b","modified":1579508746531},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"5565b7f501c9a03e631663443bb5da14af3c6b48","modified":1579508733896},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"66706dfde7d910182c2f1dbadd0e9e917630b8dd","modified":1579593594820},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"5cf9fc64d5d74ab6ba69bb8bff580fdc22ba32d0","modified":1579593594821},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"ed5ac9f616d3b99af5188a10b1761884c37e93e5","modified":1579593594828},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"dcca8b48521cfbe4c366791f2d59bb36199b7cb4","modified":1579508645506},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"a23197c81c65cc764e665ce6c64628721d219f7a","modified":1579508689674},{"_id":"themes/matery/source/medias/featureimages/27.jpg","hash":"9cac6b80b0cc8959fc8aabfbd1adcab79ebebfc9","modified":1579593594822},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"27625628ca96f6f38815af6dffe2e50c1912da96","modified":1579508652886},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"a0246a4a560438938489cdd154e35f172b3f31b0","modified":1579593594833},{"_id":"themes/matery/source/medias/reward/wechat.png","hash":"82187ffc1516664263cb6f6a4585a53d038dd36b","modified":1579476296771},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","hash":"82276be41d2001e820020a219b90ad5b026302d1","modified":1579462260393},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"5a13983930b019450e4fe01a407c64b3dd316be4","modified":1579462260414},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","hash":"7a551393b8360731104fdef1af36a6f3638f5855","modified":1579462260418},{"_id":"themes/matery/source/libs/valine/Valine.min.js","hash":"f1558f12d96a352e490166d543a8e821dd3bb2bc","modified":1579462260448},{"_id":"themes/matery/source/medias/avatars/antnlp.ico","hash":"29475f350b989331cebd702a315f020917d06ed8","modified":1579462260457},{"_id":"themes/matery/source/medias/avatars/duyupei.jpg","hash":"3c02ed4cf57dc37e4f4b8314bf5094833a854cb0","modified":1579462260462},{"_id":"themes/matery/source/medias/avatars/gsy.jpg","hash":"6a175e2ba56a2280d40a2e654b559be41c3a0a48","modified":1579462260465},{"_id":"themes/matery/source/medias/avatars/liyangzone.jpg","hash":"febab557e4c0d859ab4cc14b57d8106f5e3fccfb","modified":1579462260480},{"_id":"themes/matery/source/medias/avatars/lijiaqian.png","hash":"9d96b3838acfae9a23b6e290fcfafceff0419c63","modified":1579462260478},{"_id":"themes/matery/source/medias/avatars/milyyy.jpg","hash":"3d195b63c6c22395befc64d003d4486d5f46f4ee","modified":1579508682264},{"_id":"themes/matery/source/medias/avatars/mizunashi.png","hash":"5fc300701d3b4250a307ed70e3a3aa0d5395c808","modified":1579462260505},{"_id":"themes/matery/source/medias/avatars/qiandongwei.jpg","hash":"6873551596a4513d01898ad866c4073c68270c57","modified":1579462260509},{"_id":"themes/matery/source/medias/avatars/xuzhongyou.jpg","hash":"1db4dfaf23cf250f222a398326562d4170d3aaa1","modified":1579462260520},{"_id":"themes/matery/source/medias/avatars/zhangting.jpg","hash":"10ee25ae3531f046a8bd3696c1cc8a16f0f25e1b","modified":1579462260522},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"1f2ec55fe7825475fde2601573bb622f0bf2acba","modified":1579593594806},{"_id":"themes/matery/source/medias/avatars/zzw.jpg","hash":"5d385b5732644b07b937a4919abc83cb95e14513","modified":1579462260529},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"8d3c8391ff161eec70f66d69e5545a9468cc52ef","modified":1579593594808},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"f168ca5b046d10a878a7b0bcfab540e2c4428887","modified":1579593594823},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"95929134fa807eb3d946e3f89a462a50b39cc18e","modified":1579535132649},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"047be4239dd7e0be83243ee6b49a392a61f16b9a","modified":1579593594819},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"ac9a6666a38a8584750b0342b0bbbfb54991eeb8","modified":1579533785466},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"ae23fdfaa59bc57b7ed49e90c5d59e4b68e1eea5","modified":1579593594823},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"57bc7c804b78b5cceb4eb1f9e51b734b75151b71","modified":1579593594824},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"f1218f4268ce4db7637589eaea5e28fe752d7145","modified":1579533817182},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"3d195b63c6c22395befc64d003d4486d5f46f4ee","modified":1579508682264},{"_id":"themes/matery/source/medias/featureimages/24.jpg","hash":"2066cdda98ad0035071cd4aa7bd696eb078c0b6d","modified":1579593594816},{"_id":"themes/matery/source/medias/featureimages/25.jpg","hash":"d16e28bd23ea3a63643826dde5eea6b7a9bdda5d","modified":1579593594817},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"c217bb9db5686f0aa6abae6d59e78e23bc5b8ea2","modified":1579508659957},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"c63ff64bdd5f6c82da8804c7248fc519d23eaf0b","modified":1579593594832},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"5a879d3ac71a18e57a4d8099fe75119597f24593","modified":1579508718329},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"815c84778b721e3606c2bd7c099c7de7c53251ba","modified":1579593594835},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"9f3a02bcc3c3dc825458bb8734783aeb17bbb018","modified":1579610602155},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1579462260359},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1579462260358},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"f63c7c489524ccb5d95e74fcd6618116c58fb305","modified":1579462260412},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1579462260420},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1579462260421},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"3480f00d284c812d623ed16a9e0ead3fb964c72e","modified":1579462260422},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1579462260422},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1579462260423},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1579462260423},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1579462260424},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1579462260425},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1579462260424},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"f8cd48e1fff82ecd54a7ce3e69de8dba7c92d113","modified":1579462260426},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","hash":"2c27939768606603bee3b5e6c8a722596a667e60","modified":1579462260429},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","hash":"c843f0dc497314574c608ca28cc742bb041786d5","modified":1579462260432},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1579462260440},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1579462260440},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1579462260441},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1579462260442},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1579462260442},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1579462260444},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1579462260443},{"_id":"themes/matery/source/libs/valine/av-min.js","hash":"04c6b2782ce4610c429563110f6a20a47432fc4c","modified":1579462260452},{"_id":"themes/matery/source/medias/avatars/0xbird.png","hash":"f9d597dfcb49e1e2be06138b24028291f5638610","modified":1579462260456},{"_id":"themes/matery/source/medias/avatars/lyn-draw.jpg","hash":"837d5d5df4dcb086d2da114d0d85084b4ec18768","modified":1579462260491},{"_id":"themes/matery/source/medias/avatars/lzh.png","hash":"8ffcbf19d6b38b891dbe408d9a4e9513b56f247e","modified":1579462260492},{"_id":"themes/matery/source/medias/avatars/qianqian.png","hash":"fed254c4e7eb58ee22d647acb83f1d08f4508f8f","modified":1579462260511},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1579593594809},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"4a08deec1dd5b4f1490e8fc23adfb75a0f88b0c4","modified":1579593594813},{"_id":"themes/matery/source/medias/banner/6.jpg","hash":"c3d5ab183b39a7140941b8375e29498f9d24f343","modified":1579593594807},{"_id":"themes/matery/source/medias/music/avatars/1.jpg","hash":"2d74cafc53285739f5817f83a0c0b6851ce8cd0f","modified":1579508637051},{"_id":"themes/matery/source/medias/music/avatars/10.jpg","hash":"5565b7f501c9a03e631663443bb5da14af3c6b48","modified":1579508733896},{"_id":"themes/matery/source/medias/music/avatars/11.jpg","hash":"c84eade01bef2d245ce3574718ce39d01ae95c6b","modified":1579508746531},{"_id":"themes/matery/source/medias/music/avatars/12.jpg","hash":"6e147dcd42483de8067dae83ddeabd941d0d2d83","modified":1579511159750},{"_id":"themes/matery/source/medias/music/avatars/7.jpg","hash":"a23197c81c65cc764e665ce6c64628721d219f7a","modified":1579508689674},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1579462260388},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1579462260389},{"_id":"themes/matery/source/medias/avatars/mashiro.jpg","hash":"250e911c16eeb6acb1e6214ad3e6a3d762850a8e","modified":1579462260497},{"_id":"themes/matery/source/medias/music/avatars/2.jpg","hash":"dcca8b48521cfbe4c366791f2d59bb36199b7cb4","modified":1579508645506},{"_id":"themes/matery/source/medias/music/avatars/3.jpg","hash":"27625628ca96f6f38815af6dffe2e50c1912da96","modified":1579508652886},{"_id":"themes/matery/source/medias/music/avatars/6.jpg","hash":"3d195b63c6c22395befc64d003d4486d5f46f4ee","modified":1579508682264},{"_id":"themes/matery/source/medias/music/avatars/8.jpg","hash":"5a879d3ac71a18e57a4d8099fe75119597f24593","modified":1579508718329},{"_id":"themes/matery/source/medias/music/avatars/9.jpg","hash":"0019aa5093b6f4ca9a2a161341500dd4f71ad390","modified":1579508726390},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1579462260381},{"_id":"themes/matery/source/medias/avatars/jitao.jpg","hash":"5934b9baccebccbc2be2ead5d84ad32dd41f9559","modified":1579462260475},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"3f0a7c1d28a91738d721e3c149ae906f6ada9717","modified":1579508673906},{"_id":"themes/matery/source/medias/music/avatars/4.jpg","hash":"c217bb9db5686f0aa6abae6d59e78e23bc5b8ea2","modified":1579508659957},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1579462260363},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1579462260370},{"_id":"themes/matery/source/medias/avatars/jingjing.jpg","hash":"bfcab0139edb2509de984cb0a9b156879c355158","modified":1579462260473},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"dc42862eb5635f259dc16e26a62d9fce833c6b39","modified":1579533804239},{"_id":"themes/matery/source/medias/avatars/zhangyi.jpg","hash":"c9130036aac9a7ac8d62e33550a9d64896cdc364","modified":1579462260525},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"120cd12374d9ad1cd12f0968ebb31e836cab8032","modified":1579533765947},{"_id":"themes/matery/source/medias/featureimages/26.jpg","hash":"120cd12374d9ad1cd12f0968ebb31e836cab8032","modified":1579533765947},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"56850c3139cbd72a0eff0c35d8fac32c9c66dd6a","modified":1579593594812},{"_id":"themes/matery/source/medias/music/avatars/5.jpg","hash":"3f0a7c1d28a91738d721e3c149ae906f6ada9717","modified":1579508673906},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1579462260376},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"cd3fc47d2042a3277e4b375ad084365abdc28f5d","modified":1579462260541},{"_id":"themes/matery/source/medias/music/1.m4a","hash":"ebf03b4ca80b8efdaee97f41cd6977b4ceacf47f","modified":1579664161867},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"8789b5e4daf0029a6c88f238f10e54d01c4fce82","modified":1579462260408},{"_id":"source/_posts/EasyHexo搭建个人博客/1579682303863.png","hash":"6337b10275087cca4c4285c95405e1ee822a7530","modified":1579692903902},{"_id":"themes/matery/source/medias/music/11.m4a","hash":"2f7acc8f3be2ad14ac2e47e02e33f6533e0c488d","modified":1579509602733},{"_id":"themes/matery/source/medias/logo.png","hash":"7a46116a294e7fa2a1b902b41956106cd06bbedd","modified":1579539610383},{"_id":"themes/matery/source/medias/music/起床进行曲.m4a","hash":"8b15243f117773801dff5f68895706911aeddf52","modified":1579511816274},{"_id":"themes/matery/source/medias/music/Turnin.m4a","hash":"09d95465ef707d12fd82ed7f032fecfff79597cd","modified":1579506464138},{"_id":"themes/matery/source/medias/music/10.mp3","hash":"150aee2eea25995fbb25a2a0ed7fca35b8579c26","modified":1579510612753},{"_id":"themes/matery/source/medias/music/12.m4a","hash":"5012556b2f1e9efc72b9bad64585ca15f1f83941","modified":1579512162677},{"_id":"themes/matery/source/medias/music/Still.m4a","hash":"1c38e4595c476873cd84933f25b49573e99f585d","modified":1579509272040},{"_id":"themes/matery/source/medias/music/CountingStars.m4a","hash":"6cad0b47e75fa060ab8b59b84f8bdcebc1bfba83","modified":1579511933533},{"_id":"themes/matery/source/medias/music/夜空中最亮的星.m4a","hash":"08654e188dbf49f80a4cce891a8270a62747d0fd","modified":1579506265175},{"_id":"themes/matery/source/medias/music/daoxiang.mp3","hash":"72c46ee085f15dc72603b0ba154409879cbeb15e","modified":1579474236252},{"_id":"themes/matery/source/medias/music/zuimeideqidai.flac","hash":"56bb8363511d35bdd7151623e7fbfb25fe1f2c5c","modified":1579474566909},{"_id":"themes/matery/source/medias/music/xiangyu.flac","hash":"b636d8dfa835468ffbc401df7a08d55f02840913","modified":1579475260943}],"Category":[{"name":"随笔","_id":"ck5p78anq00058kq4cl42dqci"},{"name":"效率","_id":"ck5p78ao2000c8kq4iu3aqy8u"},{"name":"学习","_id":"ck5p78aok000w8kq4z2livh05"}],"Data":[{"_id":"friends","data":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}]},{"_id":"musics","data":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}],"Page":[{"title":"404","date":"2019-07-19T08:41:10.000Z","type":"404","layout":"404","description":"你来到了没有知识的荒原 :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2019-07-19 16:41:10\ntype: \"404\"\nlayout: \"404\"\ndescription: \"你来到了没有知识的荒原 :(\"\n---\n","updated":"2020-01-19T19:31:00.303Z","path":"404.html","comments":1,"_id":"ck5p78aly00008kq46qfhhyt3","content":"","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":""},{"title":"about","date":"2019-07-19T08:41:10.000Z","type":"about","layout":"about","_content":"\n\n# 联系方式\n* **E-mail** : zhanglei.e@outlook.com/zl130031@gmail.com\n* **Address** : 北京\n* **WeChat/Mobile/QQ :** 13032030031\n\n  ","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-07-19 16:41:10\ntype: \"about\"\nlayout: \"about\"\n---\n\n\n# 联系方式\n* **E-mail** : zhanglei.e@outlook.com/zl130031@gmail.com\n* **Address** : 北京\n* **WeChat/Mobile/QQ :** 13032030031\n\n  ","updated":"2020-01-21T08:13:56.821Z","path":"about/index.html","comments":1,"_id":"ck5p78ank00028kq457gdrckk","content":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li><strong>E-mail</strong> : <a href=\"mailto:zhanglei.e@outlook.com\" target=\"_blank\" rel=\"noopener\">zhanglei.e@outlook.com</a>/zl130031@gmail.com</li>\n<li><strong>Address</strong> : 北京</li>\n<li><strong>WeChat/Mobile/QQ :</strong> 13032030031</li>\n</ul>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li><strong>E-mail</strong> : <a href=\"mailto:zhanglei.e@outlook.com\" target=\"_blank\" rel=\"noopener\">zhanglei.e@outlook.com</a>/zl130031@gmail.com</li>\n<li><strong>Address</strong> : 北京</li>\n<li><strong>WeChat/Mobile/QQ :</strong> 13032030031</li>\n</ul>\n"},{"title":"archives","date":"2019-07-19T08:39:20.000Z","type":"archives","layout":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-07-19 16:39:20\ntype: \"archives\"\nlayout: \"archives\"\n---","updated":"2020-01-19T19:31:00.313Z","path":"archives/index.html","comments":1,"_id":"ck5p78ano00048kq4pedxdo7f","content":"","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":""},{"title":"categories","date":"2019-07-19T08:39:20.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-07-19 16:39:20\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2020-01-19T19:31:00.313Z","path":"categories/index.html","comments":1,"_id":"ck5p78anv00088kq4fqvzhbdk","content":"","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":""},{"title":"contact","date":"2019-07-26T09:17:02.000Z","type":"contact","layout":"contact","_content":"\n# 欢迎留言\n大家有任何问题，都可以在评论区给我留言，或者加我联系方式：\n* QQ：**948030054**\n* 微信：**13032030031**\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**ThirtyZhang\n* **地址：**<https://thirtyzhang.github.io/> \n* **简介：**ECNU NLPer\n* **头像：**<https://thirtyzhang.github.io/public/favicon.png>","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2019-07-26 17:17:02\ntype: \"contact\"\nlayout: \"contact\"\n---\n\n# 欢迎留言\n大家有任何问题，都可以在评论区给我留言，或者加我联系方式：\n* QQ：**948030054**\n* 微信：**13032030031**\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**ThirtyZhang\n* **地址：**<https://thirtyzhang.github.io/> \n* **简介：**ECNU NLPer\n* **头像：**<https://thirtyzhang.github.io/public/favicon.png>","updated":"2020-01-19T22:08:55.066Z","path":"contact/index.html","comments":1,"_id":"ck5p78any000a8kq48dkqqi9d","content":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>大家有任何问题，都可以在评论区给我留言，或者加我联系方式：</p>\n<ul>\n<li>QQ：<strong>948030054</strong></li>\n<li>微信：<strong>13032030031</strong></li>\n</ul>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>ThirtyZhang</li>\n<li><strong>地址：</strong><a href=\"https://thirtyzhang.github.io/\">https://thirtyzhang.github.io/</a> </li>\n<li><strong>简介：</strong>ECNU NLPer</li>\n<li><strong>头像：</strong><a href=\"https://thirtyzhang.github.io/public/favicon.png\">https://thirtyzhang.github.io/public/favicon.png</a></li>\n</ul>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>大家有任何问题，都可以在评论区给我留言，或者加我联系方式：</p>\n<ul>\n<li>QQ：<strong>948030054</strong></li>\n<li>微信：<strong>13032030031</strong></li>\n</ul>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>ThirtyZhang</li>\n<li><strong>地址：</strong><a href=\"https://thirtyzhang.github.io/\">https://thirtyzhang.github.io/</a> </li>\n<li><strong>简介：</strong>ECNU NLPer</li>\n<li><strong>头像：</strong><a href=\"https://thirtyzhang.github.io/public/favicon.png\">https://thirtyzhang.github.io/public/favicon.png</a></li>\n</ul>\n"},{"title":"friends","date":"2020-01-19T21:50:10.000Z","type":"friends","layout":"friends","_content":"\n# 赞赏名单\n感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！\n> \n\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**ThirtyZhang\n* **地址：**https://thirtyzhang.github.io\n* **简介：**ECNU NLPer\n* **头像：**https://thirtyzhang.github.io/public/favicon.png\n\n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2020-01-20 05:50:10\ntype: \"friends\"\nlayout: \"friends\"\n---\n\n# 赞赏名单\n感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！\n> \n\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**ThirtyZhang\n* **地址：**https://thirtyzhang.github.io\n* **简介：**ECNU NLPer\n* **头像：**https://thirtyzhang.github.io/public/favicon.png\n\n","updated":"2020-01-19T22:11:12.654Z","path":"friends/index.html","comments":1,"_id":"ck5p78ao4000e8kq4svf0zfsc","content":"<h1 id=\"赞赏名单\"><a href=\"#赞赏名单\" class=\"headerlink\" title=\"赞赏名单\"></a>赞赏名单</h1><p>感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！</p>\n<blockquote>\n</blockquote>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>ThirtyZhang</li>\n<li><strong>地址：</strong><a href=\"https://thirtyzhang.github.io\">https://thirtyzhang.github.io</a></li>\n<li><strong>简介：</strong>ECNU NLPer</li>\n<li><strong>头像：</strong><a href=\"https://thirtyzhang.github.io/public/favicon.png\">https://thirtyzhang.github.io/public/favicon.png</a></li>\n</ul>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<h1 id=\"赞赏名单\"><a href=\"#赞赏名单\" class=\"headerlink\" title=\"赞赏名单\"></a>赞赏名单</h1><p>感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！</p>\n<blockquote>\n</blockquote>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>ThirtyZhang</li>\n<li><strong>地址：</strong><a href=\"https://thirtyzhang.github.io\">https://thirtyzhang.github.io</a></li>\n<li><strong>简介：</strong>ECNU NLPer</li>\n<li><strong>头像：</strong><a href=\"https://thirtyzhang.github.io/public/favicon.png\">https://thirtyzhang.github.io/public/favicon.png</a></li>\n</ul>\n"},{"title":"tags","date":"2019-07-19T08:40:27.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-07-19 16:40:27\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2020-01-19T19:31:00.315Z","path":"tags/index.html","comments":1,"_id":"ck5p78aoa000h8kq4hdzu0ti2","content":"","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":""}],"Post":[{"title":"标题","date":"2018-01-22T04:32:09.000Z","top":false,"cover":false,"password":null,"toc":true,"mathjax":false,"summary":"副标题。","_content":"\n<div align=\"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66\"></iframe></div>\n\n\n","source":"_posts/2017-conclusion.md","raw":"---\ntitle: 标题\ndate: 2018-01-22 12:32:09\ntop: false\ncover: false\npassword:\ntoc: true\nmathjax: false\nsummary: 副标题。\ntags:\n- 随笔\ncategories:\n- 随笔\n---\n\n<div align=\"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66\"></iframe></div>\n\n\n","slug":"2017-conclusion","published":1,"updated":"2020-01-19T23:40:04.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5p78ane00018kq4lgqemfi3","content":"<div align=\"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66\"></iframe></div>\n\n\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<div align=\"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66\"></iframe></div>\n\n\n"},{"title":"EasyHexo搭建个人博客","top":true,"cover":true,"toc":true,"mathjax":true,"date":"2020-01-21T08:58:04.000Z","password":null,"summary":"Hexo 是一个快速、简洁且高效的博客框架","_content":"\n\n\n<div  align = \"center\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=864622002&auto=1&height=66\"></iframe></div>\n\n# 安装\n\n## 添加国内镜像源\n\n如果没有梯子的话，可以使用阿里的国内镜像进行加速,不使用的话可能会有下载过慢或下载失败的问题\n\n```powershell\n$ npm config set registry https://registry.npm.taobao.org\n```\n\n## 认识 Hexo\n\n> Hexo 是一个快速、简洁且高效的博客框架，可以让你快速建立一个博客。\n\n> Hexo 使用 Node.js 编写。得益于 Node.js，使得 Hexo 生成上百个页面游刃有余。\n\n> Hexo 支持 GFM (GitHub Flavored Markdown) 的大部分功能。如果你不喜欢 Markdown ，你还可以换一个 Hexo 渲染插件。\n\n> Hexo 有许多插件，可以进行各种操作。\n\n## 学习 Hexo 之前，你需要有：\n\n- Node.js 基本知识\n- Git 基本知识\n- Markdown 基本知识\n- Html、css、JavaScript 基本知识\n- ······\n\n当然了，你可别被吓跑了。除了 Markdown ，其他都不用熟练掌握（事实上如果你不注意排版连 Markdown 都不用掌握，但最好还是学学吧 : **[Markdown语法 ](https://thirtyzhang.github.io/2020/01/21/markdown-yu-fa/)**）。如果你完全不会以上划线部分的知识，也没关系。只是简单地建个可以发文章的博客就好了。如果你要更上一层楼，那么以上被划掉的知识就是必备的啦~\n\n## 安装 Hexo\n\n在安装 Hexo 之前，你需要安装以下两个工具：\n\n- **[Git](https://git-scm.com/)**\n- **[Node.js](https://nodejs.org/)**\n\n## 安装 Git\n\n- Windows：下载并安装 [git](https://git-scm.com/download/win).\n- Mac：使用 [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) ：`brew install git`;或下载 [安装程序](http://sourceforge.net/projects/git-osx-installer/) 安装。\n- Linux (Ubuntu, Debian)：`sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS)：`sudo yum install git-core`\n- Linux (Arch 系列)：`sudo pacman -S git`\n\n提醒\n\n由于墙的原因，从上面的链接下载 git for windows 最好挂上一个代理，否则下载速度十分缓慢。也可以参考[这个页面](https://github.com/waylau/git-for-win)，收录了存储于百度云的下载地址。\n\n提醒\n\n如果你是 CentOS 服务器上的，可以直接使用 [HexoOneClickInstallation](https://github.com/PasserByJia/HexoOneClickInstallation) 这个脚本快速安装 Hexo。\n\n## 安装 Node.js\n\n安装 Node.js 的最佳方式是使用 [nvm](https://github.com/creationix/nvm)。\n\ncURL:\n\n```powershell\n$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\nWget:\n\n```powershell\n$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\n安装完成后，重启终端并执行下列命令即可安装 Node.js。\n\n```powershell\n$ nvm install stable\n```\n\n或者您也可以下载 [安装程序](http://nodejs.org/) 来安装。\n\n## 安装 Hexo\n\n安装好后，即可使用 npm 完成 Hexo 的安装。\n\n```powershell\n# 下面这两个命令好像是一样的效果,任选一个就可以了\n$ npm install -g hexo-cli\n$ npm install hexo-cli -g\n```\n输入`npm install`安装必备的组件 \n\n# 配置\n\n## 建立网站\n\n安装好 Hexo 后即可建立你的网站。\n\n首先建立一个文件夹。\n\n```powershell\nmkdir <your_blog_name>  # 建立你的网站根目录，名字可以自己修改\n```\n\n然后往这个文件夹里安装 Hexo。\n\n```powershell\nhexo init <your_blog_name>\n```\n\n再执行\n\n```powershell\nhexo s\n```\n\n浏览器输入\n\n```powershell\nhttp://localhost:4000/\n```\n\n就可以本地访问了\n\n这样就建立好网站了！\n\n**网站建立好后还需要做一些个性化配置,如:修改网站默认内容改为自己的内容**\n\n此部分内容可能过期，请见 [Hexo 官方文档](https://hexo.io/zh-cn/docs/configuration)。\n\n在 Hexo 根目录 `_config.yml` 这个文件里配置！\n\n警告\n\n在 YAML 语法中，冒号后面必须要有一个空格才能继续写下去。\n\n### 网站\n\n```\n# Site\ntitle:            \nsubtitle: \ndescription: \nkeywords:\nauthor: \nlanguage: \ntimezone: \n```\n\n| 参数          | 描述                                                         |\n| ------------- | ------------------------------------------------------------ |\n| `title`       | 网站标题                                                     |\n| `subtitle`    | 网站副标题                                                   |\n| `description` | 网站描述                                                     |\n| `keywords`    | 网站关键词                                                   |\n| `author`      | 作者名字                                                     |\n| `language`    | 网站使用的语言                                               |\n| `timezone`    | 网站时区：详见[时区列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) |\n\n### URL\n\n```\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: \nroot: \npermalink: :year/:month/:day/:title/\npermalink_defaults:\npretty_urls:\n  trailiing_index: true\n```\n\n| 参数                         | 描述                                                    |\n| ---------------------------- | ------------------------------------------------------- |\n| `url`                        | 网址                                                    |\n| `root`                       | 网站根目录                                              |\n| `permalink`                  | 文章的永久链接格式                                      |\n| `permalink_defaults`         | 永久链接中各部分的默认值                                |\n| `pretty_urls`                | 改写 `permalink` 的值来美化 URL                         |\n| `pretty_urls.trailing_index` | 是否在永久链接中保留尾部的 `index.html`，`false` 时去除 |\n\n提醒\n\n如果你的网站在子目录中，如：`https://yoursite.com/blog` ，就把你的 `url` 设为 `http://yoursite.com/blog` 并把 `root` 设为 `/blog/`。\n\n例如：\n\n```\n# 比如，一个页面的永久链接是 http://example.com/foo/bar/index.html\npretty_urls:\n  trailing_index: false\n# 此时页面的永久链接会变为 http://example.com/foo/bar/\n```\n\n### 目录\n\n```\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render: README.md\n```\n\n| 参数           | 描述                                                         |\n| -------------- | ------------------------------------------------------------ |\n| `source_dir`   | 资源文件夹                                                   |\n| `public_dir`   | 公共文件夹                                                   |\n| `tag_dir`      | 标签文件夹                                                   |\n| `archive_dir`  | 归档文件夹                                                   |\n| `category_dir` | 分类文件夹                                                   |\n| `code_dir`     | Include code 文件夹                                          |\n| `i18n_dir`     | 国际化文件夹                                                 |\n| `skip_render`  | 跳过文件的渲染。匹配到的文件将直接复制到 `public` 目录中。您可使用 [glob](https://github.com/micromatch/micromatch#extended-globbing) 表达式来匹配路径。 |\n\n提醒\n\n一般情况下，这部分是不需要修改的。\n\n例如：\n\n```\nskip_render: \"mypage/**/*\"\n# 将会直接将 `source/mypage/index.html` 和 `source/mypage/code.js` 不做改动地输出到 'public' 目录\n# 你也可以用这种方法来跳过对指定文章文件的渲染\nskip_render: \"_posts/test-post.md\"\n# 这将会忽略对 'test-post.md' 的渲染\n```\n\n### 文章\n\n```\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\nauto_spacing: false\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\n  enable: true\n  field: site\n  exclude: []\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: true\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n```\n\n| 参数                    | 描述                                                         |\n| ----------------------- | ------------------------------------------------------------ |\n| `new_post_name`         | 新文章的文件名称                                             |\n| `default_layout`        | 预设布局                                                     |\n| `auto_spacing`          | 在中文和英文之间加入空格                                     |\n| `titlecase`             | 把标题转换为 title case                                      |\n| `external_link`         | 在新标签中打开链接                                           |\n| `external_link.enable`  | 在新标签中打开链接                                           |\n| `external_link.field`   | 适用于整个网站或仅文章                                       |\n| `external_link.exclude` | 排除主机名。在适用时指定子域，包括 `www`                     |\n| `filename_case`         | 把文件名称转换为 (1) 小写或 (2) 大写                         |\n| `render_drafts`         | 显示草稿                                                     |\n| `post_asset_folder`     | 启动 [Asset 文件夹](https://hexo.io/zh-cn/docs/asset-folders) |\n| `relative_link`         | 把链接改为与根目录的相对位址                                 |\n| `future`                | 显示未来的文章                                               |\n| `highlight`             | 代码块的设置                                                 |\n| `highlight.enable`      | 开启语法高亮                                                 |\n| `highlight.auto_detect` | 如果未指定语言，则启用自动检测                               |\n| `highlight.line_number` | 显示行数                                                     |\n| `highlight.tab_replace` | 用 n 个空格替换 tabs；如果值为空，则不会替换 tabs            |\n\n### 分类 & 标签\n\n```\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n```\n\n| 参数               | 描述     |\n| ------------------ | -------- |\n| `default_category` | 默认分类 |\n| `category_map`     | 分类别名 |\n| `tag_map`          | 标签别名 |\n\n### 日期 / 时间格式\n\n```\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\nuse_date_for_updated: true\n```\n\n| 参数                   | 描述                                                         |\n| ---------------------- | ------------------------------------------------------------ |\n| `date_format`          | 日期格式                                                     |\n| `time_format`          | 时间格式                                                     |\n| `use_date_for_updated` | 如果前面没有提供更新日期，则使用 `post.updated` 中的发布日期。通常与 Git 工作流一起使用。 |\n\n提醒\n\nHexo 使用 [Moment.js](http://momentjs.com/) 来解析和显示时间。\n\n## 分页\n\n```\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n```\n\n| 参数             | 描述                                |\n| ---------------- | ----------------------------------- |\n| `per_page`       | 每页显示的文章量 (0 = 关闭分页功能) |\n| `pagination_dir` | 分页目录                            |\n\n## 扩展\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: \ntheme_config: \ndeploy:\nmeta_generator:\n```\n\n| 参数             | 描述                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| `theme`          | 当前主题名称。值为 `false` 时禁用主题                        |\n| `theme_config`   | 主题的配置文件。在这里放置的配置会覆盖主题目录下的 `_config.yml` 中的配置。 |\n| `deploy`         | 部署的设置                                                   |\n| `meta_generator` | [Meta generator](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#%E5%B1%9E%E6%80%A7) 标签。 值为 `false` 时 Hexo 不会在头部插入该标签。 |\n\n提醒\n\n下一篇文章将会提到 部署。\n\n\n\n# Hexo 命令详解\n\n下面介绍一些 Hexo 的基本命令。\n\n### `hexo init [folder]`\n\n这个命令是 Hexo 初始化命令。`[folder]` 表示你要初始化的文件夹。如果你要初始化本地，直接 `hexo init .` 。\n\n### `hexo new [layout] <title>`\n\n这个命令是新建文章或页面用的命令。其中 `[layout]` 表示他的模板（即页面或者文章），`<title>` 表示标题。\n\n用法：\n\n1. `hexo new post 001` ，表示新建了一个标题为 `001` 的文章。\n2. `hexo new page 001` ，表示新建了一个标题为 `001` 的页面。\n\n如果你不想在终端中新建文章或页面，可以直接在 `博客根目录/source/_post/` 目录下创建 Markdown 文件写**文章**。或者在 `博客根目录/source/` 目录下创建一个文件夹，然后在新文件夹里创建 `index.md` 写**页面**即可。\n\n提醒\n\n当你新建页面后，页面的链接就是你页面所在的文件夹的名字。\n\n例如：我在 `博客根目录/source/` 下新建了一个名为 `test` 的文件夹，然后在 `test` 文件夹下写 Markdown 文件，那么这个页面的链接就是 `网址/test`。\n\n### `hexo server`\n\n当你要在本地查看网站的时候，就可以用这个命令。\n\n默认在 `http://localhost:8080/` 这里，可能会不同，注意提示信息即可。\n\n提醒\n\n如果你想要换端口号（上面的 `8080` 就是端口号），可以在终端里输入 `hexo s -p 端口号`。\n\n### `hexo generate`\n\n这个命令是生成网站静态文件的时候用的，生成后网页将会放在根目录下面的 `public` 文件夹里。\n\n### `hexo deploy`\n\n这个命令用来部署网站，使用此命令将会把生成好的页面（即 `public` 文件夹里的内容）部署到指定的地方上。\n\n### `hexo clean`\n\n这个命令用来清空 `public` 文件夹。\n\n### `hexo version`\n\n这个命令用来输出你所使用的 Hexo 目前的版本号\n\n# 部署到 GitHub\n\n### 准备工作\n\n1. 如果没有账号，请点此前往 [GitHub](https://github.com/) 注册一个 GitHub 账号。\n2. 新建一个公开仓库，仓库名格式为 `your_username.github.io` 例如你的 GitHub 用户名是 `easyhexo`，那么你的仓库地址名称就应该是 `easyhexo.github.io`\n3. 创建完成后记下该仓库的 HTTPS/SSH 地址 一般格式为 `https://github.com/your_username/your_reponame.git` 在下一步会用到。\n\n### 安装[部署插件](https://github.com/hexojs/hexo-deployer-git)\n\n```\n$ npm install hexo-deployer-git --save\n$ npm install hexo-server --save\n```\n\n### 配置 Git\n\n如果你只是安装好了 Git 但没有配置过你的 Git ，那么现在需要做的第一件事情就是设置你的 Git 用户名和邮箱。 在 Git Bash 中执行以下两条命令配置你的用户名和邮箱，这里建议用户名和邮箱与你的 GitHub 用户名和邮箱保持一致。\n\n```\n$ git config --global user.name \"Your_user_name\"\n$ git config --global user.email \"Your_email@example.com\"\n```\n\n提醒\n\n每次 Git 提交时都会附带这两条信息，用于记录是谁提交的更新，并且会随更新内容一起被记录到历史记录中。简单说，是用来标记的你的身份的~\n\n用户名和邮箱根据你注册github的信息自行修改。\n\n### 然后生成密钥SSH key：\n\n```\nssh-keygen -t rsa -C \"Your_email@example.com\"\n```\n\n打开[github](https://github.com/)，在头像下面点击`settings`，再点击`SSH and GPG keys`，新建一个SSH，名字随便。\n\ngit bash中输入\n\n```\ncat ~/.ssh/id_rsa.pub\n```\n\n将输出的内容复制到框中，点击确定保存。\n\n输入`ssh -T git@github.com`，出现你的用户名，那就成功了。\n\n\n\n### 配置站点 `_config.yml` 文件\n\n```\ndeploy:\n  type: git   # 类型填git\n  repo: <repository url> # 你的Github仓库地址\n  branch: master  # 分支名称。默认填写 master 如果您使用的是 GitHub ，程序会尝试自动检测。\n  message:  # 提交信息可以自定义，不填的则默认为提交时间\n```\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:ThirtyZhang/ThirtyZhang.github.io.git\n  branch: master\n```\n\nrepository修改为你自己的github项目地址。**(最好使用SSH的地址,因为使用Http更换电脑后可能找不到该git地址)**\n\n### 发布到 GitHub\n\n在本地的 Hexo 站点根目录下，执行如下命令即可部署到 GitHub Pages 上。\n\n```\n$ hexo clean && hexo d -g\n```\n\n# 写文章、发布文章\n\n首先在博客根目录下右键打开git bash\n\n输入`hexo new post \"article title\"`，新建一篇文章。\n\n然后打开`博客根目录\\source\\_posts`的目录，可以发现下面多了一个文件夹和一个`.md`文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。\n\n编写完markdown文件后，根目录下输入`hexo g`生成静态网页，然后输入`hexo s`可以本地预览效果，最后输入`hexo d`上传到github上。这时打开你的github.io主页就能看到发布的文章啦\n\n## 创建文章命令详细介绍\n\n> `hexo new [layout]`\n>\n> 这个命令是新建文章或页面用的命令。其中 `[layout]` 表示他的模板（即页面或者文章），`<title>` 表示标题。\n>\n> 用法：\n>\n> 1. `hexo new post 001` ，表示新建了一个标题为 `001` 的文章。\n> 2. `hexo new page 001` ，表示新建了一个标题为 `001` 的页面。\n>\n> 如果你不想在终端中新建文章或页面，可以直接在 `博客根目录/source/_post/` 目录下创建 Markdown 文件写**文章**。或者在 `博客根目录/source/` 目录下创建一个文件夹，然后在新文件夹里创建 `index.md` 写**页面**即可。\n>\n> 提醒\n>\n> 当你新建页面后，页面的链接就是你页面所在的文件夹的名字。\n>\n> 例如：我在 `博客根目录/source/` 下新建了一个名为 `test` 的文件夹，然后在 `test` 文件夹下写 Markdown 文件，那么这个页面的链接就是 `网址/test`。\n\n\n\n# 推荐使用的主题链接\n\n推荐一个好用的主题地址\n\n[自己克隆的](https://github.com/ThirtyZhang/hexo-theme-matery)\n\n[原版的](https://github.com/blinkfox/hexo-theme-matery )\n\n下载后将 `hexo-theme-matery` 的文件夹复制到你 Hexo 的 `themes` 文件夹中即可\n\n然后参照其中的`DEADME-CN.md`文件进行配置\n\n# 最后我搭建好的成品效果图\n\n我个人的博客地址 : [点击访问](https://thirtyzhang.github.io/)\n\n![MyBlog](1579682303863.png)\n\n# 收藏博客\n\n**[milyyy](https://milyyy.github.io/)**\n\n[闪烁之狐](https://blinkfox.github.io/)\n\n[韦阳的博客](https://godweiyang.com/)\n\n# 备份博客源文件\n\n有时候我们想换一台电脑继续写博客，这时候就可以将博客目录下的所有源文件都上传到github上面。\n\n首先在github博客仓库下新建一个分支`hexo`，然后`git clone`到本地，把`.git`文件夹拿出来，放在博客根目录下。\n\n然后`git checkout hexo`切换到`hexo`分支，然后`git add .`，然后\n\n，最后`git push origin hexo`提交就行了。\n\n# 推荐另一个教程作参考\n\n## Hexo+Github博客搭建 完整小白教程\n\n<https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-10> \n\n\n\n**更多细节可查看官方文档** : [hexo](https://hexo.io/zh-cn/docs/configuration)\n\n\n\n# 遇到的问题解决办法\n\n## 端口占用\n\n- 提示“FATAL Port 4000 has been used. Try other port instead.”\n   在使用了$ hexo s命令预览博客效果后使用Control+C关闭\n   解决办法：\n\n还不行就重新手动制定端口号\n\n```\n$ hexo s -p 5000\n```\n\n##   未安装git部署插件\n\n- 提示“ERROR Deployer not found: git”\n  解决办法：\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n \n\n \n\n ","source":"_posts/EasyHexo搭建个人博客.md","raw":"---\ntitle: EasyHexo搭建个人博客\ntop: true\ncover: true\ntoc: true\nmathjax: true\ndate: 2020-01-21 16:58:04\npassword:\nsummary: Hexo 是一个快速、简洁且高效的博客框架\ntags: \n- 框架\ncategories:\n- 效率\n---\n\n\n\n<div  align = \"center\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=864622002&auto=1&height=66\"></iframe></div>\n\n# 安装\n\n## 添加国内镜像源\n\n如果没有梯子的话，可以使用阿里的国内镜像进行加速,不使用的话可能会有下载过慢或下载失败的问题\n\n```powershell\n$ npm config set registry https://registry.npm.taobao.org\n```\n\n## 认识 Hexo\n\n> Hexo 是一个快速、简洁且高效的博客框架，可以让你快速建立一个博客。\n\n> Hexo 使用 Node.js 编写。得益于 Node.js，使得 Hexo 生成上百个页面游刃有余。\n\n> Hexo 支持 GFM (GitHub Flavored Markdown) 的大部分功能。如果你不喜欢 Markdown ，你还可以换一个 Hexo 渲染插件。\n\n> Hexo 有许多插件，可以进行各种操作。\n\n## 学习 Hexo 之前，你需要有：\n\n- Node.js 基本知识\n- Git 基本知识\n- Markdown 基本知识\n- Html、css、JavaScript 基本知识\n- ······\n\n当然了，你可别被吓跑了。除了 Markdown ，其他都不用熟练掌握（事实上如果你不注意排版连 Markdown 都不用掌握，但最好还是学学吧 : **[Markdown语法 ](https://thirtyzhang.github.io/2020/01/21/markdown-yu-fa/)**）。如果你完全不会以上划线部分的知识，也没关系。只是简单地建个可以发文章的博客就好了。如果你要更上一层楼，那么以上被划掉的知识就是必备的啦~\n\n## 安装 Hexo\n\n在安装 Hexo 之前，你需要安装以下两个工具：\n\n- **[Git](https://git-scm.com/)**\n- **[Node.js](https://nodejs.org/)**\n\n## 安装 Git\n\n- Windows：下载并安装 [git](https://git-scm.com/download/win).\n- Mac：使用 [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) ：`brew install git`;或下载 [安装程序](http://sourceforge.net/projects/git-osx-installer/) 安装。\n- Linux (Ubuntu, Debian)：`sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS)：`sudo yum install git-core`\n- Linux (Arch 系列)：`sudo pacman -S git`\n\n提醒\n\n由于墙的原因，从上面的链接下载 git for windows 最好挂上一个代理，否则下载速度十分缓慢。也可以参考[这个页面](https://github.com/waylau/git-for-win)，收录了存储于百度云的下载地址。\n\n提醒\n\n如果你是 CentOS 服务器上的，可以直接使用 [HexoOneClickInstallation](https://github.com/PasserByJia/HexoOneClickInstallation) 这个脚本快速安装 Hexo。\n\n## 安装 Node.js\n\n安装 Node.js 的最佳方式是使用 [nvm](https://github.com/creationix/nvm)。\n\ncURL:\n\n```powershell\n$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\nWget:\n\n```powershell\n$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\n安装完成后，重启终端并执行下列命令即可安装 Node.js。\n\n```powershell\n$ nvm install stable\n```\n\n或者您也可以下载 [安装程序](http://nodejs.org/) 来安装。\n\n## 安装 Hexo\n\n安装好后，即可使用 npm 完成 Hexo 的安装。\n\n```powershell\n# 下面这两个命令好像是一样的效果,任选一个就可以了\n$ npm install -g hexo-cli\n$ npm install hexo-cli -g\n```\n输入`npm install`安装必备的组件 \n\n# 配置\n\n## 建立网站\n\n安装好 Hexo 后即可建立你的网站。\n\n首先建立一个文件夹。\n\n```powershell\nmkdir <your_blog_name>  # 建立你的网站根目录，名字可以自己修改\n```\n\n然后往这个文件夹里安装 Hexo。\n\n```powershell\nhexo init <your_blog_name>\n```\n\n再执行\n\n```powershell\nhexo s\n```\n\n浏览器输入\n\n```powershell\nhttp://localhost:4000/\n```\n\n就可以本地访问了\n\n这样就建立好网站了！\n\n**网站建立好后还需要做一些个性化配置,如:修改网站默认内容改为自己的内容**\n\n此部分内容可能过期，请见 [Hexo 官方文档](https://hexo.io/zh-cn/docs/configuration)。\n\n在 Hexo 根目录 `_config.yml` 这个文件里配置！\n\n警告\n\n在 YAML 语法中，冒号后面必须要有一个空格才能继续写下去。\n\n### 网站\n\n```\n# Site\ntitle:            \nsubtitle: \ndescription: \nkeywords:\nauthor: \nlanguage: \ntimezone: \n```\n\n| 参数          | 描述                                                         |\n| ------------- | ------------------------------------------------------------ |\n| `title`       | 网站标题                                                     |\n| `subtitle`    | 网站副标题                                                   |\n| `description` | 网站描述                                                     |\n| `keywords`    | 网站关键词                                                   |\n| `author`      | 作者名字                                                     |\n| `language`    | 网站使用的语言                                               |\n| `timezone`    | 网站时区：详见[时区列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) |\n\n### URL\n\n```\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: \nroot: \npermalink: :year/:month/:day/:title/\npermalink_defaults:\npretty_urls:\n  trailiing_index: true\n```\n\n| 参数                         | 描述                                                    |\n| ---------------------------- | ------------------------------------------------------- |\n| `url`                        | 网址                                                    |\n| `root`                       | 网站根目录                                              |\n| `permalink`                  | 文章的永久链接格式                                      |\n| `permalink_defaults`         | 永久链接中各部分的默认值                                |\n| `pretty_urls`                | 改写 `permalink` 的值来美化 URL                         |\n| `pretty_urls.trailing_index` | 是否在永久链接中保留尾部的 `index.html`，`false` 时去除 |\n\n提醒\n\n如果你的网站在子目录中，如：`https://yoursite.com/blog` ，就把你的 `url` 设为 `http://yoursite.com/blog` 并把 `root` 设为 `/blog/`。\n\n例如：\n\n```\n# 比如，一个页面的永久链接是 http://example.com/foo/bar/index.html\npretty_urls:\n  trailing_index: false\n# 此时页面的永久链接会变为 http://example.com/foo/bar/\n```\n\n### 目录\n\n```\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render: README.md\n```\n\n| 参数           | 描述                                                         |\n| -------------- | ------------------------------------------------------------ |\n| `source_dir`   | 资源文件夹                                                   |\n| `public_dir`   | 公共文件夹                                                   |\n| `tag_dir`      | 标签文件夹                                                   |\n| `archive_dir`  | 归档文件夹                                                   |\n| `category_dir` | 分类文件夹                                                   |\n| `code_dir`     | Include code 文件夹                                          |\n| `i18n_dir`     | 国际化文件夹                                                 |\n| `skip_render`  | 跳过文件的渲染。匹配到的文件将直接复制到 `public` 目录中。您可使用 [glob](https://github.com/micromatch/micromatch#extended-globbing) 表达式来匹配路径。 |\n\n提醒\n\n一般情况下，这部分是不需要修改的。\n\n例如：\n\n```\nskip_render: \"mypage/**/*\"\n# 将会直接将 `source/mypage/index.html` 和 `source/mypage/code.js` 不做改动地输出到 'public' 目录\n# 你也可以用这种方法来跳过对指定文章文件的渲染\nskip_render: \"_posts/test-post.md\"\n# 这将会忽略对 'test-post.md' 的渲染\n```\n\n### 文章\n\n```\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\nauto_spacing: false\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\n  enable: true\n  field: site\n  exclude: []\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: true\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n```\n\n| 参数                    | 描述                                                         |\n| ----------------------- | ------------------------------------------------------------ |\n| `new_post_name`         | 新文章的文件名称                                             |\n| `default_layout`        | 预设布局                                                     |\n| `auto_spacing`          | 在中文和英文之间加入空格                                     |\n| `titlecase`             | 把标题转换为 title case                                      |\n| `external_link`         | 在新标签中打开链接                                           |\n| `external_link.enable`  | 在新标签中打开链接                                           |\n| `external_link.field`   | 适用于整个网站或仅文章                                       |\n| `external_link.exclude` | 排除主机名。在适用时指定子域，包括 `www`                     |\n| `filename_case`         | 把文件名称转换为 (1) 小写或 (2) 大写                         |\n| `render_drafts`         | 显示草稿                                                     |\n| `post_asset_folder`     | 启动 [Asset 文件夹](https://hexo.io/zh-cn/docs/asset-folders) |\n| `relative_link`         | 把链接改为与根目录的相对位址                                 |\n| `future`                | 显示未来的文章                                               |\n| `highlight`             | 代码块的设置                                                 |\n| `highlight.enable`      | 开启语法高亮                                                 |\n| `highlight.auto_detect` | 如果未指定语言，则启用自动检测                               |\n| `highlight.line_number` | 显示行数                                                     |\n| `highlight.tab_replace` | 用 n 个空格替换 tabs；如果值为空，则不会替换 tabs            |\n\n### 分类 & 标签\n\n```\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n```\n\n| 参数               | 描述     |\n| ------------------ | -------- |\n| `default_category` | 默认分类 |\n| `category_map`     | 分类别名 |\n| `tag_map`          | 标签别名 |\n\n### 日期 / 时间格式\n\n```\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\nuse_date_for_updated: true\n```\n\n| 参数                   | 描述                                                         |\n| ---------------------- | ------------------------------------------------------------ |\n| `date_format`          | 日期格式                                                     |\n| `time_format`          | 时间格式                                                     |\n| `use_date_for_updated` | 如果前面没有提供更新日期，则使用 `post.updated` 中的发布日期。通常与 Git 工作流一起使用。 |\n\n提醒\n\nHexo 使用 [Moment.js](http://momentjs.com/) 来解析和显示时间。\n\n## 分页\n\n```\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n```\n\n| 参数             | 描述                                |\n| ---------------- | ----------------------------------- |\n| `per_page`       | 每页显示的文章量 (0 = 关闭分页功能) |\n| `pagination_dir` | 分页目录                            |\n\n## 扩展\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: \ntheme_config: \ndeploy:\nmeta_generator:\n```\n\n| 参数             | 描述                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| `theme`          | 当前主题名称。值为 `false` 时禁用主题                        |\n| `theme_config`   | 主题的配置文件。在这里放置的配置会覆盖主题目录下的 `_config.yml` 中的配置。 |\n| `deploy`         | 部署的设置                                                   |\n| `meta_generator` | [Meta generator](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#%E5%B1%9E%E6%80%A7) 标签。 值为 `false` 时 Hexo 不会在头部插入该标签。 |\n\n提醒\n\n下一篇文章将会提到 部署。\n\n\n\n# Hexo 命令详解\n\n下面介绍一些 Hexo 的基本命令。\n\n### `hexo init [folder]`\n\n这个命令是 Hexo 初始化命令。`[folder]` 表示你要初始化的文件夹。如果你要初始化本地，直接 `hexo init .` 。\n\n### `hexo new [layout] <title>`\n\n这个命令是新建文章或页面用的命令。其中 `[layout]` 表示他的模板（即页面或者文章），`<title>` 表示标题。\n\n用法：\n\n1. `hexo new post 001` ，表示新建了一个标题为 `001` 的文章。\n2. `hexo new page 001` ，表示新建了一个标题为 `001` 的页面。\n\n如果你不想在终端中新建文章或页面，可以直接在 `博客根目录/source/_post/` 目录下创建 Markdown 文件写**文章**。或者在 `博客根目录/source/` 目录下创建一个文件夹，然后在新文件夹里创建 `index.md` 写**页面**即可。\n\n提醒\n\n当你新建页面后，页面的链接就是你页面所在的文件夹的名字。\n\n例如：我在 `博客根目录/source/` 下新建了一个名为 `test` 的文件夹，然后在 `test` 文件夹下写 Markdown 文件，那么这个页面的链接就是 `网址/test`。\n\n### `hexo server`\n\n当你要在本地查看网站的时候，就可以用这个命令。\n\n默认在 `http://localhost:8080/` 这里，可能会不同，注意提示信息即可。\n\n提醒\n\n如果你想要换端口号（上面的 `8080` 就是端口号），可以在终端里输入 `hexo s -p 端口号`。\n\n### `hexo generate`\n\n这个命令是生成网站静态文件的时候用的，生成后网页将会放在根目录下面的 `public` 文件夹里。\n\n### `hexo deploy`\n\n这个命令用来部署网站，使用此命令将会把生成好的页面（即 `public` 文件夹里的内容）部署到指定的地方上。\n\n### `hexo clean`\n\n这个命令用来清空 `public` 文件夹。\n\n### `hexo version`\n\n这个命令用来输出你所使用的 Hexo 目前的版本号\n\n# 部署到 GitHub\n\n### 准备工作\n\n1. 如果没有账号，请点此前往 [GitHub](https://github.com/) 注册一个 GitHub 账号。\n2. 新建一个公开仓库，仓库名格式为 `your_username.github.io` 例如你的 GitHub 用户名是 `easyhexo`，那么你的仓库地址名称就应该是 `easyhexo.github.io`\n3. 创建完成后记下该仓库的 HTTPS/SSH 地址 一般格式为 `https://github.com/your_username/your_reponame.git` 在下一步会用到。\n\n### 安装[部署插件](https://github.com/hexojs/hexo-deployer-git)\n\n```\n$ npm install hexo-deployer-git --save\n$ npm install hexo-server --save\n```\n\n### 配置 Git\n\n如果你只是安装好了 Git 但没有配置过你的 Git ，那么现在需要做的第一件事情就是设置你的 Git 用户名和邮箱。 在 Git Bash 中执行以下两条命令配置你的用户名和邮箱，这里建议用户名和邮箱与你的 GitHub 用户名和邮箱保持一致。\n\n```\n$ git config --global user.name \"Your_user_name\"\n$ git config --global user.email \"Your_email@example.com\"\n```\n\n提醒\n\n每次 Git 提交时都会附带这两条信息，用于记录是谁提交的更新，并且会随更新内容一起被记录到历史记录中。简单说，是用来标记的你的身份的~\n\n用户名和邮箱根据你注册github的信息自行修改。\n\n### 然后生成密钥SSH key：\n\n```\nssh-keygen -t rsa -C \"Your_email@example.com\"\n```\n\n打开[github](https://github.com/)，在头像下面点击`settings`，再点击`SSH and GPG keys`，新建一个SSH，名字随便。\n\ngit bash中输入\n\n```\ncat ~/.ssh/id_rsa.pub\n```\n\n将输出的内容复制到框中，点击确定保存。\n\n输入`ssh -T git@github.com`，出现你的用户名，那就成功了。\n\n\n\n### 配置站点 `_config.yml` 文件\n\n```\ndeploy:\n  type: git   # 类型填git\n  repo: <repository url> # 你的Github仓库地址\n  branch: master  # 分支名称。默认填写 master 如果您使用的是 GitHub ，程序会尝试自动检测。\n  message:  # 提交信息可以自定义，不填的则默认为提交时间\n```\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:ThirtyZhang/ThirtyZhang.github.io.git\n  branch: master\n```\n\nrepository修改为你自己的github项目地址。**(最好使用SSH的地址,因为使用Http更换电脑后可能找不到该git地址)**\n\n### 发布到 GitHub\n\n在本地的 Hexo 站点根目录下，执行如下命令即可部署到 GitHub Pages 上。\n\n```\n$ hexo clean && hexo d -g\n```\n\n# 写文章、发布文章\n\n首先在博客根目录下右键打开git bash\n\n输入`hexo new post \"article title\"`，新建一篇文章。\n\n然后打开`博客根目录\\source\\_posts`的目录，可以发现下面多了一个文件夹和一个`.md`文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。\n\n编写完markdown文件后，根目录下输入`hexo g`生成静态网页，然后输入`hexo s`可以本地预览效果，最后输入`hexo d`上传到github上。这时打开你的github.io主页就能看到发布的文章啦\n\n## 创建文章命令详细介绍\n\n> `hexo new [layout]`\n>\n> 这个命令是新建文章或页面用的命令。其中 `[layout]` 表示他的模板（即页面或者文章），`<title>` 表示标题。\n>\n> 用法：\n>\n> 1. `hexo new post 001` ，表示新建了一个标题为 `001` 的文章。\n> 2. `hexo new page 001` ，表示新建了一个标题为 `001` 的页面。\n>\n> 如果你不想在终端中新建文章或页面，可以直接在 `博客根目录/source/_post/` 目录下创建 Markdown 文件写**文章**。或者在 `博客根目录/source/` 目录下创建一个文件夹，然后在新文件夹里创建 `index.md` 写**页面**即可。\n>\n> 提醒\n>\n> 当你新建页面后，页面的链接就是你页面所在的文件夹的名字。\n>\n> 例如：我在 `博客根目录/source/` 下新建了一个名为 `test` 的文件夹，然后在 `test` 文件夹下写 Markdown 文件，那么这个页面的链接就是 `网址/test`。\n\n\n\n# 推荐使用的主题链接\n\n推荐一个好用的主题地址\n\n[自己克隆的](https://github.com/ThirtyZhang/hexo-theme-matery)\n\n[原版的](https://github.com/blinkfox/hexo-theme-matery )\n\n下载后将 `hexo-theme-matery` 的文件夹复制到你 Hexo 的 `themes` 文件夹中即可\n\n然后参照其中的`DEADME-CN.md`文件进行配置\n\n# 最后我搭建好的成品效果图\n\n我个人的博客地址 : [点击访问](https://thirtyzhang.github.io/)\n\n![MyBlog](1579682303863.png)\n\n# 收藏博客\n\n**[milyyy](https://milyyy.github.io/)**\n\n[闪烁之狐](https://blinkfox.github.io/)\n\n[韦阳的博客](https://godweiyang.com/)\n\n# 备份博客源文件\n\n有时候我们想换一台电脑继续写博客，这时候就可以将博客目录下的所有源文件都上传到github上面。\n\n首先在github博客仓库下新建一个分支`hexo`，然后`git clone`到本地，把`.git`文件夹拿出来，放在博客根目录下。\n\n然后`git checkout hexo`切换到`hexo`分支，然后`git add .`，然后\n\n，最后`git push origin hexo`提交就行了。\n\n# 推荐另一个教程作参考\n\n## Hexo+Github博客搭建 完整小白教程\n\n<https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-10> \n\n\n\n**更多细节可查看官方文档** : [hexo](https://hexo.io/zh-cn/docs/configuration)\n\n\n\n# 遇到的问题解决办法\n\n## 端口占用\n\n- 提示“FATAL Port 4000 has been used. Try other port instead.”\n   在使用了$ hexo s命令预览博客效果后使用Control+C关闭\n   解决办法：\n\n还不行就重新手动制定端口号\n\n```\n$ hexo s -p 5000\n```\n\n##   未安装git部署插件\n\n- 提示“ERROR Deployer not found: git”\n  解决办法：\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n \n\n \n\n ","slug":"EasyHexo搭建个人博客","published":1,"updated":"2020-01-22T10:43:24.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5p78anm00038kq4bi0w5780","content":"<div align=\"center\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=864622002&auto=1&height=66\"></iframe></div>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"添加国内镜像源\"><a href=\"#添加国内镜像源\" class=\"headerlink\" title=\"添加国内镜像源\"></a>添加国内镜像源</h2><p>如果没有梯子的话，可以使用阿里的国内镜像进行加速,不使用的话可能会有下载过慢或下载失败的问题</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ npm config <span class=\"token function\">set</span> registry https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>registry<span class=\"token punctuation\">.</span>npm<span class=\"token punctuation\">.</span>taobao<span class=\"token punctuation\">.</span>org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"认识-Hexo\"><a href=\"#认识-Hexo\" class=\"headerlink\" title=\"认识 Hexo\"></a>认识 Hexo</h2><blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架，可以让你快速建立一个博客。</p>\n</blockquote>\n<blockquote>\n<p>Hexo 使用 Node.js 编写。得益于 Node.js，使得 Hexo 生成上百个页面游刃有余。</p>\n</blockquote>\n<blockquote>\n<p>Hexo 支持 GFM (GitHub Flavored Markdown) 的大部分功能。如果你不喜欢 Markdown ，你还可以换一个 Hexo 渲染插件。</p>\n</blockquote>\n<blockquote>\n<p>Hexo 有许多插件，可以进行各种操作。</p>\n</blockquote>\n<h2 id=\"学习-Hexo-之前，你需要有：\"><a href=\"#学习-Hexo-之前，你需要有：\" class=\"headerlink\" title=\"学习 Hexo 之前，你需要有：\"></a>学习 Hexo 之前，你需要有：</h2><ul>\n<li>Node.js 基本知识</li>\n<li>Git 基本知识</li>\n<li>Markdown 基本知识</li>\n<li>Html、css、JavaScript 基本知识</li>\n<li>······</li>\n</ul>\n<p>当然了，你可别被吓跑了。除了 Markdown ，其他都不用熟练掌握（事实上如果你不注意排版连 Markdown 都不用掌握，但最好还是学学吧 : <strong><a href=\"https://thirtyzhang.github.io/2020/01/21/markdown-yu-fa/\">Markdown语法 </a></strong>）。如果你完全不会以上划线部分的知识，也没关系。只是简单地建个可以发文章的博客就好了。如果你要更上一层楼，那么以上被划掉的知识就是必备的啦~</p>\n<h2 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><p>在安装 Hexo 之前，你需要安装以下两个工具：</p>\n<ul>\n<li><strong><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></strong></li>\n<li><strong><a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></strong></li>\n</ul>\n<h2 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h2><ul>\n<li>Windows：下载并安装 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>.</li>\n<li>Mac：使用 <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a> ：<code>brew install git</code>;或下载 <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">安装程序</a> 安装。</li>\n<li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li>\n<li>Linux (Arch 系列)：<code>sudo pacman -S git</code></li>\n</ul>\n<p>提醒</p>\n<p>由于墙的原因，从上面的链接下载 git for windows 最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href=\"https://github.com/waylau/git-for-win\" target=\"_blank\" rel=\"noopener\">这个页面</a>，收录了存储于百度云的下载地址。</p>\n<p>提醒</p>\n<p>如果你是 CentOS 服务器上的，可以直接使用 <a href=\"https://github.com/PasserByJia/HexoOneClickInstallation\" target=\"_blank\" rel=\"noopener\">HexoOneClickInstallation</a> 这个脚本快速安装 Hexo。</p>\n<h2 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h2><p>安装 Node.js 的最佳方式是使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a>。</p>\n<p>cURL:</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ curl https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>raw<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>creationix<span class=\"token operator\">/</span>nvm<span class=\"token operator\">/</span>v0<span class=\"token punctuation\">.</span>33<span class=\"token punctuation\">.</span>11<span class=\"token operator\">/</span>install<span class=\"token punctuation\">.</span>sh <span class=\"token punctuation\">|</span> sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Wget:</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ wget <span class=\"token operator\">-</span>qO<span class=\"token operator\">-</span> https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>raw<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>creationix<span class=\"token operator\">/</span>nvm<span class=\"token operator\">/</span>v0<span class=\"token punctuation\">.</span>33<span class=\"token punctuation\">.</span>11<span class=\"token operator\">/</span>install<span class=\"token punctuation\">.</span>sh <span class=\"token punctuation\">|</span> sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ nvm install stable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>或者您也可以下载 <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">安装程序</a> 来安装。</p>\n<h2 id=\"安装-Hexo-1\"><a href=\"#安装-Hexo-1\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><p>安装好后，即可使用 npm 完成 Hexo 的安装。</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\" spellcheck=\"true\"># 下面这两个命令好像是一样的效果,任选一个就可以了</span>\n$ npm install <span class=\"token operator\">-</span>g hexo<span class=\"token operator\">-</span><span class=\"token function\">cli</span>\n$ npm install hexo<span class=\"token operator\">-</span><span class=\"token function\">cli</span> <span class=\"token operator\">-</span>g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>输入<code>npm install</code>安装必备的组件 </p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"建立网站\"><a href=\"#建立网站\" class=\"headerlink\" title=\"建立网站\"></a>建立网站</h2><p>安装好 Hexo 后即可建立你的网站。</p>\n<p>首先建立一个文件夹。</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">mkdir &lt;your_blog_name>  <span class=\"token comment\" spellcheck=\"true\"># 建立你的网站根目录，名字可以自己修改</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后往这个文件夹里安装 Hexo。</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">hexo init &lt;your_blog_name><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再执行</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">hexo s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>浏览器输入</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">http:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost:4000<span class=\"token operator\">/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>就可以本地访问了</p>\n<p>这样就建立好网站了！</p>\n<p><strong>网站建立好后还需要做一些个性化配置,如:修改网站默认内容改为自己的内容</strong></p>\n<p>此部分内容可能过期，请见 <a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">Hexo 官方文档</a>。</p>\n<p>在 Hexo 根目录 <code>_config.yml</code> 这个文件里配置！</p>\n<p>警告</p>\n<p>在 YAML 语法中，冒号后面必须要有一个空格才能继续写下去。</p>\n<h3 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h3><pre><code># Site\ntitle:            \nsubtitle: \ndescription: \nkeywords:\nauthor: \nlanguage: \ntimezone: </code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>title</code></td>\n<td>网站标题</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>网站副标题</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>网站描述</td>\n</tr>\n<tr>\n<td><code>keywords</code></td>\n<td>网站关键词</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>作者名字</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>网站使用的语言</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>网站时区：详见<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">时区列表</a></td>\n</tr>\n</tbody></table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><pre><code># URL\n## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;\nurl: \nroot: \npermalink: :year/:month/:day/:title/\npermalink_defaults:\npretty_urls:\n  trailiing_index: true</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>网址</td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>网站根目录</td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>文章的永久链接格式</td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>永久链接中各部分的默认值</td>\n</tr>\n<tr>\n<td><code>pretty_urls</code></td>\n<td>改写 <code>permalink</code> 的值来美化 URL</td>\n</tr>\n<tr>\n<td><code>pretty_urls.trailing_index</code></td>\n<td>是否在永久链接中保留尾部的 <code>index.html</code>，<code>false</code> 时去除</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>如果你的网站在子目录中，如：<code>https://yoursite.com/blog</code> ，就把你的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p>\n<p>例如：</p>\n<pre><code># 比如，一个页面的永久链接是 http://example.com/foo/bar/index.html\npretty_urls:\n  trailing_index: false\n# 此时页面的永久链接会变为 http://example.com/foo/bar/</code></pre><h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><pre><code># Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render: README.md</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>source_dir</code></td>\n<td>资源文件夹</td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>公共文件夹</td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>标签文件夹</td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>归档文件夹</td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>分类文件夹</td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code 文件夹</td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>国际化文件夹</td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>跳过文件的渲染。匹配到的文件将直接复制到 <code>public</code> 目录中。您可使用 <a href=\"https://github.com/micromatch/micromatch#extended-globbing\" target=\"_blank\" rel=\"noopener\">glob</a> 表达式来匹配路径。</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>一般情况下，这部分是不需要修改的。</p>\n<p>例如：</p>\n<pre><code>skip_render: &quot;mypage/**/*&quot;\n# 将会直接将 `source/mypage/index.html` 和 `source/mypage/code.js` 不做改动地输出到 &#39;public&#39; 目录\n# 你也可以用这种方法来跳过对指定文章文件的渲染\nskip_render: &quot;_posts/test-post.md&quot;\n# 这将会忽略对 &#39;test-post.md&#39; 的渲染</code></pre><h3 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h3><pre><code># Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\nauto_spacing: false\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\n  enable: true\n  field: site\n  exclude: []\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: true\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>new_post_name</code></td>\n<td>新文章的文件名称</td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>预设布局</td>\n</tr>\n<tr>\n<td><code>auto_spacing</code></td>\n<td>在中文和英文之间加入空格</td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>把标题转换为 title case</td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>在新标签中打开链接</td>\n</tr>\n<tr>\n<td><code>external_link.enable</code></td>\n<td>在新标签中打开链接</td>\n</tr>\n<tr>\n<td><code>external_link.field</code></td>\n<td>适用于整个网站或仅文章</td>\n</tr>\n<tr>\n<td><code>external_link.exclude</code></td>\n<td>排除主机名。在适用时指定子域，包括 <code>www</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>把文件名称转换为 (1) 小写或 (2) 大写</td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>显示草稿</td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>启动 <a href=\"https://hexo.io/zh-cn/docs/asset-folders\" target=\"_blank\" rel=\"noopener\">Asset 文件夹</a></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>把链接改为与根目录的相对位址</td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>显示未来的文章</td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>代码块的设置</td>\n</tr>\n<tr>\n<td><code>highlight.enable</code></td>\n<td>开启语法高亮</td>\n</tr>\n<tr>\n<td><code>highlight.auto_detect</code></td>\n<td>如果未指定语言，则启用自动检测</td>\n</tr>\n<tr>\n<td><code>highlight.line_number</code></td>\n<td>显示行数</td>\n</tr>\n<tr>\n<td><code>highlight.tab_replace</code></td>\n<td>用 n 个空格替换 tabs；如果值为空，则不会替换 tabs</td>\n</tr>\n</tbody></table>\n<h3 id=\"分类-amp-标签\"><a href=\"#分类-amp-标签\" class=\"headerlink\" title=\"分类 &amp; 标签\"></a>分类 &amp; 标签</h3><pre><code># Category &amp; Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>default_category</code></td>\n<td>默认分类</td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>分类别名</td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>标签别名</td>\n</tr>\n</tbody></table>\n<h3 id=\"日期-时间格式\"><a href=\"#日期-时间格式\" class=\"headerlink\" title=\"日期 / 时间格式\"></a>日期 / 时间格式</h3><pre><code># Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\nuse_date_for_updated: true</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>date_format</code></td>\n<td>日期格式</td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>时间格式</td>\n</tr>\n<tr>\n<td><code>use_date_for_updated</code></td>\n<td>如果前面没有提供更新日期，则使用 <code>post.updated</code> 中的发布日期。通常与 Git 工作流一起使用。</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>Hexo 使用 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 来解析和显示时间。</p>\n<h2 id=\"分页\"><a href=\"#分页\" class=\"headerlink\" title=\"分页\"></a>分页</h2><pre><code># Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>per_page</code></td>\n<td>每页显示的文章量 (0 = 关闭分页功能)</td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>分页目录</td>\n</tr>\n</tbody></table>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><pre><code># Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: \ntheme_config: \ndeploy:\nmeta_generator:</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>theme</code></td>\n<td>当前主题名称。值为 <code>false</code> 时禁用主题</td>\n</tr>\n<tr>\n<td><code>theme_config</code></td>\n<td>主题的配置文件。在这里放置的配置会覆盖主题目录下的 <code>_config.yml</code> 中的配置。</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>部署的设置</td>\n</tr>\n<tr>\n<td><code>meta_generator</code></td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#%E5%B1%9E%E6%80%A7\" target=\"_blank\" rel=\"noopener\">Meta generator</a> 标签。 值为 <code>false</code> 时 Hexo 不会在头部插入该标签。</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>下一篇文章将会提到 部署。</p>\n<h1 id=\"Hexo-命令详解\"><a href=\"#Hexo-命令详解\" class=\"headerlink\" title=\"Hexo 命令详解\"></a>Hexo 命令详解</h1><p>下面介绍一些 Hexo 的基本命令。</p>\n<h3 id=\"hexo-init-folder\"><a href=\"#hexo-init-folder\" class=\"headerlink\" title=\"hexo init [folder]\"></a><code>hexo init [folder]</code></h3><p>这个命令是 Hexo 初始化命令。<code>[folder]</code> 表示你要初始化的文件夹。如果你要初始化本地，直接 <code>hexo init .</code> 。</p>\n<h3 id=\"hexo-new-layout-lt-title-gt\"><a href=\"#hexo-new-layout-lt-title-gt\" class=\"headerlink\" title=\"hexo new [layout] &lt;title&gt;\"></a><code>hexo new [layout] &lt;title&gt;</code></h3><p>这个命令是新建文章或页面用的命令。其中 <code>[layout]</code> 表示他的模板（即页面或者文章），<code>&lt;title&gt;</code> 表示标题。</p>\n<p>用法：</p>\n<ol>\n<li><code>hexo new post 001</code> ，表示新建了一个标题为 <code>001</code> 的文章。</li>\n<li><code>hexo new page 001</code> ，表示新建了一个标题为 <code>001</code> 的页面。</li>\n</ol>\n<p>如果你不想在终端中新建文章或页面，可以直接在 <code>博客根目录/source/_post/</code> 目录下创建 Markdown 文件写<strong>文章</strong>。或者在 <code>博客根目录/source/</code> 目录下创建一个文件夹，然后在新文件夹里创建 <code>index.md</code> 写<strong>页面</strong>即可。</p>\n<p>提醒</p>\n<p>当你新建页面后，页面的链接就是你页面所在的文件夹的名字。</p>\n<p>例如：我在 <code>博客根目录/source/</code> 下新建了一个名为 <code>test</code> 的文件夹，然后在 <code>test</code> 文件夹下写 Markdown 文件，那么这个页面的链接就是 <code>网址/test</code>。</p>\n<h3 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo server\"></a><code>hexo server</code></h3><p>当你要在本地查看网站的时候，就可以用这个命令。</p>\n<p>默认在 <code>http://localhost:8080/</code> 这里，可能会不同，注意提示信息即可。</p>\n<p>提醒</p>\n<p>如果你想要换端口号（上面的 <code>8080</code> 就是端口号），可以在终端里输入 <code>hexo s -p 端口号</code>。</p>\n<h3 id=\"hexo-generate\"><a href=\"#hexo-generate\" class=\"headerlink\" title=\"hexo generate\"></a><code>hexo generate</code></h3><p>这个命令是生成网站静态文件的时候用的，生成后网页将会放在根目录下面的 <code>public</code> 文件夹里。</p>\n<h3 id=\"hexo-deploy\"><a href=\"#hexo-deploy\" class=\"headerlink\" title=\"hexo deploy\"></a><code>hexo deploy</code></h3><p>这个命令用来部署网站，使用此命令将会把生成好的页面（即 <code>public</code> 文件夹里的内容）部署到指定的地方上。</p>\n<h3 id=\"hexo-clean\"><a href=\"#hexo-clean\" class=\"headerlink\" title=\"hexo clean\"></a><code>hexo clean</code></h3><p>这个命令用来清空 <code>public</code> 文件夹。</p>\n<h3 id=\"hexo-version\"><a href=\"#hexo-version\" class=\"headerlink\" title=\"hexo version\"></a><code>hexo version</code></h3><p>这个命令用来输出你所使用的 Hexo 目前的版本号</p>\n<h1 id=\"部署到-GitHub\"><a href=\"#部署到-GitHub\" class=\"headerlink\" title=\"部署到 GitHub\"></a>部署到 GitHub</h1><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ol>\n<li>如果没有账号，请点此前往 <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a> 注册一个 GitHub 账号。</li>\n<li>新建一个公开仓库，仓库名格式为 <code>your_username.github.io</code> 例如你的 GitHub 用户名是 <code>easyhexo</code>，那么你的仓库地址名称就应该是 <code>easyhexo.github.io</code></li>\n<li>创建完成后记下该仓库的 HTTPS/SSH 地址 一般格式为 <code>https://github.com/your_username/your_reponame.git</code> 在下一步会用到。</li>\n</ol>\n<h3 id=\"安装部署插件\"><a href=\"#安装部署插件\" class=\"headerlink\" title=\"安装部署插件\"></a>安装<a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">部署插件</a></h3><pre><code>$ npm install hexo-deployer-git --save\n$ npm install hexo-server --save</code></pre><h3 id=\"配置-Git\"><a href=\"#配置-Git\" class=\"headerlink\" title=\"配置 Git\"></a>配置 Git</h3><p>如果你只是安装好了 Git 但没有配置过你的 Git ，那么现在需要做的第一件事情就是设置你的 Git 用户名和邮箱。 在 Git Bash 中执行以下两条命令配置你的用户名和邮箱，这里建议用户名和邮箱与你的 GitHub 用户名和邮箱保持一致。</p>\n<pre><code>$ git config --global user.name &quot;Your_user_name&quot;\n$ git config --global user.email &quot;Your_email@example.com&quot;</code></pre><p>提醒</p>\n<p>每次 Git 提交时都会附带这两条信息，用于记录是谁提交的更新，并且会随更新内容一起被记录到历史记录中。简单说，是用来标记的你的身份的~</p>\n<p>用户名和邮箱根据你注册github的信息自行修改。</p>\n<h3 id=\"然后生成密钥SSH-key：\"><a href=\"#然后生成密钥SSH-key：\" class=\"headerlink\" title=\"然后生成密钥SSH key：\"></a>然后生成密钥SSH key：</h3><pre><code>ssh-keygen -t rsa -C &quot;Your_email@example.com&quot;</code></pre><p>打开<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字随便。</p>\n<p>git bash中输入</p>\n<pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p>将输出的内容复制到框中，点击确定保存。</p>\n<p>输入<code>ssh -T git@github.com</code>，出现你的用户名，那就成功了。</p>\n<h3 id=\"配置站点-config-yml-文件\"><a href=\"#配置站点-config-yml-文件\" class=\"headerlink\" title=\"配置站点 _config.yml 文件\"></a>配置站点 <code>_config.yml</code> 文件</h3><pre><code>deploy:\n  type: git   # 类型填git\n  repo: &lt;repository url&gt; # 你的Github仓库地址\n  branch: master  # 分支名称。默认填写 master 如果您使用的是 GitHub ，程序会尝试自动检测。\n  message:  # 提交信息可以自定义，不填的则默认为提交时间</code></pre><pre><code>deploy:\n  type: git\n  repository: git@github.com:ThirtyZhang/ThirtyZhang.github.io.git\n  branch: master</code></pre><p>repository修改为你自己的github项目地址。<strong>(最好使用SSH的地址,因为使用Http更换电脑后可能找不到该git地址)</strong></p>\n<h3 id=\"发布到-GitHub\"><a href=\"#发布到-GitHub\" class=\"headerlink\" title=\"发布到 GitHub\"></a>发布到 GitHub</h3><p>在本地的 Hexo 站点根目录下，执行如下命令即可部署到 GitHub Pages 上。</p>\n<pre><code>$ hexo clean &amp;&amp; hexo d -g</code></pre><h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开git bash</p>\n<p>输入<code>hexo new post &quot;article title&quot;</code>，新建一篇文章。</p>\n<p>然后打开<code>博客根目录\\source\\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>\n<p>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到github上。这时打开你的github.io主页就能看到发布的文章啦</p>\n<h2 id=\"创建文章命令详细介绍\"><a href=\"#创建文章命令详细介绍\" class=\"headerlink\" title=\"创建文章命令详细介绍\"></a>创建文章命令详细介绍</h2><blockquote>\n<p><code>hexo new [layout]</code></p>\n<p>这个命令是新建文章或页面用的命令。其中 <code>[layout]</code> 表示他的模板（即页面或者文章），<code>&lt;title&gt;</code> 表示标题。</p>\n<p>用法：</p>\n<ol>\n<li><code>hexo new post 001</code> ，表示新建了一个标题为 <code>001</code> 的文章。</li>\n<li><code>hexo new page 001</code> ，表示新建了一个标题为 <code>001</code> 的页面。</li>\n</ol>\n<p>如果你不想在终端中新建文章或页面，可以直接在 <code>博客根目录/source/_post/</code> 目录下创建 Markdown 文件写<strong>文章</strong>。或者在 <code>博客根目录/source/</code> 目录下创建一个文件夹，然后在新文件夹里创建 <code>index.md</code> 写<strong>页面</strong>即可。</p>\n<p>提醒</p>\n<p>当你新建页面后，页面的链接就是你页面所在的文件夹的名字。</p>\n<p>例如：我在 <code>博客根目录/source/</code> 下新建了一个名为 <code>test</code> 的文件夹，然后在 <code>test</code> 文件夹下写 Markdown 文件，那么这个页面的链接就是 <code>网址/test</code>。</p>\n</blockquote>\n<h1 id=\"推荐使用的主题链接\"><a href=\"#推荐使用的主题链接\" class=\"headerlink\" title=\"推荐使用的主题链接\"></a>推荐使用的主题链接</h1><p>推荐一个好用的主题地址</p>\n<p><a href=\"https://github.com/ThirtyZhang/hexo-theme-matery\" target=\"_blank\" rel=\"noopener\">自己克隆的</a></p>\n<p><a href=\"https://github.com/blinkfox/hexo-theme-matery\" target=\"_blank\" rel=\"noopener\">原版的</a></p>\n<p>下载后将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可</p>\n<p>然后参照其中的<code>DEADME-CN.md</code>文件进行配置</p>\n<h1 id=\"最后我搭建好的成品效果图\"><a href=\"#最后我搭建好的成品效果图\" class=\"headerlink\" title=\"最后我搭建好的成品效果图\"></a>最后我搭建好的成品效果图</h1><p>我个人的博客地址 : <a href=\"https://thirtyzhang.github.io/\">点击访问</a></p>\n<p><img src=\"1579682303863.png\" alt=\"MyBlog\"></p>\n<h1 id=\"收藏博客\"><a href=\"#收藏博客\" class=\"headerlink\" title=\"收藏博客\"></a>收藏博客</h1><p><strong><a href=\"https://milyyy.github.io/\" target=\"_blank\" rel=\"noopener\">milyyy</a></strong></p>\n<p><a href=\"https://blinkfox.github.io/\" target=\"_blank\" rel=\"noopener\">闪烁之狐</a></p>\n<p><a href=\"https://godweiyang.com/\" target=\"_blank\" rel=\"noopener\">韦阳的博客</a></p>\n<h1 id=\"备份博客源文件\"><a href=\"#备份博客源文件\" class=\"headerlink\" title=\"备份博客源文件\"></a>备份博客源文件</h1><p>有时候我们想换一台电脑继续写博客，这时候就可以将博客目录下的所有源文件都上传到github上面。</p>\n<p>首先在github博客仓库下新建一个分支<code>hexo</code>，然后<code>git clone</code>到本地，把<code>.git</code>文件夹拿出来，放在博客根目录下。</p>\n<p>然后<code>git checkout hexo</code>切换到<code>hexo</code>分支，然后<code>git add .</code>，然后</p>\n<p>，最后<code>git push origin hexo</code>提交就行了。</p>\n<h1 id=\"推荐另一个教程作参考\"><a href=\"#推荐另一个教程作参考\" class=\"headerlink\" title=\"推荐另一个教程作参考\"></a>推荐另一个教程作参考</h1><h2 id=\"Hexo-Github博客搭建-完整小白教程\"><a href=\"#Hexo-Github博客搭建-完整小白教程\" class=\"headerlink\" title=\"Hexo+Github博客搭建 完整小白教程\"></a>Hexo+Github博客搭建 完整小白教程</h2><p><a href=\"https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-10\" target=\"_blank\" rel=\"noopener\">https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-10</a> </p>\n<p><strong>更多细节可查看官方文档</strong> : <a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">hexo</a></p>\n<h1 id=\"遇到的问题解决办法\"><a href=\"#遇到的问题解决办法\" class=\"headerlink\" title=\"遇到的问题解决办法\"></a>遇到的问题解决办法</h1><h2 id=\"端口占用\"><a href=\"#端口占用\" class=\"headerlink\" title=\"端口占用\"></a>端口占用</h2><ul>\n<li>提示“FATAL Port 4000 has been used. Try other port instead.”<br> 在使用了$ hexo s命令预览博客效果后使用Control+C关闭<br> 解决办法：</li>\n</ul>\n<p>还不行就重新手动制定端口号</p>\n<pre><code>$ hexo s -p 5000</code></pre><h2 id=\"未安装git部署插件\"><a href=\"#未安装git部署插件\" class=\"headerlink\" title=\"未安装git部署插件\"></a>未安装git部署插件</h2><ul>\n<li>提示“ERROR Deployer not found: git”<br>解决办法：</li>\n</ul>\n<pre><code>$ npm install hexo-deployer-git --save</code></pre>","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<div align=\"center\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=864622002&auto=1&height=66\"></iframe></div>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"添加国内镜像源\"><a href=\"#添加国内镜像源\" class=\"headerlink\" title=\"添加国内镜像源\"></a>添加国内镜像源</h2><p>如果没有梯子的话，可以使用阿里的国内镜像进行加速,不使用的话可能会有下载过慢或下载失败的问题</p>\n<pre><code class=\"powershell\">$ npm config set registry https://registry.npm.taobao.org</code></pre>\n<h2 id=\"认识-Hexo\"><a href=\"#认识-Hexo\" class=\"headerlink\" title=\"认识 Hexo\"></a>认识 Hexo</h2><blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架，可以让你快速建立一个博客。</p>\n</blockquote>\n<blockquote>\n<p>Hexo 使用 Node.js 编写。得益于 Node.js，使得 Hexo 生成上百个页面游刃有余。</p>\n</blockquote>\n<blockquote>\n<p>Hexo 支持 GFM (GitHub Flavored Markdown) 的大部分功能。如果你不喜欢 Markdown ，你还可以换一个 Hexo 渲染插件。</p>\n</blockquote>\n<blockquote>\n<p>Hexo 有许多插件，可以进行各种操作。</p>\n</blockquote>\n<h2 id=\"学习-Hexo-之前，你需要有：\"><a href=\"#学习-Hexo-之前，你需要有：\" class=\"headerlink\" title=\"学习 Hexo 之前，你需要有：\"></a>学习 Hexo 之前，你需要有：</h2><ul>\n<li>Node.js 基本知识</li>\n<li>Git 基本知识</li>\n<li>Markdown 基本知识</li>\n<li>Html、css、JavaScript 基本知识</li>\n<li>······</li>\n</ul>\n<p>当然了，你可别被吓跑了。除了 Markdown ，其他都不用熟练掌握（事实上如果你不注意排版连 Markdown 都不用掌握，但最好还是学学吧 : <strong><a href=\"https://thirtyzhang.github.io/2020/01/21/markdown-yu-fa/\">Markdown语法 </a></strong>）。如果你完全不会以上划线部分的知识，也没关系。只是简单地建个可以发文章的博客就好了。如果你要更上一层楼，那么以上被划掉的知识就是必备的啦~</p>\n<h2 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><p>在安装 Hexo 之前，你需要安装以下两个工具：</p>\n<ul>\n<li><strong><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></strong></li>\n<li><strong><a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></strong></li>\n</ul>\n<h2 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h2><ul>\n<li>Windows：下载并安装 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>.</li>\n<li>Mac：使用 <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a> ：<code>brew install git</code>;或下载 <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">安装程序</a> 安装。</li>\n<li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li>\n<li>Linux (Arch 系列)：<code>sudo pacman -S git</code></li>\n</ul>\n<p>提醒</p>\n<p>由于墙的原因，从上面的链接下载 git for windows 最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href=\"https://github.com/waylau/git-for-win\" target=\"_blank\" rel=\"noopener\">这个页面</a>，收录了存储于百度云的下载地址。</p>\n<p>提醒</p>\n<p>如果你是 CentOS 服务器上的，可以直接使用 <a href=\"https://github.com/PasserByJia/HexoOneClickInstallation\" target=\"_blank\" rel=\"noopener\">HexoOneClickInstallation</a> 这个脚本快速安装 Hexo。</p>\n<h2 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h2><p>安装 Node.js 的最佳方式是使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a>。</p>\n<p>cURL:</p>\n<pre><code class=\"powershell\">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</code></pre>\n<p>Wget:</p>\n<pre><code class=\"powershell\">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</code></pre>\n<p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>\n<pre><code class=\"powershell\">$ nvm install stable</code></pre>\n<p>或者您也可以下载 <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">安装程序</a> 来安装。</p>\n<h2 id=\"安装-Hexo-1\"><a href=\"#安装-Hexo-1\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><p>安装好后，即可使用 npm 完成 Hexo 的安装。</p>\n<pre><code class=\"powershell\"># 下面这两个命令好像是一样的效果,任选一个就可以了\n$ npm install -g hexo-cli\n$ npm install hexo-cli -g</code></pre>\n<p>输入<code>npm install</code>安装必备的组件 </p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"建立网站\"><a href=\"#建立网站\" class=\"headerlink\" title=\"建立网站\"></a>建立网站</h2><p>安装好 Hexo 后即可建立你的网站。</p>\n<p>首先建立一个文件夹。</p>\n<pre><code class=\"powershell\">mkdir &lt;your_blog_name&gt;  # 建立你的网站根目录，名字可以自己修改</code></pre>\n<p>然后往这个文件夹里安装 Hexo。</p>\n<pre><code class=\"powershell\">hexo init &lt;your_blog_name&gt;</code></pre>\n<p>再执行</p>\n<pre><code class=\"powershell\">hexo s</code></pre>\n<p>浏览器输入</p>\n<pre><code class=\"powershell\">http://localhost:4000/</code></pre>\n<p>就可以本地访问了</p>\n<p>这样就建立好网站了！</p>\n<p><strong>网站建立好后还需要做一些个性化配置,如:修改网站默认内容改为自己的内容</strong></p>\n<p>此部分内容可能过期，请见 <a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">Hexo 官方文档</a>。</p>\n<p>在 Hexo 根目录 <code>_config.yml</code> 这个文件里配置！</p>\n<p>警告</p>\n<p>在 YAML 语法中，冒号后面必须要有一个空格才能继续写下去。</p>\n<h3 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h3><pre><code># Site\ntitle:            \nsubtitle: \ndescription: \nkeywords:\nauthor: \nlanguage: \ntimezone: </code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>title</code></td>\n<td>网站标题</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>网站副标题</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>网站描述</td>\n</tr>\n<tr>\n<td><code>keywords</code></td>\n<td>网站关键词</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>作者名字</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>网站使用的语言</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>网站时区：详见<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">时区列表</a></td>\n</tr>\n</tbody></table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><pre><code># URL\n## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;\nurl: \nroot: \npermalink: :year/:month/:day/:title/\npermalink_defaults:\npretty_urls:\n  trailiing_index: true</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>网址</td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>网站根目录</td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>文章的永久链接格式</td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>永久链接中各部分的默认值</td>\n</tr>\n<tr>\n<td><code>pretty_urls</code></td>\n<td>改写 <code>permalink</code> 的值来美化 URL</td>\n</tr>\n<tr>\n<td><code>pretty_urls.trailing_index</code></td>\n<td>是否在永久链接中保留尾部的 <code>index.html</code>，<code>false</code> 时去除</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>如果你的网站在子目录中，如：<code>https://yoursite.com/blog</code> ，就把你的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p>\n<p>例如：</p>\n<pre><code># 比如，一个页面的永久链接是 http://example.com/foo/bar/index.html\npretty_urls:\n  trailing_index: false\n# 此时页面的永久链接会变为 http://example.com/foo/bar/</code></pre><h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><pre><code># Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render: README.md</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>source_dir</code></td>\n<td>资源文件夹</td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>公共文件夹</td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>标签文件夹</td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>归档文件夹</td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>分类文件夹</td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code 文件夹</td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>国际化文件夹</td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>跳过文件的渲染。匹配到的文件将直接复制到 <code>public</code> 目录中。您可使用 <a href=\"https://github.com/micromatch/micromatch#extended-globbing\" target=\"_blank\" rel=\"noopener\">glob</a> 表达式来匹配路径。</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>一般情况下，这部分是不需要修改的。</p>\n<p>例如：</p>\n<pre><code>skip_render: &quot;mypage/**/*&quot;\n# 将会直接将 `source/mypage/index.html` 和 `source/mypage/code.js` 不做改动地输出到 &#39;public&#39; 目录\n# 你也可以用这种方法来跳过对指定文章文件的渲染\nskip_render: &quot;_posts/test-post.md&quot;\n# 这将会忽略对 &#39;test-post.md&#39; 的渲染</code></pre><h3 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h3><pre><code># Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\nauto_spacing: false\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\n  enable: true\n  field: site\n  exclude: []\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: true\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>new_post_name</code></td>\n<td>新文章的文件名称</td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>预设布局</td>\n</tr>\n<tr>\n<td><code>auto_spacing</code></td>\n<td>在中文和英文之间加入空格</td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>把标题转换为 title case</td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>在新标签中打开链接</td>\n</tr>\n<tr>\n<td><code>external_link.enable</code></td>\n<td>在新标签中打开链接</td>\n</tr>\n<tr>\n<td><code>external_link.field</code></td>\n<td>适用于整个网站或仅文章</td>\n</tr>\n<tr>\n<td><code>external_link.exclude</code></td>\n<td>排除主机名。在适用时指定子域，包括 <code>www</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>把文件名称转换为 (1) 小写或 (2) 大写</td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>显示草稿</td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>启动 <a href=\"https://hexo.io/zh-cn/docs/asset-folders\" target=\"_blank\" rel=\"noopener\">Asset 文件夹</a></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>把链接改为与根目录的相对位址</td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>显示未来的文章</td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>代码块的设置</td>\n</tr>\n<tr>\n<td><code>highlight.enable</code></td>\n<td>开启语法高亮</td>\n</tr>\n<tr>\n<td><code>highlight.auto_detect</code></td>\n<td>如果未指定语言，则启用自动检测</td>\n</tr>\n<tr>\n<td><code>highlight.line_number</code></td>\n<td>显示行数</td>\n</tr>\n<tr>\n<td><code>highlight.tab_replace</code></td>\n<td>用 n 个空格替换 tabs；如果值为空，则不会替换 tabs</td>\n</tr>\n</tbody></table>\n<h3 id=\"分类-amp-标签\"><a href=\"#分类-amp-标签\" class=\"headerlink\" title=\"分类 &amp; 标签\"></a>分类 &amp; 标签</h3><pre><code># Category &amp; Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>default_category</code></td>\n<td>默认分类</td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>分类别名</td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>标签别名</td>\n</tr>\n</tbody></table>\n<h3 id=\"日期-时间格式\"><a href=\"#日期-时间格式\" class=\"headerlink\" title=\"日期 / 时间格式\"></a>日期 / 时间格式</h3><pre><code># Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\nuse_date_for_updated: true</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>date_format</code></td>\n<td>日期格式</td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>时间格式</td>\n</tr>\n<tr>\n<td><code>use_date_for_updated</code></td>\n<td>如果前面没有提供更新日期，则使用 <code>post.updated</code> 中的发布日期。通常与 Git 工作流一起使用。</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>Hexo 使用 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 来解析和显示时间。</p>\n<h2 id=\"分页\"><a href=\"#分页\" class=\"headerlink\" title=\"分页\"></a>分页</h2><pre><code># Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>per_page</code></td>\n<td>每页显示的文章量 (0 = 关闭分页功能)</td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>分页目录</td>\n</tr>\n</tbody></table>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><pre><code># Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: \ntheme_config: \ndeploy:\nmeta_generator:</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>theme</code></td>\n<td>当前主题名称。值为 <code>false</code> 时禁用主题</td>\n</tr>\n<tr>\n<td><code>theme_config</code></td>\n<td>主题的配置文件。在这里放置的配置会覆盖主题目录下的 <code>_config.yml</code> 中的配置。</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>部署的设置</td>\n</tr>\n<tr>\n<td><code>meta_generator</code></td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#%E5%B1%9E%E6%80%A7\" target=\"_blank\" rel=\"noopener\">Meta generator</a> 标签。 值为 <code>false</code> 时 Hexo 不会在头部插入该标签。</td>\n</tr>\n</tbody></table>\n<p>提醒</p>\n<p>下一篇文章将会提到 部署。</p>\n<h1 id=\"Hexo-命令详解\"><a href=\"#Hexo-命令详解\" class=\"headerlink\" title=\"Hexo 命令详解\"></a>Hexo 命令详解</h1><p>下面介绍一些 Hexo 的基本命令。</p>\n<h3 id=\"hexo-init-folder\"><a href=\"#hexo-init-folder\" class=\"headerlink\" title=\"hexo init [folder]\"></a><code>hexo init [folder]</code></h3><p>这个命令是 Hexo 初始化命令。<code>[folder]</code> 表示你要初始化的文件夹。如果你要初始化本地，直接 <code>hexo init .</code> 。</p>\n<h3 id=\"hexo-new-layout-lt-title-gt\"><a href=\"#hexo-new-layout-lt-title-gt\" class=\"headerlink\" title=\"hexo new [layout] &lt;title&gt;\"></a><code>hexo new [layout] &lt;title&gt;</code></h3><p>这个命令是新建文章或页面用的命令。其中 <code>[layout]</code> 表示他的模板（即页面或者文章），<code>&lt;title&gt;</code> 表示标题。</p>\n<p>用法：</p>\n<ol>\n<li><code>hexo new post 001</code> ，表示新建了一个标题为 <code>001</code> 的文章。</li>\n<li><code>hexo new page 001</code> ，表示新建了一个标题为 <code>001</code> 的页面。</li>\n</ol>\n<p>如果你不想在终端中新建文章或页面，可以直接在 <code>博客根目录/source/_post/</code> 目录下创建 Markdown 文件写<strong>文章</strong>。或者在 <code>博客根目录/source/</code> 目录下创建一个文件夹，然后在新文件夹里创建 <code>index.md</code> 写<strong>页面</strong>即可。</p>\n<p>提醒</p>\n<p>当你新建页面后，页面的链接就是你页面所在的文件夹的名字。</p>\n<p>例如：我在 <code>博客根目录/source/</code> 下新建了一个名为 <code>test</code> 的文件夹，然后在 <code>test</code> 文件夹下写 Markdown 文件，那么这个页面的链接就是 <code>网址/test</code>。</p>\n<h3 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo server\"></a><code>hexo server</code></h3><p>当你要在本地查看网站的时候，就可以用这个命令。</p>\n<p>默认在 <code>http://localhost:8080/</code> 这里，可能会不同，注意提示信息即可。</p>\n<p>提醒</p>\n<p>如果你想要换端口号（上面的 <code>8080</code> 就是端口号），可以在终端里输入 <code>hexo s -p 端口号</code>。</p>\n<h3 id=\"hexo-generate\"><a href=\"#hexo-generate\" class=\"headerlink\" title=\"hexo generate\"></a><code>hexo generate</code></h3><p>这个命令是生成网站静态文件的时候用的，生成后网页将会放在根目录下面的 <code>public</code> 文件夹里。</p>\n<h3 id=\"hexo-deploy\"><a href=\"#hexo-deploy\" class=\"headerlink\" title=\"hexo deploy\"></a><code>hexo deploy</code></h3><p>这个命令用来部署网站，使用此命令将会把生成好的页面（即 <code>public</code> 文件夹里的内容）部署到指定的地方上。</p>\n<h3 id=\"hexo-clean\"><a href=\"#hexo-clean\" class=\"headerlink\" title=\"hexo clean\"></a><code>hexo clean</code></h3><p>这个命令用来清空 <code>public</code> 文件夹。</p>\n<h3 id=\"hexo-version\"><a href=\"#hexo-version\" class=\"headerlink\" title=\"hexo version\"></a><code>hexo version</code></h3><p>这个命令用来输出你所使用的 Hexo 目前的版本号</p>\n<h1 id=\"部署到-GitHub\"><a href=\"#部署到-GitHub\" class=\"headerlink\" title=\"部署到 GitHub\"></a>部署到 GitHub</h1><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ol>\n<li>如果没有账号，请点此前往 <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a> 注册一个 GitHub 账号。</li>\n<li>新建一个公开仓库，仓库名格式为 <code>your_username.github.io</code> 例如你的 GitHub 用户名是 <code>easyhexo</code>，那么你的仓库地址名称就应该是 <code>easyhexo.github.io</code></li>\n<li>创建完成后记下该仓库的 HTTPS/SSH 地址 一般格式为 <code>https://github.com/your_username/your_reponame.git</code> 在下一步会用到。</li>\n</ol>\n<h3 id=\"安装部署插件\"><a href=\"#安装部署插件\" class=\"headerlink\" title=\"安装部署插件\"></a>安装<a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">部署插件</a></h3><pre><code>$ npm install hexo-deployer-git --save\n$ npm install hexo-server --save</code></pre><h3 id=\"配置-Git\"><a href=\"#配置-Git\" class=\"headerlink\" title=\"配置 Git\"></a>配置 Git</h3><p>如果你只是安装好了 Git 但没有配置过你的 Git ，那么现在需要做的第一件事情就是设置你的 Git 用户名和邮箱。 在 Git Bash 中执行以下两条命令配置你的用户名和邮箱，这里建议用户名和邮箱与你的 GitHub 用户名和邮箱保持一致。</p>\n<pre><code>$ git config --global user.name &quot;Your_user_name&quot;\n$ git config --global user.email &quot;Your_email@example.com&quot;</code></pre><p>提醒</p>\n<p>每次 Git 提交时都会附带这两条信息，用于记录是谁提交的更新，并且会随更新内容一起被记录到历史记录中。简单说，是用来标记的你的身份的~</p>\n<p>用户名和邮箱根据你注册github的信息自行修改。</p>\n<h3 id=\"然后生成密钥SSH-key：\"><a href=\"#然后生成密钥SSH-key：\" class=\"headerlink\" title=\"然后生成密钥SSH key：\"></a>然后生成密钥SSH key：</h3><pre><code>ssh-keygen -t rsa -C &quot;Your_email@example.com&quot;</code></pre><p>打开<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字随便。</p>\n<p>git bash中输入</p>\n<pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p>将输出的内容复制到框中，点击确定保存。</p>\n<p>输入<code>ssh -T git@github.com</code>，出现你的用户名，那就成功了。</p>\n<h3 id=\"配置站点-config-yml-文件\"><a href=\"#配置站点-config-yml-文件\" class=\"headerlink\" title=\"配置站点 _config.yml 文件\"></a>配置站点 <code>_config.yml</code> 文件</h3><pre><code>deploy:\n  type: git   # 类型填git\n  repo: &lt;repository url&gt; # 你的Github仓库地址\n  branch: master  # 分支名称。默认填写 master 如果您使用的是 GitHub ，程序会尝试自动检测。\n  message:  # 提交信息可以自定义，不填的则默认为提交时间</code></pre><pre><code>deploy:\n  type: git\n  repository: git@github.com:ThirtyZhang/ThirtyZhang.github.io.git\n  branch: master</code></pre><p>repository修改为你自己的github项目地址。<strong>(最好使用SSH的地址,因为使用Http更换电脑后可能找不到该git地址)</strong></p>\n<h3 id=\"发布到-GitHub\"><a href=\"#发布到-GitHub\" class=\"headerlink\" title=\"发布到 GitHub\"></a>发布到 GitHub</h3><p>在本地的 Hexo 站点根目录下，执行如下命令即可部署到 GitHub Pages 上。</p>\n<pre><code>$ hexo clean &amp;&amp; hexo d -g</code></pre><h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开git bash</p>\n<p>输入<code>hexo new post &quot;article title&quot;</code>，新建一篇文章。</p>\n<p>然后打开<code>博客根目录\\source\\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>\n<p>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到github上。这时打开你的github.io主页就能看到发布的文章啦</p>\n<h2 id=\"创建文章命令详细介绍\"><a href=\"#创建文章命令详细介绍\" class=\"headerlink\" title=\"创建文章命令详细介绍\"></a>创建文章命令详细介绍</h2><blockquote>\n<p><code>hexo new [layout]</code></p>\n<p>这个命令是新建文章或页面用的命令。其中 <code>[layout]</code> 表示他的模板（即页面或者文章），<code>&lt;title&gt;</code> 表示标题。</p>\n<p>用法：</p>\n<ol>\n<li><code>hexo new post 001</code> ，表示新建了一个标题为 <code>001</code> 的文章。</li>\n<li><code>hexo new page 001</code> ，表示新建了一个标题为 <code>001</code> 的页面。</li>\n</ol>\n<p>如果你不想在终端中新建文章或页面，可以直接在 <code>博客根目录/source/_post/</code> 目录下创建 Markdown 文件写<strong>文章</strong>。或者在 <code>博客根目录/source/</code> 目录下创建一个文件夹，然后在新文件夹里创建 <code>index.md</code> 写<strong>页面</strong>即可。</p>\n<p>提醒</p>\n<p>当你新建页面后，页面的链接就是你页面所在的文件夹的名字。</p>\n<p>例如：我在 <code>博客根目录/source/</code> 下新建了一个名为 <code>test</code> 的文件夹，然后在 <code>test</code> 文件夹下写 Markdown 文件，那么这个页面的链接就是 <code>网址/test</code>。</p>\n</blockquote>\n<h1 id=\"推荐使用的主题链接\"><a href=\"#推荐使用的主题链接\" class=\"headerlink\" title=\"推荐使用的主题链接\"></a>推荐使用的主题链接</h1><p>推荐一个好用的主题地址</p>\n<p><a href=\"https://github.com/ThirtyZhang/hexo-theme-matery\" target=\"_blank\" rel=\"noopener\">自己克隆的</a></p>\n<p><a href=\"https://github.com/blinkfox/hexo-theme-matery\" target=\"_blank\" rel=\"noopener\">原版的</a></p>\n<p>下载后将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可</p>\n<p>然后参照其中的<code>DEADME-CN.md</code>文件进行配置</p>\n<h1 id=\"最后我搭建好的成品效果图\"><a href=\"#最后我搭建好的成品效果图\" class=\"headerlink\" title=\"最后我搭建好的成品效果图\"></a>最后我搭建好的成品效果图</h1><p>我个人的博客地址 : <a href=\"https://thirtyzhang.github.io/\">点击访问</a></p>\n<p><img src=\"1579682303863.png\" alt=\"MyBlog\"></p>\n<h1 id=\"收藏博客\"><a href=\"#收藏博客\" class=\"headerlink\" title=\"收藏博客\"></a>收藏博客</h1><p><strong><a href=\"https://milyyy.github.io/\" target=\"_blank\" rel=\"noopener\">milyyy</a></strong></p>\n<p><a href=\"https://blinkfox.github.io/\" target=\"_blank\" rel=\"noopener\">闪烁之狐</a></p>\n<p><a href=\"https://godweiyang.com/\" target=\"_blank\" rel=\"noopener\">韦阳的博客</a></p>\n<h1 id=\"备份博客源文件\"><a href=\"#备份博客源文件\" class=\"headerlink\" title=\"备份博客源文件\"></a>备份博客源文件</h1><p>有时候我们想换一台电脑继续写博客，这时候就可以将博客目录下的所有源文件都上传到github上面。</p>\n<p>首先在github博客仓库下新建一个分支<code>hexo</code>，然后<code>git clone</code>到本地，把<code>.git</code>文件夹拿出来，放在博客根目录下。</p>\n<p>然后<code>git checkout hexo</code>切换到<code>hexo</code>分支，然后<code>git add .</code>，然后</p>\n<p>，最后<code>git push origin hexo</code>提交就行了。</p>\n<h1 id=\"推荐另一个教程作参考\"><a href=\"#推荐另一个教程作参考\" class=\"headerlink\" title=\"推荐另一个教程作参考\"></a>推荐另一个教程作参考</h1><h2 id=\"Hexo-Github博客搭建-完整小白教程\"><a href=\"#Hexo-Github博客搭建-完整小白教程\" class=\"headerlink\" title=\"Hexo+Github博客搭建 完整小白教程\"></a>Hexo+Github博客搭建 完整小白教程</h2><p><a href=\"https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-10\" target=\"_blank\" rel=\"noopener\">https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-10</a> </p>\n<p><strong>更多细节可查看官方文档</strong> : <a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">hexo</a></p>\n<h1 id=\"遇到的问题解决办法\"><a href=\"#遇到的问题解决办法\" class=\"headerlink\" title=\"遇到的问题解决办法\"></a>遇到的问题解决办法</h1><h2 id=\"端口占用\"><a href=\"#端口占用\" class=\"headerlink\" title=\"端口占用\"></a>端口占用</h2><ul>\n<li>提示“FATAL Port 4000 has been used. Try other port instead.”<br> 在使用了$ hexo s命令预览博客效果后使用Control+C关闭<br> 解决办法：</li>\n</ul>\n<p>还不行就重新手动制定端口号</p>\n<pre><code>$ hexo s -p 5000</code></pre><h2 id=\"未安装git部署插件\"><a href=\"#未安装git部署插件\" class=\"headerlink\" title=\"未安装git部署插件\"></a>未安装git部署插件</h2><ul>\n<li>提示“ERROR Deployer not found: git”<br>解决办法：</li>\n</ul>\n<pre><code>$ npm install hexo-deployer-git --save</code></pre>"},{"title":"GitHub国内访问加速","top":false,"cover":true,"toc":true,"mathjax":true,"date":"2020-01-21T02:46:53.000Z","password":null,"summary":"解决GitHub有时会连接超时,或者下载速度慢","_content":"\n# Github加速\n\n## 原理\n\n修改系统hosts文件的办法，绕过国内dns解析，直接访问GitHub的CDN节点\n\n访问网址时先搜索hosts文件，如果由网址对应的ip则不需要dns域名解析，因此可以将网址的ip配成静态ip，减少解析过程，提高访问速度。 \n\n## 操作\n\n**修改hosts**\n\n> hosts文件最下面增加（win10的位置为C:\\Windows\\System32\\drivers\\etc，先拷到其他地方修改后再覆盖该文件夹hosts文件）：\n\n```powershell\n# Github加速\n192.30.253.113     github.com\n185.199.108.153    github.github.io\n151.101.72.133     assets-cdn.github.com\n151.101.185.194    github.global.ssl.fastly.net\n# Github加速结束\n```\n\n刷新系统DNS缓存 ****\n\n> 打开`cmd console:`\n>\n> > `Windows+X` 打开系统命令行（管理员身份）或 PowerShell \n\n> 执行：`ipconfig /flushdns`\n\n到这里就完成了,下面介绍下获取最新地址方法\n\n##  获取GitHub官方CDN地址 \n\n**打开:**[<https://www.ipaddress.com/> ](https://www.ipaddress.com/)\n\n```powershell\n# Github加速\n192.30.253.113     github.com\n185.199.108.153    github.github.io\n151.101.72.133     assets-cdn.github.com\n151.101.185.194    github.global.ssl.fastly.net\n# Github加速结束\n```\n\n查询上述IP后面的网址,更新前面的IP地址,并重新修改`hosts`文件","source":"_posts/Github国内访问加速.md","raw":"---\ntitle: GitHub国内访问加速\ntop: false\ncover: true\ntoc: true\nmathjax: true\ndate: 2020-01-21 10:46:53\npassword:\nsummary: 解决GitHub有时会连接超时,或者下载速度慢\ntags:\n- 工具\ncategories:\n- 效率\n---\n\n# Github加速\n\n## 原理\n\n修改系统hosts文件的办法，绕过国内dns解析，直接访问GitHub的CDN节点\n\n访问网址时先搜索hosts文件，如果由网址对应的ip则不需要dns域名解析，因此可以将网址的ip配成静态ip，减少解析过程，提高访问速度。 \n\n## 操作\n\n**修改hosts**\n\n> hosts文件最下面增加（win10的位置为C:\\Windows\\System32\\drivers\\etc，先拷到其他地方修改后再覆盖该文件夹hosts文件）：\n\n```powershell\n# Github加速\n192.30.253.113     github.com\n185.199.108.153    github.github.io\n151.101.72.133     assets-cdn.github.com\n151.101.185.194    github.global.ssl.fastly.net\n# Github加速结束\n```\n\n刷新系统DNS缓存 ****\n\n> 打开`cmd console:`\n>\n> > `Windows+X` 打开系统命令行（管理员身份）或 PowerShell \n\n> 执行：`ipconfig /flushdns`\n\n到这里就完成了,下面介绍下获取最新地址方法\n\n##  获取GitHub官方CDN地址 \n\n**打开:**[<https://www.ipaddress.com/> ](https://www.ipaddress.com/)\n\n```powershell\n# Github加速\n192.30.253.113     github.com\n185.199.108.153    github.github.io\n151.101.72.133     assets-cdn.github.com\n151.101.185.194    github.global.ssl.fastly.net\n# Github加速结束\n```\n\n查询上述IP后面的网址,更新前面的IP地址,并重新修改`hosts`文件","slug":"Github国内访问加速","published":1,"updated":"2020-01-21T13:12:05.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5p78ant00078kq4nl6n49m5","content":"<h1 id=\"Github加速\"><a href=\"#Github加速\" class=\"headerlink\" title=\"Github加速\"></a>Github加速</h1><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>修改系统hosts文件的办法，绕过国内dns解析，直接访问GitHub的CDN节点</p>\n<p>访问网址时先搜索hosts文件，如果由网址对应的ip则不需要dns域名解析，因此可以将网址的ip配成静态ip，减少解析过程，提高访问速度。 </p>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><p><strong>修改hosts</strong></p>\n<blockquote>\n<p>hosts文件最下面增加（win10的位置为C:\\Windows\\System32\\drivers\\etc，先拷到其他地方修改后再覆盖该文件夹hosts文件）：</p>\n</blockquote>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\" spellcheck=\"true\"># Github加速</span>\n192<span class=\"token punctuation\">.</span>30<span class=\"token punctuation\">.</span>253<span class=\"token punctuation\">.</span>113     github<span class=\"token punctuation\">.</span>com\n185<span class=\"token punctuation\">.</span>199<span class=\"token punctuation\">.</span>108<span class=\"token punctuation\">.</span>153    github<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io\n151<span class=\"token punctuation\">.</span>101<span class=\"token punctuation\">.</span>72<span class=\"token punctuation\">.</span>133     assets<span class=\"token operator\">-</span>cdn<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>com\n151<span class=\"token punctuation\">.</span>101<span class=\"token punctuation\">.</span>185<span class=\"token punctuation\">.</span>194    github<span class=\"token punctuation\">.</span>global<span class=\"token punctuation\">.</span>ssl<span class=\"token punctuation\">.</span>fastly<span class=\"token punctuation\">.</span>net\n<span class=\"token comment\" spellcheck=\"true\"># Github加速结束</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>刷新系统DNS缓存 <em>**</em></p>\n<blockquote>\n<p>打开<code>cmd console:</code></p>\n<blockquote>\n<p><code>Windows+X</code> 打开系统命令行（管理员身份）或 PowerShell </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>执行：<code>ipconfig /flushdns</code></p>\n</blockquote>\n<p>到这里就完成了,下面介绍下获取最新地址方法</p>\n<h2 id=\"获取GitHub官方CDN地址\"><a href=\"#获取GitHub官方CDN地址\" class=\"headerlink\" title=\"获取GitHub官方CDN地址\"></a>获取GitHub官方CDN地址</h2><p><strong>打开:</strong><a href=\"https://www.ipaddress.com/\" target=\"_blank\" rel=\"noopener\"><a href=\"https://www.ipaddress.com/\" target=\"_blank\" rel=\"noopener\">https://www.ipaddress.com/</a> </a></p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\" spellcheck=\"true\"># Github加速</span>\n192<span class=\"token punctuation\">.</span>30<span class=\"token punctuation\">.</span>253<span class=\"token punctuation\">.</span>113     github<span class=\"token punctuation\">.</span>com\n185<span class=\"token punctuation\">.</span>199<span class=\"token punctuation\">.</span>108<span class=\"token punctuation\">.</span>153    github<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io\n151<span class=\"token punctuation\">.</span>101<span class=\"token punctuation\">.</span>72<span class=\"token punctuation\">.</span>133     assets<span class=\"token operator\">-</span>cdn<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>com\n151<span class=\"token punctuation\">.</span>101<span class=\"token punctuation\">.</span>185<span class=\"token punctuation\">.</span>194    github<span class=\"token punctuation\">.</span>global<span class=\"token punctuation\">.</span>ssl<span class=\"token punctuation\">.</span>fastly<span class=\"token punctuation\">.</span>net\n<span class=\"token comment\" spellcheck=\"true\"># Github加速结束</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>查询上述IP后面的网址,更新前面的IP地址,并重新修改<code>hosts</code>文件</p>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<h1 id=\"Github加速\"><a href=\"#Github加速\" class=\"headerlink\" title=\"Github加速\"></a>Github加速</h1><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>修改系统hosts文件的办法，绕过国内dns解析，直接访问GitHub的CDN节点</p>\n<p>访问网址时先搜索hosts文件，如果由网址对应的ip则不需要dns域名解析，因此可以将网址的ip配成静态ip，减少解析过程，提高访问速度。 </p>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><p><strong>修改hosts</strong></p>\n<blockquote>\n<p>hosts文件最下面增加（win10的位置为C:\\Windows\\System32\\drivers\\etc，先拷到其他地方修改后再覆盖该文件夹hosts文件）：</p>\n</blockquote>\n<pre><code class=\"powershell\"># Github加速\n192.30.253.113     github.com\n185.199.108.153    github.github.io\n151.101.72.133     assets-cdn.github.com\n151.101.185.194    github.global.ssl.fastly.net\n# Github加速结束</code></pre>\n<p>刷新系统DNS缓存 <em>**</em></p>\n<blockquote>\n<p>打开<code>cmd console:</code></p>\n<blockquote>\n<p><code>Windows+X</code> 打开系统命令行（管理员身份）或 PowerShell </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>执行：<code>ipconfig /flushdns</code></p>\n</blockquote>\n<p>到这里就完成了,下面介绍下获取最新地址方法</p>\n<h2 id=\"获取GitHub官方CDN地址\"><a href=\"#获取GitHub官方CDN地址\" class=\"headerlink\" title=\"获取GitHub官方CDN地址\"></a>获取GitHub官方CDN地址</h2><p><strong>打开:</strong><a href=\"https://www.ipaddress.com/\" target=\"_blank\" rel=\"noopener\"><a href=\"https://www.ipaddress.com/\" target=\"_blank\" rel=\"noopener\">https://www.ipaddress.com/</a> </a></p>\n<pre><code class=\"powershell\"># Github加速\n192.30.253.113     github.com\n185.199.108.153    github.github.io\n151.101.72.133     assets-cdn.github.com\n151.101.185.194    github.global.ssl.fastly.net\n# Github加速结束</code></pre>\n<p>查询上述IP后面的网址,更新前面的IP地址,并重新修改<code>hosts</code>文件</p>\n"},{"title":"Markdown语法","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-01-20T17:44:56.000Z","password":null,"summary":"简单介绍下Markdown语法和书写工具及快捷键","_content":"\n<div align = \"middle\"> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=28892385&auto=1&height=66\"></iframe></div>\n\n# Markdown语法\n\n## 标题\n\n|     **语法**     |\n| :--------------: |\n|   `#`一级标题    |\n|   `##`二级标题   |\n|  `###`三级标题   |\n|  `####`四级标题  |\n| `#####`五级标题  |\n| `######`六级标题 |\n\n![png](2.png)\n\n\n\n\n\n## 字体样式\n\n`*斜体*`  *斜体*\n\n`_斜体_ `  _斜体_\n\n`**粗体**`  **粗体**\n\n`***加粗斜体***`***加粗斜体***\n\n`~~删除线~~`  ~~删除线~~\n\n## 插入图片或连接\n\n`[描述](图片路径或者URL)`  描述可以不写\n\n## 分割线三种方式\n\n你可以在一行中用三个以上的星号`*`、减号`-`、底线`_`来建立一个分隔线，行内不能有其他东西。 \n\n`---`\n\n---\n\n`***`\n\n***\n\n`___`\n\n___\n\n\n\n## 代码块\n\n\n\n**行内式**：如果在一个行内需要引用代码，只要用反引号`引起来就好（一般在ESC键下方，和~同一个键） \n\n\\`用两个反引号\\` `行内/单行代码块`\n\n\n\n**多行代码块与语法高亮**：在需要高亮的代码块的前一行及后一行使用三个单反引号“`”包裹 \n\n\\`\\`\\`js\n\n三个反引号可以表明代码语言,这里写的js\n\n\\`\\`\\`\\`\n\n```js\n<script>\n    console.log(\"我是js代码块\");\n</script>\n```\n\n\n\n## 引用\n\n在被引用的文本前加上`>`符号，以及一个空格就可以了，如一个`>`符号会产生一次缩进\n\n`>引用` \n\n> 引用\n\n`>>引用`\n\n> > 引用\n\n`>>>引用`\n\n> > > 引用\n\n\n\n## 列表\n\n**无序列表**\n\n使用 *，+，- 都可以表示无序列表。任意选用一个即可, 注意：符号后面一定要有一个空格，起到缩进的作用。 \n\n`- 无序列表`- \n\n`* 无序列表`\n\n`+ 无序列表`\n\n- 无序列表\n- 无序列表\n- 无序列表\n\n**有序列表**\n\n使用数字和一个英文句点表示有序列表。 注意：英文句点后面一定要有一个空格，起到缩进的作用。 \n\n`1.有序列表`\n\n`2.有序列表`\n\n`3.有序列表`\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n\n## 转义字符`\\`\n\n如果在使用符号时与Markdown语法冲突,可以在符号前面加上`\\`即可正常显示\n\n如在使用列表时，只要是数字后面加上英文的点，就会无意间产生列表，比如2017.12.30 这时候想表达的是日期，有些软件把它被误认为是列表。解决方式：在每个点前面加上\\就可以了\n\n##  表格\n\n`|姓名|性别|分数|`\n\n`|:-:|:-:|:-:|`\n\n`|小明|男|100|`\n\n`|小明|男|100|`\n\n\n\n表格对齐方式：我们可以指定表格单元格的对齐方式，冒号在左边表示左对齐，右边表示有对齐，两边都有表示居中 \n\n| 姓名 | 性别 | 分数 |\n| :--: | :--: | :--: |\n| 小明 |  男  | 100  |\n| 小明 |  男  | 100  |\n\n## 结束语\n\nMarkdown语法学到这里日常已经够用了,下面介绍一款实时预览的 Markdown 文本编辑器\n\n# Typora\n\nTypora 是一款**支持实时预览的 Markdown 文本编辑器**。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是**完全免费**的。 \n\n点击下载:[Typora](https://www.typora.io/ )\n\n##  GFM 标准\n\n [GFM 标准](https://github.github.com/gfm/)，它是由著名代码托管网站 [GitHub](https://github.com/) 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 `文件 - 偏好设置 - Markdown 语法偏好 - 严格模式` 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 [这篇文档](http://support.typora.io/Strict-Mode/) 中查看。\n\n##  设置图片\n\nTypora 支持在拖动或 `Ctrl + V` 网络图片后自动将其保存到本地。你可以在 `文件 - 偏好设置 - 编辑器 - 图片插入` 中选择复制到哪个路径，什么情况下需要复制。\n\n![](3.png)\n\n","source":"_posts/Markdown语法.md","raw":"---\ntitle: Markdown语法\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-01-21 01:44:56\npassword:\nsummary: 简单介绍下Markdown语法和书写工具及快捷键\ntags:\n- 工具\ncategories:\n- 效率\n---\n\n<div align = \"middle\"> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=28892385&auto=1&height=66\"></iframe></div>\n\n# Markdown语法\n\n## 标题\n\n|     **语法**     |\n| :--------------: |\n|   `#`一级标题    |\n|   `##`二级标题   |\n|  `###`三级标题   |\n|  `####`四级标题  |\n| `#####`五级标题  |\n| `######`六级标题 |\n\n![png](2.png)\n\n\n\n\n\n## 字体样式\n\n`*斜体*`  *斜体*\n\n`_斜体_ `  _斜体_\n\n`**粗体**`  **粗体**\n\n`***加粗斜体***`***加粗斜体***\n\n`~~删除线~~`  ~~删除线~~\n\n## 插入图片或连接\n\n`[描述](图片路径或者URL)`  描述可以不写\n\n## 分割线三种方式\n\n你可以在一行中用三个以上的星号`*`、减号`-`、底线`_`来建立一个分隔线，行内不能有其他东西。 \n\n`---`\n\n---\n\n`***`\n\n***\n\n`___`\n\n___\n\n\n\n## 代码块\n\n\n\n**行内式**：如果在一个行内需要引用代码，只要用反引号`引起来就好（一般在ESC键下方，和~同一个键） \n\n\\`用两个反引号\\` `行内/单行代码块`\n\n\n\n**多行代码块与语法高亮**：在需要高亮的代码块的前一行及后一行使用三个单反引号“`”包裹 \n\n\\`\\`\\`js\n\n三个反引号可以表明代码语言,这里写的js\n\n\\`\\`\\`\\`\n\n```js\n<script>\n    console.log(\"我是js代码块\");\n</script>\n```\n\n\n\n## 引用\n\n在被引用的文本前加上`>`符号，以及一个空格就可以了，如一个`>`符号会产生一次缩进\n\n`>引用` \n\n> 引用\n\n`>>引用`\n\n> > 引用\n\n`>>>引用`\n\n> > > 引用\n\n\n\n## 列表\n\n**无序列表**\n\n使用 *，+，- 都可以表示无序列表。任意选用一个即可, 注意：符号后面一定要有一个空格，起到缩进的作用。 \n\n`- 无序列表`- \n\n`* 无序列表`\n\n`+ 无序列表`\n\n- 无序列表\n- 无序列表\n- 无序列表\n\n**有序列表**\n\n使用数字和一个英文句点表示有序列表。 注意：英文句点后面一定要有一个空格，起到缩进的作用。 \n\n`1.有序列表`\n\n`2.有序列表`\n\n`3.有序列表`\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n\n## 转义字符`\\`\n\n如果在使用符号时与Markdown语法冲突,可以在符号前面加上`\\`即可正常显示\n\n如在使用列表时，只要是数字后面加上英文的点，就会无意间产生列表，比如2017.12.30 这时候想表达的是日期，有些软件把它被误认为是列表。解决方式：在每个点前面加上\\就可以了\n\n##  表格\n\n`|姓名|性别|分数|`\n\n`|:-:|:-:|:-:|`\n\n`|小明|男|100|`\n\n`|小明|男|100|`\n\n\n\n表格对齐方式：我们可以指定表格单元格的对齐方式，冒号在左边表示左对齐，右边表示有对齐，两边都有表示居中 \n\n| 姓名 | 性别 | 分数 |\n| :--: | :--: | :--: |\n| 小明 |  男  | 100  |\n| 小明 |  男  | 100  |\n\n## 结束语\n\nMarkdown语法学到这里日常已经够用了,下面介绍一款实时预览的 Markdown 文本编辑器\n\n# Typora\n\nTypora 是一款**支持实时预览的 Markdown 文本编辑器**。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是**完全免费**的。 \n\n点击下载:[Typora](https://www.typora.io/ )\n\n##  GFM 标准\n\n [GFM 标准](https://github.github.com/gfm/)，它是由著名代码托管网站 [GitHub](https://github.com/) 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 `文件 - 偏好设置 - Markdown 语法偏好 - 严格模式` 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 [这篇文档](http://support.typora.io/Strict-Mode/) 中查看。\n\n##  设置图片\n\nTypora 支持在拖动或 `Ctrl + V` 网络图片后自动将其保存到本地。你可以在 `文件 - 偏好设置 - 编辑器 - 图片插入` 中选择复制到哪个路径，什么情况下需要复制。\n\n![](3.png)\n\n","slug":"Markdown语法","published":1,"updated":"2020-01-20T20:15:25.036Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5p78anw00098kq47q4t89dm","content":"<div align=\"middle\"> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=28892385&auto=1&height=66\"></iframe></div>\n\n<h1 id=\"Markdown语法\"><a href=\"#Markdown语法\" class=\"headerlink\" title=\"Markdown语法\"></a>Markdown语法</h1><h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><table>\n<thead>\n<tr>\n<th align=\"center\"><strong>语法</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>#</code>一级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>##</code>二级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>###</code>三级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>####</code>四级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>#####</code>五级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>######</code>六级标题</td>\n</tr>\n</tbody></table>\n<p><img src=\"2.png\" alt=\"png\"></p>\n<h2 id=\"字体样式\"><a href=\"#字体样式\" class=\"headerlink\" title=\"字体样式\"></a>字体样式</h2><p><code>*斜体*</code>  <em>斜体</em></p>\n<p><code>_斜体_</code>  _斜体_</p>\n<p><code>**粗体**</code>  <strong>粗体</strong></p>\n<p><code>***加粗斜体***</code><strong><em>加粗斜体</em></strong></p>\n<p><code>~~删除线~~</code>  <del>删除线</del></p>\n<h2 id=\"插入图片或连接\"><a href=\"#插入图片或连接\" class=\"headerlink\" title=\"插入图片或连接\"></a>插入图片或连接</h2><p><code>[描述](图片路径或者URL)</code>  描述可以不写</p>\n<h2 id=\"分割线三种方式\"><a href=\"#分割线三种方式\" class=\"headerlink\" title=\"分割线三种方式\"></a>分割线三种方式</h2><p>你可以在一行中用三个以上的星号<code>*</code>、减号<code>-</code>、底线<code>_</code>来建立一个分隔线，行内不能有其他东西。 </p>\n<p><code>---</code></p>\n<hr>\n<p><code>***</code></p>\n<hr>\n<p><code>___</code></p>\n<hr>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p><strong>行内式</strong>：如果在一个行内需要引用代码，只要用反引号`引起来就好（一般在ESC键下方，和~同一个键） </p>\n<p>`用两个反引号` <code>行内/单行代码块</code></p>\n<p><strong>多行代码块与语法高亮</strong>：在需要高亮的代码块的前一行及后一行使用三个单反引号“`”包裹 </p>\n<p>```js</p>\n<p>三个反引号可以表明代码语言,这里写的js</p>\n<p>````</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是js代码块\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>在被引用的文本前加上<code>&gt;</code>符号，以及一个空格就可以了，如一个<code>&gt;</code>符号会产生一次缩进</p>\n<p><code>&gt;引用</code> </p>\n<blockquote>\n<p>引用</p>\n</blockquote>\n<p><code>&gt;&gt;引用</code></p>\n<blockquote>\n<blockquote>\n<p>引用</p>\n</blockquote>\n</blockquote>\n<p><code>&gt;&gt;&gt;引用</code></p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p><strong>无序列表</strong></p>\n<p>使用 *，+，- 都可以表示无序列表。任意选用一个即可, 注意：符号后面一定要有一个空格，起到缩进的作用。 </p>\n<p><code>- 无序列表</code>- </p>\n<p><code>* 无序列表</code></p>\n<p><code>+ 无序列表</code></p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表</li>\n</ul>\n<p><strong>有序列表</strong></p>\n<p>使用数字和一个英文句点表示有序列表。 注意：英文句点后面一定要有一个空格，起到缩进的作用。 </p>\n<p><code>1.有序列表</code></p>\n<p><code>2.有序列表</code></p>\n<p><code>3.有序列表</code></p>\n<ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n</ol>\n<h2 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\\\"></a>转义字符<code>\\</code></h2><p>如果在使用符号时与Markdown语法冲突,可以在符号前面加上<code>\\</code>即可正常显示</p>\n<p>如在使用列表时，只要是数字后面加上英文的点，就会无意间产生列表，比如2017.12.30 这时候想表达的是日期，有些软件把它被误认为是列表。解决方式：在每个点前面加上\\就可以了</p>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p><code>|姓名|性别|分数|</code></p>\n<p><code>|:-:|:-:|:-:|</code></p>\n<p><code>|小明|男|100|</code></p>\n<p><code>|小明|男|100|</code></p>\n<p>表格对齐方式：我们可以指定表格单元格的对齐方式，冒号在左边表示左对齐，右边表示有对齐，两边都有表示居中 </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">姓名</th>\n<th align=\"center\">性别</th>\n<th align=\"center\">分数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">小明</td>\n<td align=\"center\">男</td>\n<td align=\"center\">100</td>\n</tr>\n<tr>\n<td align=\"center\">小明</td>\n<td align=\"center\">男</td>\n<td align=\"center\">100</td>\n</tr>\n</tbody></table>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>Markdown语法学到这里日常已经够用了,下面介绍一款实时预览的 Markdown 文本编辑器</p>\n<h1 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h1><p>Typora 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是<strong>完全免费</strong>的。 </p>\n<p>点击下载:<a href=\"https://www.typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a></p>\n<h2 id=\"GFM-标准\"><a href=\"#GFM-标准\" class=\"headerlink\" title=\"GFM 标准\"></a>GFM 标准</h2><p> <a href=\"https://github.github.com/gfm/\" target=\"_blank\" rel=\"noopener\">GFM 标准</a>，它是由著名代码托管网站 <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a> 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 <code>文件 - 偏好设置 - Markdown 语法偏好 - 严格模式</code> 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 <a href=\"http://support.typora.io/Strict-Mode/\" target=\"_blank\" rel=\"noopener\">这篇文档</a> 中查看。</p>\n<h2 id=\"设置图片\"><a href=\"#设置图片\" class=\"headerlink\" title=\"设置图片\"></a>设置图片</h2><p>Typora 支持在拖动或 <code>Ctrl + V</code> 网络图片后自动将其保存到本地。你可以在 <code>文件 - 偏好设置 - 编辑器 - 图片插入</code> 中选择复制到哪个路径，什么情况下需要复制。</p>\n<p><img src=\"3.png\" alt></p>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<div align=\"middle\"> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=28892385&auto=1&height=66\"></iframe></div>\n\n<h1 id=\"Markdown语法\"><a href=\"#Markdown语法\" class=\"headerlink\" title=\"Markdown语法\"></a>Markdown语法</h1><h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><table>\n<thead>\n<tr>\n<th align=\"center\"><strong>语法</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>#</code>一级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>##</code>二级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>###</code>三级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>####</code>四级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>#####</code>五级标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>######</code>六级标题</td>\n</tr>\n</tbody></table>\n<p><img src=\"2.png\" alt=\"png\"></p>\n<h2 id=\"字体样式\"><a href=\"#字体样式\" class=\"headerlink\" title=\"字体样式\"></a>字体样式</h2><p><code>*斜体*</code>  <em>斜体</em></p>\n<p><code>_斜体_</code>  _斜体_</p>\n<p><code>**粗体**</code>  <strong>粗体</strong></p>\n<p><code>***加粗斜体***</code><strong><em>加粗斜体</em></strong></p>\n<p><code>~~删除线~~</code>  <del>删除线</del></p>\n<h2 id=\"插入图片或连接\"><a href=\"#插入图片或连接\" class=\"headerlink\" title=\"插入图片或连接\"></a>插入图片或连接</h2><p><code>[描述](图片路径或者URL)</code>  描述可以不写</p>\n<h2 id=\"分割线三种方式\"><a href=\"#分割线三种方式\" class=\"headerlink\" title=\"分割线三种方式\"></a>分割线三种方式</h2><p>你可以在一行中用三个以上的星号<code>*</code>、减号<code>-</code>、底线<code>_</code>来建立一个分隔线，行内不能有其他东西。 </p>\n<p><code>---</code></p>\n<hr>\n<p><code>***</code></p>\n<hr>\n<p><code>___</code></p>\n<hr>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p><strong>行内式</strong>：如果在一个行内需要引用代码，只要用反引号`引起来就好（一般在ESC键下方，和~同一个键） </p>\n<p>`用两个反引号` <code>行内/单行代码块</code></p>\n<p><strong>多行代码块与语法高亮</strong>：在需要高亮的代码块的前一行及后一行使用三个单反引号“`”包裹 </p>\n<p>```js</p>\n<p>三个反引号可以表明代码语言,这里写的js</p>\n<p>````</p>\n<pre><code class=\"js\">&lt;script&gt;\n    console.log(&quot;我是js代码块&quot;);\n&lt;/script&gt;</code></pre>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>在被引用的文本前加上<code>&gt;</code>符号，以及一个空格就可以了，如一个<code>&gt;</code>符号会产生一次缩进</p>\n<p><code>&gt;引用</code> </p>\n<blockquote>\n<p>引用</p>\n</blockquote>\n<p><code>&gt;&gt;引用</code></p>\n<blockquote>\n<blockquote>\n<p>引用</p>\n</blockquote>\n</blockquote>\n<p><code>&gt;&gt;&gt;引用</code></p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p><strong>无序列表</strong></p>\n<p>使用 *，+，- 都可以表示无序列表。任意选用一个即可, 注意：符号后面一定要有一个空格，起到缩进的作用。 </p>\n<p><code>- 无序列表</code>- </p>\n<p><code>* 无序列表</code></p>\n<p><code>+ 无序列表</code></p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表</li>\n</ul>\n<p><strong>有序列表</strong></p>\n<p>使用数字和一个英文句点表示有序列表。 注意：英文句点后面一定要有一个空格，起到缩进的作用。 </p>\n<p><code>1.有序列表</code></p>\n<p><code>2.有序列表</code></p>\n<p><code>3.有序列表</code></p>\n<ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n</ol>\n<h2 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\\\"></a>转义字符<code>\\</code></h2><p>如果在使用符号时与Markdown语法冲突,可以在符号前面加上<code>\\</code>即可正常显示</p>\n<p>如在使用列表时，只要是数字后面加上英文的点，就会无意间产生列表，比如2017.12.30 这时候想表达的是日期，有些软件把它被误认为是列表。解决方式：在每个点前面加上\\就可以了</p>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p><code>|姓名|性别|分数|</code></p>\n<p><code>|:-:|:-:|:-:|</code></p>\n<p><code>|小明|男|100|</code></p>\n<p><code>|小明|男|100|</code></p>\n<p>表格对齐方式：我们可以指定表格单元格的对齐方式，冒号在左边表示左对齐，右边表示有对齐，两边都有表示居中 </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">姓名</th>\n<th align=\"center\">性别</th>\n<th align=\"center\">分数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">小明</td>\n<td align=\"center\">男</td>\n<td align=\"center\">100</td>\n</tr>\n<tr>\n<td align=\"center\">小明</td>\n<td align=\"center\">男</td>\n<td align=\"center\">100</td>\n</tr>\n</tbody></table>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>Markdown语法学到这里日常已经够用了,下面介绍一款实时预览的 Markdown 文本编辑器</p>\n<h1 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h1><p>Typora 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是<strong>完全免费</strong>的。 </p>\n<p>点击下载:<a href=\"https://www.typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a></p>\n<h2 id=\"GFM-标准\"><a href=\"#GFM-标准\" class=\"headerlink\" title=\"GFM 标准\"></a>GFM 标准</h2><p> <a href=\"https://github.github.com/gfm/\" target=\"_blank\" rel=\"noopener\">GFM 标准</a>，它是由著名代码托管网站 <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a> 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 <code>文件 - 偏好设置 - Markdown 语法偏好 - 严格模式</code> 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 <a href=\"http://support.typora.io/Strict-Mode/\" target=\"_blank\" rel=\"noopener\">这篇文档</a> 中查看。</p>\n<h2 id=\"设置图片\"><a href=\"#设置图片\" class=\"headerlink\" title=\"设置图片\"></a>设置图片</h2><p>Typora 支持在拖动或 <code>Ctrl + V</code> 网络图片后自动将其保存到本地。你可以在 <code>文件 - 偏好设置 - 编辑器 - 图片插入</code> 中选择复制到哪个路径，什么情况下需要复制。</p>\n<p><img src=\"3.png\" alt></p>\n"},{"title":"Vue文档风格的Typora主题","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-01-21T09:20:20.000Z","password":null,"summary":"Typora编辑器中一款Vue文档风格的主题","_content":"\n> [typora-vue-theme](https://github.com/ThirtyZhang/ypora-vue-theme)是 Typora Markdown 文档编辑器中一款类似[Vue](https://vuejs.org/)文档风格的主题。\n\n## 简介\n\n[Typora](https://www.typora.io/)是一款支持实时预览的 Markdown 编辑器和阅读器，支持`Windows`、`macOS`、`Linux`三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。并且有多种主题模板。**typora-vue-theme就是参考了Vue文档风格而开发的一个 Typora 自定义主题**。\n\n## 安装主题\n\n1. 下载本主题**[typora-vue-theme](https://github.com/ThirtyZhang/ypora-vue-theme)**中的`vue.css`、`vue-dark.css`文件和包含字体的`vue`文件夹；\n2. 打开 Typora，点击“**偏好设置**” => “**打开主题文件夹**”按钮，将弹出 Typora 的主题文件夹；\n3. 将下载好的`vue.css`和`vue-dark.css`文件和包含字体的`vue`文件夹放到 Typora 的主题文件夹中；\n4. 关闭并重新打开 Typora，从菜单栏中选择 “**主题**” => “**Vue**” 或者 “**Vue Dark**” 即可。","source":"_posts/Vue文档风格的Typora主题.md","raw":"---\ntitle: Vue文档风格的Typora主题\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-01-21 17:20:20\npassword:\nsummary: Typora编辑器中一款Vue文档风格的主题\ntags: \n- 工具\ncategories:\n- 效率\n---\n\n> [typora-vue-theme](https://github.com/ThirtyZhang/ypora-vue-theme)是 Typora Markdown 文档编辑器中一款类似[Vue](https://vuejs.org/)文档风格的主题。\n\n## 简介\n\n[Typora](https://www.typora.io/)是一款支持实时预览的 Markdown 编辑器和阅读器，支持`Windows`、`macOS`、`Linux`三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。并且有多种主题模板。**typora-vue-theme就是参考了Vue文档风格而开发的一个 Typora 自定义主题**。\n\n## 安装主题\n\n1. 下载本主题**[typora-vue-theme](https://github.com/ThirtyZhang/ypora-vue-theme)**中的`vue.css`、`vue-dark.css`文件和包含字体的`vue`文件夹；\n2. 打开 Typora，点击“**偏好设置**” => “**打开主题文件夹**”按钮，将弹出 Typora 的主题文件夹；\n3. 将下载好的`vue.css`和`vue-dark.css`文件和包含字体的`vue`文件夹放到 Typora 的主题文件夹中；\n4. 关闭并重新打开 Typora，从菜单栏中选择 “**主题**” => “**Vue**” 或者 “**Vue Dark**” 即可。","slug":"Vue文档风格的Typora主题","published":1,"updated":"2020-01-21T13:16:14.607Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5p78ao0000b8kq4z7ugglpr","content":"<blockquote>\n<p><a href=\"https://github.com/ThirtyZhang/ypora-vue-theme\" target=\"_blank\" rel=\"noopener\">typora-vue-theme</a>是 Typora Markdown 文档编辑器中一款类似<a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vue</a>文档风格的主题。</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://www.typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a>是一款支持实时预览的 Markdown 编辑器和阅读器，支持<code>Windows</code>、<code>macOS</code>、<code>Linux</code>三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。并且有多种主题模板。<strong>typora-vue-theme就是参考了Vue文档风格而开发的一个 Typora 自定义主题</strong>。</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><ol>\n<li>下载本主题<strong><a href=\"https://github.com/ThirtyZhang/ypora-vue-theme\" target=\"_blank\" rel=\"noopener\">typora-vue-theme</a></strong>中的<code>vue.css</code>、<code>vue-dark.css</code>文件和包含字体的<code>vue</code>文件夹；</li>\n<li>打开 Typora，点击“<strong>偏好设置</strong>” =&gt; “<strong>打开主题文件夹</strong>”按钮，将弹出 Typora 的主题文件夹；</li>\n<li>将下载好的<code>vue.css</code>和<code>vue-dark.css</code>文件和包含字体的<code>vue</code>文件夹放到 Typora 的主题文件夹中；</li>\n<li>关闭并重新打开 Typora，从菜单栏中选择 “<strong>主题</strong>” =&gt; “<strong>Vue</strong>” 或者 “<strong>Vue Dark</strong>” 即可。</li>\n</ol>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<blockquote>\n<p><a href=\"https://github.com/ThirtyZhang/ypora-vue-theme\" target=\"_blank\" rel=\"noopener\">typora-vue-theme</a>是 Typora Markdown 文档编辑器中一款类似<a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vue</a>文档风格的主题。</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://www.typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a>是一款支持实时预览的 Markdown 编辑器和阅读器，支持<code>Windows</code>、<code>macOS</code>、<code>Linux</code>三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。并且有多种主题模板。<strong>typora-vue-theme就是参考了Vue文档风格而开发的一个 Typora 自定义主题</strong>。</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><ol>\n<li>下载本主题<strong><a href=\"https://github.com/ThirtyZhang/ypora-vue-theme\" target=\"_blank\" rel=\"noopener\">typora-vue-theme</a></strong>中的<code>vue.css</code>、<code>vue-dark.css</code>文件和包含字体的<code>vue</code>文件夹；</li>\n<li>打开 Typora，点击“<strong>偏好设置</strong>” =&gt; “<strong>打开主题文件夹</strong>”按钮，将弹出 Typora 的主题文件夹；</li>\n<li>将下载好的<code>vue.css</code>和<code>vue-dark.css</code>文件和包含字体的<code>vue</code>文件夹放到 Typora 的主题文件夹中；</li>\n<li>关闭并重新打开 Typora，从菜单栏中选择 “<strong>主题</strong>” =&gt; “<strong>Vue</strong>” 或者 “<strong>Vue Dark</strong>” 即可。</li>\n</ol>\n"},{"title":"Git快速上手","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-01-21T09:42:53.000Z","password":null,"summary":"Git是目前世界上最先进的分布式版本控制系统","_content":"\n\n\n# Git教程\n\n> 如果之前了解过想复习一下,直接看总结就可以了\n\n## 安装\n\n## 设置Name和Email地址\n\n安装完成后，还需要最后一步设置，在命令行输入：\n\n```powershell\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@example.com\"\n```\n\n> 因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。\n>\n> 注意`git config`命令的`--global`参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。\n\n# 本地版本库\n\n选择一个合适的地方，创建一个空目录：\n\n```powershell\n$ mkdir learngit\n$ cd learngit\n$ pwd\n/Users/michael/learngit\n```\n\n> `pwd`命令用于显示当前目录。在我的Mac上，这个仓库位于`/Users/michael/learngit`。\n>\n>  **如果你使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。** \n\n通过`git init`命令把这个目录变成Git可以管理的仓库：\n\n```powershell\n$ git init\nInitialized empty Git repository in /Users/michael/learngit/.git/\n```\n\n> 瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个`.git`的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。\n>\n> 如果你没有看到`.git`目录，那是因为这个目录默认是隐藏的，用`ls -ah`命令就可以看见。\n>\n> **也不一定必须在空目录下创建Git仓库，选择一个已经有东西的目录也是可以的。不过，不建议你使用自己正在开发的公司项目来学习Git，否则造成的一切后果概不负责。** \n\n## 把文件添加到版本库\n\n> 首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。\n>\n> 不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。\n>\n> 因为文本是有编码的，比如中文有常用的GBK编码，日文有Shift_JIS编码，如果没有历史遗留问题，强烈建议使用标准的UTF-8编码，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。\n>\n> 使用Windows的童鞋要特别注意：\n>\n> 千万不要使用Windows自带的**记事本**编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载[Notepad++](http://notepad-plus-plus.org/)代替记事本，不但功能强大，而且免费！记得把Notepad++的默认编码设置为UTF-8 without BOM即可：\n\n先添加:\n\n```powershell\n# 单个文件\n$ git add readme.txt \n# 多个文件\n$ git add readme.txt readmeCN.txt\n# 全部添加\n$ git add .\n```\n\n## 把文件提交到本地版本库\n\n再提交:\n\n```powershell\n$ git commit -m \"wrote a readme file\"\n```\n\n> 简单解释一下`git commit`命令，`-m`后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。\n>\n> 嫌麻烦不想输入`-m \"xxx\"`行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。\n\n> 为什么Git添加文件需要`add`，`commit`一共两步呢？因为`commit`可以一次提交很多文件，所以你可以多次`add`不同的文件，比如：\n>\n> ```powershell\n> $ git add file1.txt\n> $ git add file2.txt file3.txt\n> $ git commit -m \"add 3 files.\"\n> ```\n\n## 撤销操作\n\n\n\n```powershell\n# 查看本地库文件状态\n$ git status\n# 文件当前文件改了什么,查看一下再提交就比较放心\n$ git diff readme.txt \n```\n\n> - 要随时掌握工作区的状态，使用`git status`命令。\n> - 如果`git status`告诉你有文件被修改过，用`git diff`可以查看修改内容。\n\n## 版本回退\n\n```powershell\n# 回退到上一版\n$ git reset --hard HEAD^\n# 回退到上上一版\n$ git reset --hard HEAD^^\n# 回退到指定版\n$ git reset --hard commit_id\n```\n\n> - `HEAD`指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令`git reset --hard commit_id`。\n> - 穿梭前，用`git log`可以查看提交历史，以便确定要回退到哪个版本。\n> - 要重返未来，用`git reflog`查看命令历史，以便确定要回到未来的哪个版本。\n> - 用`HEAD`表示当前版本，也就是最新的提交`1094adb...`（注意我的提交ID和你的肯定不一样），上一个版本就是`HEAD^`，上上一个版本就是`HEAD^^`，当然往上100个版本写100个`^`比较容易数不过来，所以写成`HEAD~100`。 \n\n## 工作区和暂存区\n\n> 前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：\n>\n> 第一步是用`git add`把文件添加进去，实际上就是把文件修改添加到暂存区；\n>\n> 第二步是用`git commit`提交更改，实际上就是把暂存区的所有内容提交到当前分支。\n>\n> 因为我们创建Git版本库时，Git自动为我们创建了唯一一个`master`分支，所以，现在，`git commit`就是往`master`分支上提交更改。\n>\n> 你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。\n\n## 撤销修改\n\n```powershell\n$ git checkout -- readme.txt\n```\n\n> 命令`git checkout -- readme.txt`意思就是，把`readme.txt`文件在工作区的修改全部撤销，这里有两种情况：\n>\n> 一种是`readme.txt`自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；\n>\n> 一种是`readme.txt`已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。\n>\n> 总之，就是让这个文件回到最近一次`git commit`或`git add`时的状态。\n\n```powershell\n$ git reset HEAD readme.txt\n```\n\n> 场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令`git checkout -- file`。\n>\n> 场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令`git reset HEAD <file>`，就回到了场景1，第二步按场景1操作。\n>\n> 场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考[版本回退](https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192)一节，不过前提是没有推送到远程库。\n\n\n\n## 删除\n\n```powershell\n$ rm file\n# 删除工作区 , 可以直接用用git checkout -- <file> 恢复\n$ git rm file\n# 不仅删除了工作区文件，而且还添加到了暂存区，需要先git reset HEAD <file>，然后再git checkout -- <file>\n& git rm file\n& git commit -m \"说明注释\"\n# 彻底删除 , 先删除工作区和暂存区,再提交到master分支(仓库)\n```\n\n> \n>\n> 如果你用的rm删除文件，那就相当于只删除了工作区的文件，如果想要恢复，直接用git checkout -- <file>就可以 2.如果你用的是git rm删除文件，那就相当于不仅删除了文件，而且还添加到了暂存区，需要先git reset HEAD <file>，然后再git checkout -- <file> 3.如果你想彻底把版本库的删除掉，先git rm，再git commit 就ok了 \n\n# 本地仓库总结\n\n> Git管理的文件分为：工作区，版本库，版本库又分为暂存区stage和暂存区分支master(仓库)\n>\n> 工作区>>>>暂存区>>>>仓库\n>\n> git add把文件从工作区>>>>暂存区，git commit把文件从暂存区>>>>仓库，\n>\n> git diff查看工作区和暂存区差异，\n>\n> git diff --cached查看暂存区和仓库差异，\n>\n> git diff HEAD 查看工作区和仓库的差异，\n>\n> git add的反向命令git checkout，撤销工作区修改，即把暂存区最新版本转移到工作区，\n>\n> git commit的反向命令git reset HEAD，就是把仓库最新版本转移到暂存区。\n\n> **新建git本地仓库：**\n>\n> `git init` \n>\n> 新建一个.git文件，有这个文件就是一个git仓库\n>\n> **git本地仓库分三个区来区别操作（这个思路太重要了）：** \n>\n> **工作区：** 就是一个多了.git文件的文件夹，不要想太多，就按Linux操作文件夹的方法正常操作 \n>\n> **暂存区：** 暂时讲了两种操作暂存区的方法：\n>\n>  1.存入暂存区:\n>\n> `git add filename`  //添加文件\n>\n> `git rm filename`   //删除文件\n>\n>  这两条都是修改暂存区 \n>\n> 2.递交暂存区\n>\n>  `git commit -m \"log说明一般写改动是什么\"` \n>\n> 别忘了正常来说一般对暂存区修改以后一定要commit一下\n> **版本库：**`git commit`以后的最终版本存入地方，git最重要的一个地方，因为只有版本库的修改才可以跟踪\n>\n> 另外有几个命令查看状态也很重要： \n>\n> `git status`\n>\n> 查看当前git仓库与上一次commit之后的版本库的一切修改，包括工作区的修改和暂存区的修改（这种信息是不详细的） 很人性化的是，`git status`会提示你下一步可能会做的事，比如你对工作区做了修改，他可能会提示下一步要git add或者\n>\n> `git checkout  filename `\n>\n> ， 你刚执行完git add以后，git status跟踪的暂存区的修改，他又会提示你下一步可能要提交git commit或者\n>\n> `git reset HEAD < filename >` \n>\n> `git diff filename`\n>\n> 这个命令返回的是你对工作区的修改，别想太多，和什么对比并不重要，你只要知道什么时候他会有信息返回，返回什么信息！什么时候有返回呢！你对工作区已经存在的文件修改<!--（但是没有存入暂存区，也就是说没有git add或者git rm，所以一定要纠结的话，他比较的的确是暂存区和工作区的区别）-->的话有返回**（新建文件git diff看不到）**，返回什么，返回修改的详细信息，+是新添的行-是删去的行\n>\n>  `git diff --cached filename`\n>\n> 这个命令是查看你对暂存区的修改，也就是你`git add`或者`git rm`以后，`git diff`的返回信息就用`git diff --cached`来用了（这也是为什么这两个命令一样，只有参数不一样的原因，因为其实干的都是一件事，只是`git diff`针对的对象是工作区，`git diff --cached`针对的对象是暂存区） \n>\n> `git log`\n>\n> **当前版本之前**的commit日志记录，也就是说当前版本是回退回来的版本的话，当前版本之后的提交与回退都看不到（有个很重要的commit ID）\n>\n> `git reflog`\n>\n> 包括版本回退、版本提交的日志，信息相较于`git log`会比较简单 \n>\n> **这样把命令的针对对象分为三个区来理解，现在看撤销操作就很容易了：**\n>\n>  1.针对工作区的撤销（必须保证没有git add/git rm之前）： \n>\n> `git checkout -- filename` \n>\n> 2.针对暂存区的撤销（必须是git add/git rm以后才行） \n>\n> `git reset HEAD filename` \n>\n> 顺便想起git reset的另一种用法，参数不一样啦，那肯定也是撤销操作，当然就是撤销提交，回退版本啦\n>\n> `git reset --hard （HEAD^^^^）/commit id`\n\n# 远程仓库\n\n> Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上。怎么分布呢？最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。 \n\n[GitHub](https://github.com/) 提供Git仓库托管服务 , 注册一个GitHub账号，就可以免费获得Git远程仓库 ,自行点击链接注册\n\n> 本地Git仓库和GitHub仓库之间的传输是通过SSH加密的 ,所以需要设置下SSH Key\n\n> 第1步：**创建SSH Key**。在用户主目录下`C:\\Users\\zl`<!--用户主目录在windows中就是 C:\\Users\\Administrator\\，或者你新建了一个用户，那就是 C:\\Users\\用户名\\--> ，看看有没有.ssh目录，如果有，再看看这个目录下有没有`id_rsa`和`id_rsa.pub`这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：\n\n```powershell\n$ ssh-keygen -t rsa -C \"youremail@example.com\"\n```\n\n> 你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。\n>\n> 如果一切顺利的话，可以在用户主目录里找到`.ssh`目录，里面有`id_rsa`和`id_rsa.pub`两个文件，这两个就是SSH Key的秘钥对，`id_rsa`是私钥，不能泄露出去，`id_rsa.pub`是公钥，可以放心地告诉任何人。\n>\n> 第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：\n>\n> 然后，点“**Add SSH Key”**，填上任意Title，在Key文本框里粘贴`id_rsa.pub`文件的内容：\n\n## 本地文件添加到远程仓库\n\n* 找到“Create a new repo”按钮，创建一个新的仓库： \n* 在Repository name填入名称\n* 其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库 \n\n在本地的`learngit`仓库下运行命令：\n\n```powershell\n$ git remote add origin git@github.com:michaelliao/learngit.git\n```\n\n> 请千万注意，把上面的`michaelliao`替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。\n>\n> 添加后，远程库的名字就是`origin`，这是Git默认的叫法，也可以改成别的，但是`origin`这个名字一看就知道是远程库。\n>\n> 下一步，就可以把本地库的所有内容推送到远程库上：\n\n```powershell\n$ git push -u origin master\n```\n\n> 把本地库的内容推送到远程，用`git push`命令，实际上是把当前分支`master`推送到远程。\n>\n> 由于远程库是空的，我们第一次推送`master`分支时，加上了`-u`参数，Git不但会把本地的`master`分支内容推送的远程新的`master`分支，还会把本地的`master`分支和远程的`master`分支关联起来，在以后的推送或者拉取时就可以简化命令。\n>\n> 推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样 \n\n> 从现在起，只要本地作了提交，就可以通过命令：\n\n```powershell\n$ git push origin master\n```\n\n## 克隆别人的Git远程仓库到自己的仓库\n\n* 在本地新建文件夹克隆下来\n* 删除`.git`文件\n* 然后在自己的GitHub上新建一个仓库\n* 在本地仓库执行\n\n```powershell\n$ git init\n$ git remote add origin 新建的仓库地址\n$ git add .\n$ git commit -m \"提交全部\"\n$ git push -u origin master\n```\n\n## SSH警告\n\n> 当你第一次使用Git的`clone`或者`push`命令连接GitHub时，会得到一个警告：\n>\n> ```\n> The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.\n> RSA key fingerprint is xx.xx.xx.xx.xx.\n> Are you sure you want to continue connecting (yes/no)?\n> ```\n>\n> 这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入`yes`回车即可。\n>\n> Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：\n>\n> ```\n> Warning: Permanently added 'github.com' (RSA) to the list of known hosts.\n> ```\n>\n> 这个警告只会出现一次，后面的操作就不会有任何警告了。\n>\n> 如果你实在担心有人冒充GitHub服务器，输入`yes`前可以对照[GitHub的RSA Key的指纹信息](https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/)是否与SSH连接给出的一致。\n\n> 要关联一个远程库，使用命令`git remote add origin git@server-name:path/repo-name.git`；\n>\n> 关联后，使用命令`git push -u origin master`第一次推送master分支的所有内容；\n>\n> 此后，每次本地提交后，只要有必要，就可以使用命令`git push origin master`推送最新修改；\n>\n> 分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！\n\n## 从远程库克隆到本地\n\n* 第一步\n  * 新建一个仓库,勾选`Initialize this repository with a README`，这样GitHub会自动为我们创建一个`README.md`文件。创建完毕后，可以看到`README.md`文件： \n* 第二步\n  * `$ git clone 仓库的URL`\n\n> URL我们一般选取SSH 相较于 http 而言 方便不用每次都输入用户名密码,而且传输速度快\n>\n> 除非公司只支持 http 才会选用","source":"_posts/git快速上手.md","raw":"---\ntitle: Git快速上手\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-01-21 17:42:53\npassword:\nsummary: Git是目前世界上最先进的分布式版本控制系统\ntags:\n- 工具\ncategories:\n- 效率\n---\n\n\n\n# Git教程\n\n> 如果之前了解过想复习一下,直接看总结就可以了\n\n## 安装\n\n## 设置Name和Email地址\n\n安装完成后，还需要最后一步设置，在命令行输入：\n\n```powershell\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@example.com\"\n```\n\n> 因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。\n>\n> 注意`git config`命令的`--global`参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。\n\n# 本地版本库\n\n选择一个合适的地方，创建一个空目录：\n\n```powershell\n$ mkdir learngit\n$ cd learngit\n$ pwd\n/Users/michael/learngit\n```\n\n> `pwd`命令用于显示当前目录。在我的Mac上，这个仓库位于`/Users/michael/learngit`。\n>\n>  **如果你使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。** \n\n通过`git init`命令把这个目录变成Git可以管理的仓库：\n\n```powershell\n$ git init\nInitialized empty Git repository in /Users/michael/learngit/.git/\n```\n\n> 瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个`.git`的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。\n>\n> 如果你没有看到`.git`目录，那是因为这个目录默认是隐藏的，用`ls -ah`命令就可以看见。\n>\n> **也不一定必须在空目录下创建Git仓库，选择一个已经有东西的目录也是可以的。不过，不建议你使用自己正在开发的公司项目来学习Git，否则造成的一切后果概不负责。** \n\n## 把文件添加到版本库\n\n> 首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。\n>\n> 不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。\n>\n> 因为文本是有编码的，比如中文有常用的GBK编码，日文有Shift_JIS编码，如果没有历史遗留问题，强烈建议使用标准的UTF-8编码，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。\n>\n> 使用Windows的童鞋要特别注意：\n>\n> 千万不要使用Windows自带的**记事本**编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载[Notepad++](http://notepad-plus-plus.org/)代替记事本，不但功能强大，而且免费！记得把Notepad++的默认编码设置为UTF-8 without BOM即可：\n\n先添加:\n\n```powershell\n# 单个文件\n$ git add readme.txt \n# 多个文件\n$ git add readme.txt readmeCN.txt\n# 全部添加\n$ git add .\n```\n\n## 把文件提交到本地版本库\n\n再提交:\n\n```powershell\n$ git commit -m \"wrote a readme file\"\n```\n\n> 简单解释一下`git commit`命令，`-m`后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。\n>\n> 嫌麻烦不想输入`-m \"xxx\"`行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。\n\n> 为什么Git添加文件需要`add`，`commit`一共两步呢？因为`commit`可以一次提交很多文件，所以你可以多次`add`不同的文件，比如：\n>\n> ```powershell\n> $ git add file1.txt\n> $ git add file2.txt file3.txt\n> $ git commit -m \"add 3 files.\"\n> ```\n\n## 撤销操作\n\n\n\n```powershell\n# 查看本地库文件状态\n$ git status\n# 文件当前文件改了什么,查看一下再提交就比较放心\n$ git diff readme.txt \n```\n\n> - 要随时掌握工作区的状态，使用`git status`命令。\n> - 如果`git status`告诉你有文件被修改过，用`git diff`可以查看修改内容。\n\n## 版本回退\n\n```powershell\n# 回退到上一版\n$ git reset --hard HEAD^\n# 回退到上上一版\n$ git reset --hard HEAD^^\n# 回退到指定版\n$ git reset --hard commit_id\n```\n\n> - `HEAD`指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令`git reset --hard commit_id`。\n> - 穿梭前，用`git log`可以查看提交历史，以便确定要回退到哪个版本。\n> - 要重返未来，用`git reflog`查看命令历史，以便确定要回到未来的哪个版本。\n> - 用`HEAD`表示当前版本，也就是最新的提交`1094adb...`（注意我的提交ID和你的肯定不一样），上一个版本就是`HEAD^`，上上一个版本就是`HEAD^^`，当然往上100个版本写100个`^`比较容易数不过来，所以写成`HEAD~100`。 \n\n## 工作区和暂存区\n\n> 前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：\n>\n> 第一步是用`git add`把文件添加进去，实际上就是把文件修改添加到暂存区；\n>\n> 第二步是用`git commit`提交更改，实际上就是把暂存区的所有内容提交到当前分支。\n>\n> 因为我们创建Git版本库时，Git自动为我们创建了唯一一个`master`分支，所以，现在，`git commit`就是往`master`分支上提交更改。\n>\n> 你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。\n\n## 撤销修改\n\n```powershell\n$ git checkout -- readme.txt\n```\n\n> 命令`git checkout -- readme.txt`意思就是，把`readme.txt`文件在工作区的修改全部撤销，这里有两种情况：\n>\n> 一种是`readme.txt`自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；\n>\n> 一种是`readme.txt`已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。\n>\n> 总之，就是让这个文件回到最近一次`git commit`或`git add`时的状态。\n\n```powershell\n$ git reset HEAD readme.txt\n```\n\n> 场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令`git checkout -- file`。\n>\n> 场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令`git reset HEAD <file>`，就回到了场景1，第二步按场景1操作。\n>\n> 场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考[版本回退](https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192)一节，不过前提是没有推送到远程库。\n\n\n\n## 删除\n\n```powershell\n$ rm file\n# 删除工作区 , 可以直接用用git checkout -- <file> 恢复\n$ git rm file\n# 不仅删除了工作区文件，而且还添加到了暂存区，需要先git reset HEAD <file>，然后再git checkout -- <file>\n& git rm file\n& git commit -m \"说明注释\"\n# 彻底删除 , 先删除工作区和暂存区,再提交到master分支(仓库)\n```\n\n> \n>\n> 如果你用的rm删除文件，那就相当于只删除了工作区的文件，如果想要恢复，直接用git checkout -- <file>就可以 2.如果你用的是git rm删除文件，那就相当于不仅删除了文件，而且还添加到了暂存区，需要先git reset HEAD <file>，然后再git checkout -- <file> 3.如果你想彻底把版本库的删除掉，先git rm，再git commit 就ok了 \n\n# 本地仓库总结\n\n> Git管理的文件分为：工作区，版本库，版本库又分为暂存区stage和暂存区分支master(仓库)\n>\n> 工作区>>>>暂存区>>>>仓库\n>\n> git add把文件从工作区>>>>暂存区，git commit把文件从暂存区>>>>仓库，\n>\n> git diff查看工作区和暂存区差异，\n>\n> git diff --cached查看暂存区和仓库差异，\n>\n> git diff HEAD 查看工作区和仓库的差异，\n>\n> git add的反向命令git checkout，撤销工作区修改，即把暂存区最新版本转移到工作区，\n>\n> git commit的反向命令git reset HEAD，就是把仓库最新版本转移到暂存区。\n\n> **新建git本地仓库：**\n>\n> `git init` \n>\n> 新建一个.git文件，有这个文件就是一个git仓库\n>\n> **git本地仓库分三个区来区别操作（这个思路太重要了）：** \n>\n> **工作区：** 就是一个多了.git文件的文件夹，不要想太多，就按Linux操作文件夹的方法正常操作 \n>\n> **暂存区：** 暂时讲了两种操作暂存区的方法：\n>\n>  1.存入暂存区:\n>\n> `git add filename`  //添加文件\n>\n> `git rm filename`   //删除文件\n>\n>  这两条都是修改暂存区 \n>\n> 2.递交暂存区\n>\n>  `git commit -m \"log说明一般写改动是什么\"` \n>\n> 别忘了正常来说一般对暂存区修改以后一定要commit一下\n> **版本库：**`git commit`以后的最终版本存入地方，git最重要的一个地方，因为只有版本库的修改才可以跟踪\n>\n> 另外有几个命令查看状态也很重要： \n>\n> `git status`\n>\n> 查看当前git仓库与上一次commit之后的版本库的一切修改，包括工作区的修改和暂存区的修改（这种信息是不详细的） 很人性化的是，`git status`会提示你下一步可能会做的事，比如你对工作区做了修改，他可能会提示下一步要git add或者\n>\n> `git checkout  filename `\n>\n> ， 你刚执行完git add以后，git status跟踪的暂存区的修改，他又会提示你下一步可能要提交git commit或者\n>\n> `git reset HEAD < filename >` \n>\n> `git diff filename`\n>\n> 这个命令返回的是你对工作区的修改，别想太多，和什么对比并不重要，你只要知道什么时候他会有信息返回，返回什么信息！什么时候有返回呢！你对工作区已经存在的文件修改<!--（但是没有存入暂存区，也就是说没有git add或者git rm，所以一定要纠结的话，他比较的的确是暂存区和工作区的区别）-->的话有返回**（新建文件git diff看不到）**，返回什么，返回修改的详细信息，+是新添的行-是删去的行\n>\n>  `git diff --cached filename`\n>\n> 这个命令是查看你对暂存区的修改，也就是你`git add`或者`git rm`以后，`git diff`的返回信息就用`git diff --cached`来用了（这也是为什么这两个命令一样，只有参数不一样的原因，因为其实干的都是一件事，只是`git diff`针对的对象是工作区，`git diff --cached`针对的对象是暂存区） \n>\n> `git log`\n>\n> **当前版本之前**的commit日志记录，也就是说当前版本是回退回来的版本的话，当前版本之后的提交与回退都看不到（有个很重要的commit ID）\n>\n> `git reflog`\n>\n> 包括版本回退、版本提交的日志，信息相较于`git log`会比较简单 \n>\n> **这样把命令的针对对象分为三个区来理解，现在看撤销操作就很容易了：**\n>\n>  1.针对工作区的撤销（必须保证没有git add/git rm之前）： \n>\n> `git checkout -- filename` \n>\n> 2.针对暂存区的撤销（必须是git add/git rm以后才行） \n>\n> `git reset HEAD filename` \n>\n> 顺便想起git reset的另一种用法，参数不一样啦，那肯定也是撤销操作，当然就是撤销提交，回退版本啦\n>\n> `git reset --hard （HEAD^^^^）/commit id`\n\n# 远程仓库\n\n> Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上。怎么分布呢？最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。 \n\n[GitHub](https://github.com/) 提供Git仓库托管服务 , 注册一个GitHub账号，就可以免费获得Git远程仓库 ,自行点击链接注册\n\n> 本地Git仓库和GitHub仓库之间的传输是通过SSH加密的 ,所以需要设置下SSH Key\n\n> 第1步：**创建SSH Key**。在用户主目录下`C:\\Users\\zl`<!--用户主目录在windows中就是 C:\\Users\\Administrator\\，或者你新建了一个用户，那就是 C:\\Users\\用户名\\--> ，看看有没有.ssh目录，如果有，再看看这个目录下有没有`id_rsa`和`id_rsa.pub`这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：\n\n```powershell\n$ ssh-keygen -t rsa -C \"youremail@example.com\"\n```\n\n> 你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。\n>\n> 如果一切顺利的话，可以在用户主目录里找到`.ssh`目录，里面有`id_rsa`和`id_rsa.pub`两个文件，这两个就是SSH Key的秘钥对，`id_rsa`是私钥，不能泄露出去，`id_rsa.pub`是公钥，可以放心地告诉任何人。\n>\n> 第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：\n>\n> 然后，点“**Add SSH Key”**，填上任意Title，在Key文本框里粘贴`id_rsa.pub`文件的内容：\n\n## 本地文件添加到远程仓库\n\n* 找到“Create a new repo”按钮，创建一个新的仓库： \n* 在Repository name填入名称\n* 其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库 \n\n在本地的`learngit`仓库下运行命令：\n\n```powershell\n$ git remote add origin git@github.com:michaelliao/learngit.git\n```\n\n> 请千万注意，把上面的`michaelliao`替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。\n>\n> 添加后，远程库的名字就是`origin`，这是Git默认的叫法，也可以改成别的，但是`origin`这个名字一看就知道是远程库。\n>\n> 下一步，就可以把本地库的所有内容推送到远程库上：\n\n```powershell\n$ git push -u origin master\n```\n\n> 把本地库的内容推送到远程，用`git push`命令，实际上是把当前分支`master`推送到远程。\n>\n> 由于远程库是空的，我们第一次推送`master`分支时，加上了`-u`参数，Git不但会把本地的`master`分支内容推送的远程新的`master`分支，还会把本地的`master`分支和远程的`master`分支关联起来，在以后的推送或者拉取时就可以简化命令。\n>\n> 推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样 \n\n> 从现在起，只要本地作了提交，就可以通过命令：\n\n```powershell\n$ git push origin master\n```\n\n## 克隆别人的Git远程仓库到自己的仓库\n\n* 在本地新建文件夹克隆下来\n* 删除`.git`文件\n* 然后在自己的GitHub上新建一个仓库\n* 在本地仓库执行\n\n```powershell\n$ git init\n$ git remote add origin 新建的仓库地址\n$ git add .\n$ git commit -m \"提交全部\"\n$ git push -u origin master\n```\n\n## SSH警告\n\n> 当你第一次使用Git的`clone`或者`push`命令连接GitHub时，会得到一个警告：\n>\n> ```\n> The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.\n> RSA key fingerprint is xx.xx.xx.xx.xx.\n> Are you sure you want to continue connecting (yes/no)?\n> ```\n>\n> 这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入`yes`回车即可。\n>\n> Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：\n>\n> ```\n> Warning: Permanently added 'github.com' (RSA) to the list of known hosts.\n> ```\n>\n> 这个警告只会出现一次，后面的操作就不会有任何警告了。\n>\n> 如果你实在担心有人冒充GitHub服务器，输入`yes`前可以对照[GitHub的RSA Key的指纹信息](https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/)是否与SSH连接给出的一致。\n\n> 要关联一个远程库，使用命令`git remote add origin git@server-name:path/repo-name.git`；\n>\n> 关联后，使用命令`git push -u origin master`第一次推送master分支的所有内容；\n>\n> 此后，每次本地提交后，只要有必要，就可以使用命令`git push origin master`推送最新修改；\n>\n> 分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！\n\n## 从远程库克隆到本地\n\n* 第一步\n  * 新建一个仓库,勾选`Initialize this repository with a README`，这样GitHub会自动为我们创建一个`README.md`文件。创建完毕后，可以看到`README.md`文件： \n* 第二步\n  * `$ git clone 仓库的URL`\n\n> URL我们一般选取SSH 相较于 http 而言 方便不用每次都输入用户名密码,而且传输速度快\n>\n> 除非公司只支持 http 才会选用","slug":"git快速上手","published":1,"updated":"2020-01-21T14:16:46.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5p78ao5000g8kq46a80o0af","content":"<h1 id=\"Git教程\"><a href=\"#Git教程\" class=\"headerlink\" title=\"Git教程\"></a>Git教程</h1><blockquote>\n<p>如果之前了解过想复习一下,直接看总结就可以了</p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h2 id=\"设置Name和Email地址\"><a href=\"#设置Name和Email地址\" class=\"headerlink\" title=\"设置Name和Email地址\"></a>设置Name和Email地址</h2><p>安装完成后，还需要最后一步设置，在命令行输入：</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git config <span class=\"token operator\">--</span>global user<span class=\"token punctuation\">.</span>name <span class=\"token string\">\"Your Name\"</span>\n$ git config <span class=\"token operator\">--</span>global user<span class=\"token punctuation\">.</span>email <span class=\"token string\">\"email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p>\n<p>注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n</blockquote>\n<h1 id=\"本地版本库\"><a href=\"#本地版本库\" class=\"headerlink\" title=\"本地版本库\"></a>本地版本库</h1><p>选择一个合适的地方，创建一个空目录：</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ mkdir learngit\n$ cd learngit\n$ <span class=\"token function\">pwd</span>\n<span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>michael<span class=\"token operator\">/</span>learngit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p><code>pwd</code>命令用于显示当前目录。在我的Mac上，这个仓库位于<code>/Users/michael/learngit</code>。</p>\n<p> <strong>如果你使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。</strong> </p>\n</blockquote>\n<p>通过<code>git init</code>命令把这个目录变成Git可以管理的仓库：</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git init\nInitialized empty Git repository in <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>michael<span class=\"token operator\">/</span>learngit<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>git<span class=\"token operator\">/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个<code>.git</code>的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。</p>\n<p>如果你没有看到<code>.git</code>目录，那是因为这个目录默认是隐藏的，用<code>ls -ah</code>命令就可以看见。</p>\n<p><strong>也不一定必须在空目录下创建Git仓库，选择一个已经有东西的目录也是可以的。不过，不建议你使用自己正在开发的公司项目来学习Git，否则造成的一切后果概不负责。</strong> </p>\n</blockquote>\n<h2 id=\"把文件添加到版本库\"><a href=\"#把文件添加到版本库\" class=\"headerlink\" title=\"把文件添加到版本库\"></a>把文件添加到版本库</h2><blockquote>\n<p>首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p>\n<p>不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。</p>\n<p>因为文本是有编码的，比如中文有常用的GBK编码，日文有Shift_JIS编码，如果没有历史遗留问题，强烈建议使用标准的UTF-8编码，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。</p>\n<p>使用Windows的童鞋要特别注意：</p>\n<p>千万不要使用Windows自带的<strong>记事本</strong>编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载<a href=\"http://notepad-plus-plus.org/\" target=\"_blank\" rel=\"noopener\">Notepad++</a>代替记事本，不但功能强大，而且免费！记得把Notepad++的默认编码设置为UTF-8 without BOM即可：</p>\n</blockquote>\n<p>先添加:</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\" spellcheck=\"true\"># 单个文件</span>\n$ git add readme<span class=\"token punctuation\">.</span>txt \n<span class=\"token comment\" spellcheck=\"true\"># 多个文件</span>\n$ git add readme<span class=\"token punctuation\">.</span>txt readmeCN<span class=\"token punctuation\">.</span>txt\n<span class=\"token comment\" spellcheck=\"true\"># 全部添加</span>\n$ git add <span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"把文件提交到本地版本库\"><a href=\"#把文件提交到本地版本库\" class=\"headerlink\" title=\"把文件提交到本地版本库\"></a>把文件提交到本地版本库</h2><p>再提交:</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"wrote a readme file\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>简单解释一下<code>git commit</code>命令，<code>-m</code>后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p>\n<p>嫌麻烦不想输入<code>-m &quot;xxx&quot;</code>行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。</p>\n</blockquote>\n<blockquote>\n<p>为什么Git添加文件需要<code>add</code>，<code>commit</code>一共两步呢？因为<code>commit</code>可以一次提交很多文件，所以你可以多次<code>add</code>不同的文件，比如：</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git add file1<span class=\"token punctuation\">.</span>txt\n$ git add file2<span class=\"token punctuation\">.</span>txt file3<span class=\"token punctuation\">.</span>txt\n$ git commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"add 3 files.\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h2 id=\"撤销操作\"><a href=\"#撤销操作\" class=\"headerlink\" title=\"撤销操作\"></a>撤销操作</h2><pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\" spellcheck=\"true\"># 查看本地库文件状态</span>\n$ git status\n<span class=\"token comment\" spellcheck=\"true\"># 文件当前文件改了什么,查看一下再提交就比较放心</span>\n$ git <span class=\"token function\">diff</span> readme<span class=\"token punctuation\">.</span>txt <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>要随时掌握工作区的状态，使用<code>git status</code>命令。</li>\n<li>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</li>\n</ul>\n</blockquote>\n<h2 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h2><pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\" spellcheck=\"true\"># 回退到上一版</span>\n$ git reset <span class=\"token operator\">--</span>hard HEAD^\n<span class=\"token comment\" spellcheck=\"true\"># 回退到上上一版</span>\n$ git reset <span class=\"token operator\">--</span>hard HEAD^^\n<span class=\"token comment\" spellcheck=\"true\"># 回退到指定版</span>\n$ git reset <span class=\"token operator\">--</span>hard commit_id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li><code>HEAD</code>指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</li>\n<li>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</li>\n<li>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</li>\n<li>用<code>HEAD</code>表示当前版本，也就是最新的提交<code>1094adb...</code>（注意我的提交ID和你的肯定不一样），上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。 </li>\n</ul>\n</blockquote>\n<h2 id=\"工作区和暂存区\"><a href=\"#工作区和暂存区\" class=\"headerlink\" title=\"工作区和暂存区\"></a>工作区和暂存区</h2><blockquote>\n<p>前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：</p>\n<p>第一步是用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；</p>\n<p>第二步是用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p>\n<p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往<code>master</code>分支上提交更改。</p>\n<p>你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p>\n</blockquote>\n<h2 id=\"撤销修改\"><a href=\"#撤销修改\" class=\"headerlink\" title=\"撤销修改\"></a>撤销修改</h2><pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git checkout <span class=\"token operator\">--</span> readme<span class=\"token punctuation\">.</span>txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>命令<code>git checkout -- readme.txt</code>意思就是，把<code>readme.txt</code>文件在工作区的修改全部撤销，这里有两种情况：</p>\n<p>一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</p>\n<p>一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</p>\n<p>总之，就是让这个文件回到最近一次<code>git commit</code>或<code>git add</code>时的状态。</p>\n</blockquote>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git reset HEAD readme<span class=\"token punctuation\">.</span>txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p>\n<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p>\n<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192\" target=\"_blank\" rel=\"noopener\">版本回退</a>一节，不过前提是没有推送到远程库。</p>\n</blockquote>\n<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ <span class=\"token function\">rm</span> file\n<span class=\"token comment\" spellcheck=\"true\"># 删除工作区 , 可以直接用用git checkout -- &lt;file> 恢复</span>\n$ git <span class=\"token function\">rm</span> file\n<span class=\"token comment\" spellcheck=\"true\"># 不仅删除了工作区文件，而且还添加到了暂存区，需要先git reset HEAD &lt;file>，然后再git checkout -- &lt;file></span>\n&amp; git <span class=\"token function\">rm</span> file\n&amp; git commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"说明注释\"</span>\n<span class=\"token comment\" spellcheck=\"true\"># 彻底删除 , 先删除工作区和暂存区,再提交到master分支(仓库)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>如果你用的rm删除文件，那就相当于只删除了工作区的文件，如果想要恢复，直接用git checkout – <file>就可以 2.如果你用的是git rm删除文件，那就相当于不仅删除了文件，而且还添加到了暂存区，需要先git reset HEAD <file>，然后再git checkout – <file> 3.如果你想彻底把版本库的删除掉，先git rm，再git commit 就ok了 </file></file></file></p>\n</blockquote>\n<h1 id=\"本地仓库总结\"><a href=\"#本地仓库总结\" class=\"headerlink\" title=\"本地仓库总结\"></a>本地仓库总结</h1><blockquote>\n<p>Git管理的文件分为：工作区，版本库，版本库又分为暂存区stage和暂存区分支master(仓库)</p>\n<p>工作区&gt;&gt;&gt;&gt;暂存区&gt;&gt;&gt;&gt;仓库</p>\n<p>git add把文件从工作区&gt;&gt;&gt;&gt;暂存区，git commit把文件从暂存区&gt;&gt;&gt;&gt;仓库，</p>\n<p>git diff查看工作区和暂存区差异，</p>\n<p>git diff –cached查看暂存区和仓库差异，</p>\n<p>git diff HEAD 查看工作区和仓库的差异，</p>\n<p>git add的反向命令git checkout，撤销工作区修改，即把暂存区最新版本转移到工作区，</p>\n<p>git commit的反向命令git reset HEAD，就是把仓库最新版本转移到暂存区。</p>\n</blockquote>\n<blockquote>\n<p><strong>新建git本地仓库：</strong></p>\n<p><code>git init</code> </p>\n<p>新建一个.git文件，有这个文件就是一个git仓库</p>\n<p><strong>git本地仓库分三个区来区别操作（这个思路太重要了）：</strong> </p>\n<p><strong>工作区：</strong> 就是一个多了.git文件的文件夹，不要想太多，就按Linux操作文件夹的方法正常操作 </p>\n<p><strong>暂存区：</strong> 暂时讲了两种操作暂存区的方法：</p>\n<p> 1.存入暂存区:</p>\n<p><code>git add filename</code>  //添加文件</p>\n<p><code>git rm filename</code>   //删除文件</p>\n<p> 这两条都是修改暂存区 </p>\n<p>2.递交暂存区</p>\n<p> <code>git commit -m &quot;log说明一般写改动是什么&quot;</code> </p>\n<p>别忘了正常来说一般对暂存区修改以后一定要commit一下<br><strong>版本库：</strong><code>git commit</code>以后的最终版本存入地方，git最重要的一个地方，因为只有版本库的修改才可以跟踪</p>\n<p>另外有几个命令查看状态也很重要： </p>\n<p><code>git status</code></p>\n<p>查看当前git仓库与上一次commit之后的版本库的一切修改，包括工作区的修改和暂存区的修改（这种信息是不详细的） 很人性化的是，<code>git status</code>会提示你下一步可能会做的事，比如你对工作区做了修改，他可能会提示下一步要git add或者</p>\n<p><code>git checkout  filename</code></p>\n<p>， 你刚执行完git add以后，git status跟踪的暂存区的修改，他又会提示你下一步可能要提交git commit或者</p>\n<p><code>git reset HEAD &lt; filename &gt;</code> </p>\n<p><code>git diff filename</code></p>\n<p>这个命令返回的是你对工作区的修改，别想太多，和什么对比并不重要，你只要知道什么时候他会有信息返回，返回什么信息！什么时候有返回呢！你对工作区已经存在的文件修改<!--（但是没有存入暂存区，也就是说没有git add或者git rm，所以一定要纠结的话，他比较的的确是暂存区和工作区的区别）-->的话有返回<strong>（新建文件git diff看不到）</strong>，返回什么，返回修改的详细信息，+是新添的行-是删去的行</p>\n<p> <code>git diff --cached filename</code></p>\n<p>这个命令是查看你对暂存区的修改，也就是你<code>git add</code>或者<code>git rm</code>以后，<code>git diff</code>的返回信息就用<code>git diff --cached</code>来用了（这也是为什么这两个命令一样，只有参数不一样的原因，因为其实干的都是一件事，只是<code>git diff</code>针对的对象是工作区，<code>git diff --cached</code>针对的对象是暂存区） </p>\n<p><code>git log</code></p>\n<p><strong>当前版本之前</strong>的commit日志记录，也就是说当前版本是回退回来的版本的话，当前版本之后的提交与回退都看不到（有个很重要的commit ID）</p>\n<p><code>git reflog</code></p>\n<p>包括版本回退、版本提交的日志，信息相较于<code>git log</code>会比较简单 </p>\n<p><strong>这样把命令的针对对象分为三个区来理解，现在看撤销操作就很容易了：</strong></p>\n<p> 1.针对工作区的撤销（必须保证没有git add/git rm之前）： </p>\n<p><code>git checkout -- filename</code> </p>\n<p>2.针对暂存区的撤销（必须是git add/git rm以后才行） </p>\n<p><code>git reset HEAD filename</code> </p>\n<p>顺便想起git reset的另一种用法，参数不一样啦，那肯定也是撤销操作，当然就是撤销提交，回退版本啦</p>\n<p><code>git reset --hard （HEAD^^^^）/commit id</code></p>\n</blockquote>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><blockquote>\n<p>Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上。怎么分布呢？最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。 </p>\n</blockquote>\n<p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a> 提供Git仓库托管服务 , 注册一个GitHub账号，就可以免费获得Git远程仓库 ,自行点击链接注册</p>\n<blockquote>\n<p>本地Git仓库和GitHub仓库之间的传输是通过SSH加密的 ,所以需要设置下SSH Key</p>\n</blockquote>\n<blockquote>\n<p>第1步：<strong>创建SSH Key</strong>。在用户主目录下<code>C:\\Users\\zl</code><!--用户主目录在windows中就是 C:\\Users\\Administrator\\，或者你新建了一个用户，那就是 C:\\Users\\用户名\\--> ，看看有没有.ssh目录，如果有，再看看这个目录下有没有<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：</p>\n</blockquote>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ ssh<span class=\"token operator\">-</span>keygen <span class=\"token operator\">-</span>t rsa <span class=\"token operator\">-</span>C <span class=\"token string\">\"youremail@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</p>\n<p>如果一切顺利的话，可以在用户主目录里找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>\n<p>第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：</p>\n<p>然后，点“<strong>Add SSH Key”</strong>，填上任意Title，在Key文本框里粘贴<code>id_rsa.pub</code>文件的内容：</p>\n</blockquote>\n<h2 id=\"本地文件添加到远程仓库\"><a href=\"#本地文件添加到远程仓库\" class=\"headerlink\" title=\"本地文件添加到远程仓库\"></a>本地文件添加到远程仓库</h2><ul>\n<li>找到“Create a new repo”按钮，创建一个新的仓库： </li>\n<li>在Repository name填入名称</li>\n<li>其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库 </li>\n</ul>\n<p>在本地的<code>learngit</code>仓库下运行命令：</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git remote add origin git@github<span class=\"token punctuation\">.</span>com:michaelliao<span class=\"token operator\">/</span>learngit<span class=\"token punctuation\">.</span>git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>请千万注意，把上面的<code>michaelliao</code>替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。</p>\n<p>添加后，远程库的名字就是<code>origin</code>，这是Git默认的叫法，也可以改成别的，但是<code>origin</code>这个名字一看就知道是远程库。</p>\n<p>下一步，就可以把本地库的所有内容推送到远程库上：</p>\n</blockquote>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git push <span class=\"token operator\">-</span>u origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。</p>\n<p>由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>\n<p>推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样 </p>\n</blockquote>\n<blockquote>\n<p>从现在起，只要本地作了提交，就可以通过命令：</p>\n</blockquote>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git push origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"克隆别人的Git远程仓库到自己的仓库\"><a href=\"#克隆别人的Git远程仓库到自己的仓库\" class=\"headerlink\" title=\"克隆别人的Git远程仓库到自己的仓库\"></a>克隆别人的Git远程仓库到自己的仓库</h2><ul>\n<li>在本地新建文件夹克隆下来</li>\n<li>删除<code>.git</code>文件</li>\n<li>然后在自己的GitHub上新建一个仓库</li>\n<li>在本地仓库执行</li>\n</ul>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ git init\n$ git remote add origin 新建的仓库地址\n$ git add <span class=\"token punctuation\">.</span>\n$ git commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"提交全部\"</span>\n$ git push <span class=\"token operator\">-</span>u origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"SSH警告\"><a href=\"#SSH警告\" class=\"headerlink\" title=\"SSH警告\"></a>SSH警告</h2><blockquote>\n<p>当你第一次使用Git的<code>clone</code>或者<code>push</code>命令连接GitHub时，会得到一个警告：</p>\n<pre><code>The authenticity of host &#39;github.com (xx.xx.xx.xx)&#39; can&#39;t be established.\nRSA key fingerprint is xx.xx.xx.xx.xx.\nAre you sure you want to continue connecting (yes/no)?</code></pre><p>这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入<code>yes</code>回车即可。</p>\n<p>Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：</p>\n<pre><code>Warning: Permanently added &#39;github.com&#39; (RSA) to the list of known hosts.</code></pre><p>这个警告只会出现一次，后面的操作就不会有任何警告了。</p>\n<p>如果你实在担心有人冒充GitHub服务器，输入<code>yes</code>前可以对照<a href=\"https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/\" target=\"_blank\" rel=\"noopener\">GitHub的RSA Key的指纹信息</a>是否与SSH连接给出的一致。</p>\n</blockquote>\n<blockquote>\n<p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p>\n<p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p>\n<p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</p>\n<p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</p>\n</blockquote>\n<h2 id=\"从远程库克隆到本地\"><a href=\"#从远程库克隆到本地\" class=\"headerlink\" title=\"从远程库克隆到本地\"></a>从远程库克隆到本地</h2><ul>\n<li>第一步<ul>\n<li>新建一个仓库,勾选<code>Initialize this repository with a README</code>，这样GitHub会自动为我们创建一个<code>README.md</code>文件。创建完毕后，可以看到<code>README.md</code>文件： </li>\n</ul>\n</li>\n<li>第二步<ul>\n<li><code>$ git clone 仓库的URL</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>URL我们一般选取SSH 相较于 http 而言 方便不用每次都输入用户名密码,而且传输速度快</p>\n<p>除非公司只支持 http 才会选用</p>\n</blockquote>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<h1 id=\"Git教程\"><a href=\"#Git教程\" class=\"headerlink\" title=\"Git教程\"></a>Git教程</h1><blockquote>\n<p>如果之前了解过想复习一下,直接看总结就可以了</p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h2 id=\"设置Name和Email地址\"><a href=\"#设置Name和Email地址\" class=\"headerlink\" title=\"设置Name和Email地址\"></a>设置Name和Email地址</h2><p>安装完成后，还需要最后一步设置，在命令行输入：</p>\n<pre><code class=\"powershell\">$ git config --global user.name &quot;Your Name&quot;\n$ git config --global user.email &quot;email@example.com&quot;</code></pre>\n<blockquote>\n<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p>\n<p>注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n</blockquote>\n<h1 id=\"本地版本库\"><a href=\"#本地版本库\" class=\"headerlink\" title=\"本地版本库\"></a>本地版本库</h1><p>选择一个合适的地方，创建一个空目录：</p>\n<pre><code class=\"powershell\">$ mkdir learngit\n$ cd learngit\n$ pwd\n/Users/michael/learngit</code></pre>\n<blockquote>\n<p><code>pwd</code>命令用于显示当前目录。在我的Mac上，这个仓库位于<code>/Users/michael/learngit</code>。</p>\n<p> <strong>如果你使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。</strong> </p>\n</blockquote>\n<p>通过<code>git init</code>命令把这个目录变成Git可以管理的仓库：</p>\n<pre><code class=\"powershell\">$ git init\nInitialized empty Git repository in /Users/michael/learngit/.git/</code></pre>\n<blockquote>\n<p>瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个<code>.git</code>的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。</p>\n<p>如果你没有看到<code>.git</code>目录，那是因为这个目录默认是隐藏的，用<code>ls -ah</code>命令就可以看见。</p>\n<p><strong>也不一定必须在空目录下创建Git仓库，选择一个已经有东西的目录也是可以的。不过，不建议你使用自己正在开发的公司项目来学习Git，否则造成的一切后果概不负责。</strong> </p>\n</blockquote>\n<h2 id=\"把文件添加到版本库\"><a href=\"#把文件添加到版本库\" class=\"headerlink\" title=\"把文件添加到版本库\"></a>把文件添加到版本库</h2><blockquote>\n<p>首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p>\n<p>不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。</p>\n<p>因为文本是有编码的，比如中文有常用的GBK编码，日文有Shift_JIS编码，如果没有历史遗留问题，强烈建议使用标准的UTF-8编码，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。</p>\n<p>使用Windows的童鞋要特别注意：</p>\n<p>千万不要使用Windows自带的<strong>记事本</strong>编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载<a href=\"http://notepad-plus-plus.org/\" target=\"_blank\" rel=\"noopener\">Notepad++</a>代替记事本，不但功能强大，而且免费！记得把Notepad++的默认编码设置为UTF-8 without BOM即可：</p>\n</blockquote>\n<p>先添加:</p>\n<pre><code class=\"powershell\"># 单个文件\n$ git add readme.txt \n# 多个文件\n$ git add readme.txt readmeCN.txt\n# 全部添加\n$ git add .</code></pre>\n<h2 id=\"把文件提交到本地版本库\"><a href=\"#把文件提交到本地版本库\" class=\"headerlink\" title=\"把文件提交到本地版本库\"></a>把文件提交到本地版本库</h2><p>再提交:</p>\n<pre><code class=\"powershell\">$ git commit -m &quot;wrote a readme file&quot;</code></pre>\n<blockquote>\n<p>简单解释一下<code>git commit</code>命令，<code>-m</code>后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p>\n<p>嫌麻烦不想输入<code>-m &quot;xxx&quot;</code>行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。</p>\n</blockquote>\n<blockquote>\n<p>为什么Git添加文件需要<code>add</code>，<code>commit</code>一共两步呢？因为<code>commit</code>可以一次提交很多文件，所以你可以多次<code>add</code>不同的文件，比如：</p>\n<pre><code class=\"powershell\">$ git add file1.txt\n$ git add file2.txt file3.txt\n$ git commit -m &quot;add 3 files.&quot;</code></pre>\n</blockquote>\n<h2 id=\"撤销操作\"><a href=\"#撤销操作\" class=\"headerlink\" title=\"撤销操作\"></a>撤销操作</h2><pre><code class=\"powershell\"># 查看本地库文件状态\n$ git status\n# 文件当前文件改了什么,查看一下再提交就比较放心\n$ git diff readme.txt </code></pre>\n<blockquote>\n<ul>\n<li>要随时掌握工作区的状态，使用<code>git status</code>命令。</li>\n<li>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</li>\n</ul>\n</blockquote>\n<h2 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h2><pre><code class=\"powershell\"># 回退到上一版\n$ git reset --hard HEAD^\n# 回退到上上一版\n$ git reset --hard HEAD^^\n# 回退到指定版\n$ git reset --hard commit_id</code></pre>\n<blockquote>\n<ul>\n<li><code>HEAD</code>指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</li>\n<li>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</li>\n<li>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</li>\n<li>用<code>HEAD</code>表示当前版本，也就是最新的提交<code>1094adb...</code>（注意我的提交ID和你的肯定不一样），上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。 </li>\n</ul>\n</blockquote>\n<h2 id=\"工作区和暂存区\"><a href=\"#工作区和暂存区\" class=\"headerlink\" title=\"工作区和暂存区\"></a>工作区和暂存区</h2><blockquote>\n<p>前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：</p>\n<p>第一步是用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；</p>\n<p>第二步是用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p>\n<p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往<code>master</code>分支上提交更改。</p>\n<p>你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p>\n</blockquote>\n<h2 id=\"撤销修改\"><a href=\"#撤销修改\" class=\"headerlink\" title=\"撤销修改\"></a>撤销修改</h2><pre><code class=\"powershell\">$ git checkout -- readme.txt</code></pre>\n<blockquote>\n<p>命令<code>git checkout -- readme.txt</code>意思就是，把<code>readme.txt</code>文件在工作区的修改全部撤销，这里有两种情况：</p>\n<p>一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</p>\n<p>一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</p>\n<p>总之，就是让这个文件回到最近一次<code>git commit</code>或<code>git add</code>时的状态。</p>\n</blockquote>\n<pre><code class=\"powershell\">$ git reset HEAD readme.txt</code></pre>\n<blockquote>\n<p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p>\n<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p>\n<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192\" target=\"_blank\" rel=\"noopener\">版本回退</a>一节，不过前提是没有推送到远程库。</p>\n</blockquote>\n<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><pre><code class=\"powershell\">$ rm file\n# 删除工作区 , 可以直接用用git checkout -- &lt;file&gt; 恢复\n$ git rm file\n# 不仅删除了工作区文件，而且还添加到了暂存区，需要先git reset HEAD &lt;file&gt;，然后再git checkout -- &lt;file&gt;\n&amp; git rm file\n&amp; git commit -m &quot;说明注释&quot;\n# 彻底删除 , 先删除工作区和暂存区,再提交到master分支(仓库)</code></pre>\n<blockquote>\n<p>如果你用的rm删除文件，那就相当于只删除了工作区的文件，如果想要恢复，直接用git checkout – <file>就可以 2.如果你用的是git rm删除文件，那就相当于不仅删除了文件，而且还添加到了暂存区，需要先git reset HEAD <file>，然后再git checkout – <file> 3.如果你想彻底把版本库的删除掉，先git rm，再git commit 就ok了 </file></file></file></p>\n</blockquote>\n<h1 id=\"本地仓库总结\"><a href=\"#本地仓库总结\" class=\"headerlink\" title=\"本地仓库总结\"></a>本地仓库总结</h1><blockquote>\n<p>Git管理的文件分为：工作区，版本库，版本库又分为暂存区stage和暂存区分支master(仓库)</p>\n<p>工作区&gt;&gt;&gt;&gt;暂存区&gt;&gt;&gt;&gt;仓库</p>\n<p>git add把文件从工作区&gt;&gt;&gt;&gt;暂存区，git commit把文件从暂存区&gt;&gt;&gt;&gt;仓库，</p>\n<p>git diff查看工作区和暂存区差异，</p>\n<p>git diff –cached查看暂存区和仓库差异，</p>\n<p>git diff HEAD 查看工作区和仓库的差异，</p>\n<p>git add的反向命令git checkout，撤销工作区修改，即把暂存区最新版本转移到工作区，</p>\n<p>git commit的反向命令git reset HEAD，就是把仓库最新版本转移到暂存区。</p>\n</blockquote>\n<blockquote>\n<p><strong>新建git本地仓库：</strong></p>\n<p><code>git init</code> </p>\n<p>新建一个.git文件，有这个文件就是一个git仓库</p>\n<p><strong>git本地仓库分三个区来区别操作（这个思路太重要了）：</strong> </p>\n<p><strong>工作区：</strong> 就是一个多了.git文件的文件夹，不要想太多，就按Linux操作文件夹的方法正常操作 </p>\n<p><strong>暂存区：</strong> 暂时讲了两种操作暂存区的方法：</p>\n<p> 1.存入暂存区:</p>\n<p><code>git add filename</code>  //添加文件</p>\n<p><code>git rm filename</code>   //删除文件</p>\n<p> 这两条都是修改暂存区 </p>\n<p>2.递交暂存区</p>\n<p> <code>git commit -m &quot;log说明一般写改动是什么&quot;</code> </p>\n<p>别忘了正常来说一般对暂存区修改以后一定要commit一下<br><strong>版本库：</strong><code>git commit</code>以后的最终版本存入地方，git最重要的一个地方，因为只有版本库的修改才可以跟踪</p>\n<p>另外有几个命令查看状态也很重要： </p>\n<p><code>git status</code></p>\n<p>查看当前git仓库与上一次commit之后的版本库的一切修改，包括工作区的修改和暂存区的修改（这种信息是不详细的） 很人性化的是，<code>git status</code>会提示你下一步可能会做的事，比如你对工作区做了修改，他可能会提示下一步要git add或者</p>\n<p><code>git checkout  filename</code></p>\n<p>， 你刚执行完git add以后，git status跟踪的暂存区的修改，他又会提示你下一步可能要提交git commit或者</p>\n<p><code>git reset HEAD &lt; filename &gt;</code> </p>\n<p><code>git diff filename</code></p>\n<p>这个命令返回的是你对工作区的修改，别想太多，和什么对比并不重要，你只要知道什么时候他会有信息返回，返回什么信息！什么时候有返回呢！你对工作区已经存在的文件修改<!--（但是没有存入暂存区，也就是说没有git add或者git rm，所以一定要纠结的话，他比较的的确是暂存区和工作区的区别）-->的话有返回<strong>（新建文件git diff看不到）</strong>，返回什么，返回修改的详细信息，+是新添的行-是删去的行</p>\n<p> <code>git diff --cached filename</code></p>\n<p>这个命令是查看你对暂存区的修改，也就是你<code>git add</code>或者<code>git rm</code>以后，<code>git diff</code>的返回信息就用<code>git diff --cached</code>来用了（这也是为什么这两个命令一样，只有参数不一样的原因，因为其实干的都是一件事，只是<code>git diff</code>针对的对象是工作区，<code>git diff --cached</code>针对的对象是暂存区） </p>\n<p><code>git log</code></p>\n<p><strong>当前版本之前</strong>的commit日志记录，也就是说当前版本是回退回来的版本的话，当前版本之后的提交与回退都看不到（有个很重要的commit ID）</p>\n<p><code>git reflog</code></p>\n<p>包括版本回退、版本提交的日志，信息相较于<code>git log</code>会比较简单 </p>\n<p><strong>这样把命令的针对对象分为三个区来理解，现在看撤销操作就很容易了：</strong></p>\n<p> 1.针对工作区的撤销（必须保证没有git add/git rm之前）： </p>\n<p><code>git checkout -- filename</code> </p>\n<p>2.针对暂存区的撤销（必须是git add/git rm以后才行） </p>\n<p><code>git reset HEAD filename</code> </p>\n<p>顺便想起git reset的另一种用法，参数不一样啦，那肯定也是撤销操作，当然就是撤销提交，回退版本啦</p>\n<p><code>git reset --hard （HEAD^^^^）/commit id</code></p>\n</blockquote>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><blockquote>\n<p>Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上。怎么分布呢？最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。 </p>\n</blockquote>\n<p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a> 提供Git仓库托管服务 , 注册一个GitHub账号，就可以免费获得Git远程仓库 ,自行点击链接注册</p>\n<blockquote>\n<p>本地Git仓库和GitHub仓库之间的传输是通过SSH加密的 ,所以需要设置下SSH Key</p>\n</blockquote>\n<blockquote>\n<p>第1步：<strong>创建SSH Key</strong>。在用户主目录下<code>C:\\Users\\zl</code><!--用户主目录在windows中就是 C:\\Users\\Administrator\\，或者你新建了一个用户，那就是 C:\\Users\\用户名\\--> ，看看有没有.ssh目录，如果有，再看看这个目录下有没有<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：</p>\n</blockquote>\n<pre><code class=\"powershell\">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></pre>\n<blockquote>\n<p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</p>\n<p>如果一切顺利的话，可以在用户主目录里找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>\n<p>第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：</p>\n<p>然后，点“<strong>Add SSH Key”</strong>，填上任意Title，在Key文本框里粘贴<code>id_rsa.pub</code>文件的内容：</p>\n</blockquote>\n<h2 id=\"本地文件添加到远程仓库\"><a href=\"#本地文件添加到远程仓库\" class=\"headerlink\" title=\"本地文件添加到远程仓库\"></a>本地文件添加到远程仓库</h2><ul>\n<li>找到“Create a new repo”按钮，创建一个新的仓库： </li>\n<li>在Repository name填入名称</li>\n<li>其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库 </li>\n</ul>\n<p>在本地的<code>learngit</code>仓库下运行命令：</p>\n<pre><code class=\"powershell\">$ git remote add origin git@github.com:michaelliao/learngit.git</code></pre>\n<blockquote>\n<p>请千万注意，把上面的<code>michaelliao</code>替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。</p>\n<p>添加后，远程库的名字就是<code>origin</code>，这是Git默认的叫法，也可以改成别的，但是<code>origin</code>这个名字一看就知道是远程库。</p>\n<p>下一步，就可以把本地库的所有内容推送到远程库上：</p>\n</blockquote>\n<pre><code class=\"powershell\">$ git push -u origin master</code></pre>\n<blockquote>\n<p>把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。</p>\n<p>由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>\n<p>推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样 </p>\n</blockquote>\n<blockquote>\n<p>从现在起，只要本地作了提交，就可以通过命令：</p>\n</blockquote>\n<pre><code class=\"powershell\">$ git push origin master</code></pre>\n<h2 id=\"克隆别人的Git远程仓库到自己的仓库\"><a href=\"#克隆别人的Git远程仓库到自己的仓库\" class=\"headerlink\" title=\"克隆别人的Git远程仓库到自己的仓库\"></a>克隆别人的Git远程仓库到自己的仓库</h2><ul>\n<li>在本地新建文件夹克隆下来</li>\n<li>删除<code>.git</code>文件</li>\n<li>然后在自己的GitHub上新建一个仓库</li>\n<li>在本地仓库执行</li>\n</ul>\n<pre><code class=\"powershell\">$ git init\n$ git remote add origin 新建的仓库地址\n$ git add .\n$ git commit -m &quot;提交全部&quot;\n$ git push -u origin master</code></pre>\n<h2 id=\"SSH警告\"><a href=\"#SSH警告\" class=\"headerlink\" title=\"SSH警告\"></a>SSH警告</h2><blockquote>\n<p>当你第一次使用Git的<code>clone</code>或者<code>push</code>命令连接GitHub时，会得到一个警告：</p>\n<pre><code>The authenticity of host &#39;github.com (xx.xx.xx.xx)&#39; can&#39;t be established.\nRSA key fingerprint is xx.xx.xx.xx.xx.\nAre you sure you want to continue connecting (yes/no)?</code></pre><p>这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入<code>yes</code>回车即可。</p>\n<p>Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：</p>\n<pre><code>Warning: Permanently added &#39;github.com&#39; (RSA) to the list of known hosts.</code></pre><p>这个警告只会出现一次，后面的操作就不会有任何警告了。</p>\n<p>如果你实在担心有人冒充GitHub服务器，输入<code>yes</code>前可以对照<a href=\"https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/\" target=\"_blank\" rel=\"noopener\">GitHub的RSA Key的指纹信息</a>是否与SSH连接给出的一致。</p>\n</blockquote>\n<blockquote>\n<p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p>\n<p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p>\n<p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</p>\n<p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</p>\n</blockquote>\n<h2 id=\"从远程库克隆到本地\"><a href=\"#从远程库克隆到本地\" class=\"headerlink\" title=\"从远程库克隆到本地\"></a>从远程库克隆到本地</h2><ul>\n<li>第一步<ul>\n<li>新建一个仓库,勾选<code>Initialize this repository with a README</code>，这样GitHub会自动为我们创建一个<code>README.md</code>文件。创建完毕后，可以看到<code>README.md</code>文件： </li>\n</ul>\n</li>\n<li>第二步<ul>\n<li><code>$ git clone 仓库的URL</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>URL我们一般选取SSH 相较于 http 而言 方便不用每次都输入用户名密码,而且传输速度快</p>\n<p>除非公司只支持 http 才会选用</p>\n</blockquote>\n"},{"title":"预习路线","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-01-19T21:41:09.000Z","password":null,"summary":"分享学习路线以及一些学习资料","typora-root-url":"预习路线","_content":"\n<div align = \"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=28285910&auto=1&height=66\"></iframe></div>\n\n\n\n# 预习路线\n\n- ajax  ---  node  ---  vue  --- 小程序 --- react \n\n## AJAX\n\n**[Part1](https://www.bilibili.com/video/av15657082 )**不看php可以从第37个视频开始看\n\n**[Part2](https://www.bilibili.com/video/av15866060/?spm_id_from=333.788.videocard.0)**\n\n[课件网盘链接](https://pan.baidu.com/s/1w-lcQCMTNLuSEg0e_hpKuQ) -- 提取码:mc10\n\n这个ajax的视频比较老了,,,\n\n又另外找了一个备看\n\n[李南江亲授-jQuery+Ajax从放弃到知根知底](https://www.bilibili.com/video/av22807707/?spm_id_from=333.788.videocard.4)\n\n## Node\n\n[NodeJs全套视频教程](https://www.bilibili.com/video/av81455397)\n\n[课件网盘链接](https://pan.baidu.com/s/1DuXusxfxaiUscfvDb0a9LA ) -- 提取码: nzys \n\n## VUE\n\n**[Pink 老师推荐-Vue.js快速入门课程](https://www.bilibili.com/video/av75420619/?spm_id_from=333.788.videocard.2)** \n\n**[Vue-黑马程序员视频](https://www.bilibili.com/video/av50680998)** --->p1--p199是2018经典vue基础+项目实战教程---p200至最后是2019年最新的vue全家桶(包含了比较流行的新技术)+项目实战教程\n\n# 资料\n\n[Git](https://thirtyzhang.github.io/git)\n\n[百度脑图](https://naotu.baidu.com/)\n\n[BootCDN](https://www.bootcdn.cn/)\n\n[Underscore.js (1.9.1) 中文文档 ](https://www.html.cn/doc/underscore/#throttle)\n\n[模板引擎](https://aui.github.io/art-template/zh-cn/ )\n\n[Bypass-分流抢票](https://www.bypass.cn/)\n\n## 学习站点\n\n[廖雪峰](https://www.liaoxuefeng.com/)\n\n[阮一峰](http://www.ruanyifeng.com/blog/)\n\ngit - 典型错误\n\n![png](1.png)\n\n\n\n## 手动封装数组方法\n\n\n```js\n        var arr = [5,6,7];\n        function myForEach(fn) {\n            for(var i = 0 ; i < this.length; i++){\n                fn(this[i],i,this); //循环调用回调函数,遍历数组中的值\n            }\n        }\n\n        console.log(myForEach);\n        \n        Array.prototype.myForEach = myForEach; //把函数添加为Array的原型方法\n\n        //调用\n        arr.myForEach(function (item,index,arr) {\n            console.log(item,index,arr);\n        })\n```\n\n## 典型错误\n\n**npm install** 的时候出现错误：\n\nnpm ERR! Unexpected end of JSON input while parsing near '...\",\"webpack-dev-server'\n1\n解决方案：\n\n第一步：\n\nnpm cache clean --force\n1\n第二步：（再安装）\n\nnpm install","source":"_posts/预习路线.md","raw":"---\ntitle: 预习路线\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-01-20 05:41:09\npassword:\nsummary: 分享学习路线以及一些学习资料\ntags:\n- 学习\ncategories:\n- 学习\ntypora-root-url: 预习路线\n---\n\n<div align = \"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=28285910&auto=1&height=66\"></iframe></div>\n\n\n\n# 预习路线\n\n- ajax  ---  node  ---  vue  --- 小程序 --- react \n\n## AJAX\n\n**[Part1](https://www.bilibili.com/video/av15657082 )**不看php可以从第37个视频开始看\n\n**[Part2](https://www.bilibili.com/video/av15866060/?spm_id_from=333.788.videocard.0)**\n\n[课件网盘链接](https://pan.baidu.com/s/1w-lcQCMTNLuSEg0e_hpKuQ) -- 提取码:mc10\n\n这个ajax的视频比较老了,,,\n\n又另外找了一个备看\n\n[李南江亲授-jQuery+Ajax从放弃到知根知底](https://www.bilibili.com/video/av22807707/?spm_id_from=333.788.videocard.4)\n\n## Node\n\n[NodeJs全套视频教程](https://www.bilibili.com/video/av81455397)\n\n[课件网盘链接](https://pan.baidu.com/s/1DuXusxfxaiUscfvDb0a9LA ) -- 提取码: nzys \n\n## VUE\n\n**[Pink 老师推荐-Vue.js快速入门课程](https://www.bilibili.com/video/av75420619/?spm_id_from=333.788.videocard.2)** \n\n**[Vue-黑马程序员视频](https://www.bilibili.com/video/av50680998)** --->p1--p199是2018经典vue基础+项目实战教程---p200至最后是2019年最新的vue全家桶(包含了比较流行的新技术)+项目实战教程\n\n# 资料\n\n[Git](https://thirtyzhang.github.io/git)\n\n[百度脑图](https://naotu.baidu.com/)\n\n[BootCDN](https://www.bootcdn.cn/)\n\n[Underscore.js (1.9.1) 中文文档 ](https://www.html.cn/doc/underscore/#throttle)\n\n[模板引擎](https://aui.github.io/art-template/zh-cn/ )\n\n[Bypass-分流抢票](https://www.bypass.cn/)\n\n## 学习站点\n\n[廖雪峰](https://www.liaoxuefeng.com/)\n\n[阮一峰](http://www.ruanyifeng.com/blog/)\n\ngit - 典型错误\n\n![png](1.png)\n\n\n\n## 手动封装数组方法\n\n\n```js\n        var arr = [5,6,7];\n        function myForEach(fn) {\n            for(var i = 0 ; i < this.length; i++){\n                fn(this[i],i,this); //循环调用回调函数,遍历数组中的值\n            }\n        }\n\n        console.log(myForEach);\n        \n        Array.prototype.myForEach = myForEach; //把函数添加为Array的原型方法\n\n        //调用\n        arr.myForEach(function (item,index,arr) {\n            console.log(item,index,arr);\n        })\n```\n\n## 典型错误\n\n**npm install** 的时候出现错误：\n\nnpm ERR! Unexpected end of JSON input while parsing near '...\",\"webpack-dev-server'\n1\n解决方案：\n\n第一步：\n\nnpm cache clean --force\n1\n第二步：（再安装）\n\nnpm install","slug":"预习路线","published":1,"updated":"2020-01-20T20:21:18.900Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5p78aoc000i8kq4dut8d5ke","content":"<div align=\"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=28285910&auto=1&height=66\"></iframe></div>\n\n\n\n<h1 id=\"预习路线\"><a href=\"#预习路线\" class=\"headerlink\" title=\"预习路线\"></a>预习路线</h1><ul>\n<li>ajax  —  node  —  vue  — 小程序 — react </li>\n</ul>\n<h2 id=\"AJAX\"><a href=\"#AJAX\" class=\"headerlink\" title=\"AJAX\"></a>AJAX</h2><p><strong><a href=\"https://www.bilibili.com/video/av15657082\" target=\"_blank\" rel=\"noopener\">Part1</a></strong>不看php可以从第37个视频开始看</p>\n<p><strong><a href=\"https://www.bilibili.com/video/av15866060/?spm_id_from=333.788.videocard.0\" target=\"_blank\" rel=\"noopener\">Part2</a></strong></p>\n<p><a href=\"https://pan.baidu.com/s/1w-lcQCMTNLuSEg0e_hpKuQ\" target=\"_blank\" rel=\"noopener\">课件网盘链接</a> – 提取码:mc10</p>\n<p>这个ajax的视频比较老了,,,</p>\n<p>又另外找了一个备看</p>\n<p><a href=\"https://www.bilibili.com/video/av22807707/?spm_id_from=333.788.videocard.4\" target=\"_blank\" rel=\"noopener\">李南江亲授-jQuery+Ajax从放弃到知根知底</a></p>\n<h2 id=\"Node\"><a href=\"#Node\" class=\"headerlink\" title=\"Node\"></a>Node</h2><p><a href=\"https://www.bilibili.com/video/av81455397\" target=\"_blank\" rel=\"noopener\">NodeJs全套视频教程</a></p>\n<p><a href=\"https://pan.baidu.com/s/1DuXusxfxaiUscfvDb0a9LA\" target=\"_blank\" rel=\"noopener\">课件网盘链接</a> – 提取码: nzys </p>\n<h2 id=\"VUE\"><a href=\"#VUE\" class=\"headerlink\" title=\"VUE\"></a>VUE</h2><p><strong><a href=\"https://www.bilibili.com/video/av75420619/?spm_id_from=333.788.videocard.2\" target=\"_blank\" rel=\"noopener\">Pink 老师推荐-Vue.js快速入门课程</a></strong> </p>\n<p><strong><a href=\"https://www.bilibili.com/video/av50680998\" target=\"_blank\" rel=\"noopener\">Vue-黑马程序员视频</a></strong> —&gt;p1–p199是2018经典vue基础+项目实战教程—p200至最后是2019年最新的vue全家桶(包含了比较流行的新技术)+项目实战教程</p>\n<h1 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h1><p><a href=\"https://thirtyzhang.github.io/git\">Git</a></p>\n<p><a href=\"https://naotu.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度脑图</a></p>\n<p><a href=\"https://www.bootcdn.cn/\" target=\"_blank\" rel=\"noopener\">BootCDN</a></p>\n<p><a href=\"https://www.html.cn/doc/underscore/#throttle\" target=\"_blank\" rel=\"noopener\">Underscore.js (1.9.1) 中文文档 </a></p>\n<p><a href=\"https://aui.github.io/art-template/zh-cn/\" target=\"_blank\" rel=\"noopener\">模板引擎</a></p>\n<p><a href=\"https://www.bypass.cn/\" target=\"_blank\" rel=\"noopener\">Bypass-分流抢票</a></p>\n<h2 id=\"学习站点\"><a href=\"#学习站点\" class=\"headerlink\" title=\"学习站点\"></a>学习站点</h2><p><a href=\"https://www.liaoxuefeng.com/\" target=\"_blank\" rel=\"noopener\">廖雪峰</a></p>\n<p><a href=\"http://www.ruanyifeng.com/blog/\" target=\"_blank\" rel=\"noopener\">阮一峰</a></p>\n<p>git - 典型错误</p>\n<p><img src=\"1.png\" alt=\"png\"></p>\n<h2 id=\"手动封装数组方法\"><a href=\"#手动封装数组方法\" class=\"headerlink\" title=\"手动封装数组方法\"></a>手动封装数组方法</h2><pre class=\"line-numbers language-js\"><code class=\"language-js\">        <span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">myForEach</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//循环调用回调函数,遍历数组中的值</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myForEach<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>myForEach <span class=\"token operator\">=</span> myForEach<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//把函数添加为Array的原型方法</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">//调用</span>\n        arr<span class=\"token punctuation\">.</span><span class=\"token function\">myForEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"典型错误\"><a href=\"#典型错误\" class=\"headerlink\" title=\"典型错误\"></a>典型错误</h2><p><strong>npm install</strong> 的时候出现错误：</p>\n<p>npm ERR! Unexpected end of JSON input while parsing near ‘…”,”webpack-dev-server’<br>1<br>解决方案：</p>\n<p>第一步：</p>\n<p>npm cache clean –force<br>1<br>第二步：（再安装）</p>\n<p>npm install</p>\n","site":{"data":{"friends":[{"name":"自然语言处理与深度学习","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"我的知乎专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"齐强的博客","url":"https://chrisqiqiang.com/","title":"访问主页","introduction":"燥动灵魂，无处安放；放浪形骸,随处可栖。","avatar":"/medias/avatars/qiqiang.jpg"},{"name":"李佳倩的博客","url":"http://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"孙哥我还是看不透生死","url":"https://www.navazil.com/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zhaokangzhe.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.top/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"婷宝的博客","url":"https://milyyy.github.io/","title":"访问主页","introduction":"希望有一个陪我到老的人，还有很多啦（略略略）~ 不过终极梦想嘛，就是做一个快乐的包租婆啦！ 哈哈哈(●'◡'●)","avatar":"/medias/avatars/milyyy.jpg"},{"name":"隐函数_北极鹅","url":"https://www.zhihu.com/people/bei-ji-e-13","title":"访问主页","introduction":"玩CV的音乐人，搞rock的程序员","avatar":"/medias/avatars/ldy.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://blog.csdn.net/cww97","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"http://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"Yucheng Li","url":"https://liyucheng.info/","title":"访问主页","introduction":"目前关注知识图谱与关系抽取领域","avatar":"/medias/avatars/liyucheng.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"http://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"神圣超级无敌宇宙大王","url":"http://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"咸鱼的自我修养","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"}],"musics":[{"name":"aloha heja he","artist":" - 群星","url":"/medias/music/1.m4a","cover":"/medias/music/avatars/7.jpg"},{"name":"稻香","artist":"周杰伦","url":"/medias/music/daoxiang.mp3","cover":"/medias/music/avatars/1.jpg"},{"name":"最美的期待","artist":"周笔畅","url":"/medias/music/zuimeideqidai.flac","cover":"/medias/music/avatars/2.jpg"},{"name":"起床进行曲","artist":"钱晨航","url":"/medias/music/起床进行曲.m4a","cover":"/medias/music/avatars/3.jpg"},{"name":"像鱼","artist":"王贰浪","url":"/medias/music/xiangyu.flac","cover":"/medias/music/avatars/4.jpg"},{"name":"Turnin","artist":"Young Rising Sons","url":"/medias/music/Turnin.m4a","cover":"/medias/music/avatars/5.jpg"},{"name":"夜空中最亮的星","artist":"小果酱","url":"/medias/music/夜空中最亮的星.m4a","cover":"/medias/music/avatars/6.jpg"},{"name":"CountingStars","artist":"OneRepublic","url":"/medias/music/CountingStars.m4a","cover":"/medias/music/avatars/8.jpg"},{"name":"Still","artist":"Timirage","url":"/medias/music/Still.m4a","cover":"/medias/music/avatars/9.jpg"},{"name":"Canon(Cover Johann Pachelbel)","artist":"向晚丶","url":"/medias/music/10.mp3","cover":"/medias/music/avatars/10.jpg"},{"name":"#Lov3 #Ngẫu HứngCanon","artist":"Hoaprox","url":"/medias/music/11.m4a","cover":"/medias/music/avatars/11.jpg"},{"name":"Beautiful In White (Demo)","artist":"Shane Filan","url":"/medias/music/12.m4a","cover":"/medias/music/avatars/12.jpg"}]}},"excerpt":"","more":"<div align=\"middle\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=28285910&auto=1&height=66\"></iframe></div>\n\n\n\n<h1 id=\"预习路线\"><a href=\"#预习路线\" class=\"headerlink\" title=\"预习路线\"></a>预习路线</h1><ul>\n<li>ajax  —  node  —  vue  — 小程序 — react </li>\n</ul>\n<h2 id=\"AJAX\"><a href=\"#AJAX\" class=\"headerlink\" title=\"AJAX\"></a>AJAX</h2><p><strong><a href=\"https://www.bilibili.com/video/av15657082\" target=\"_blank\" rel=\"noopener\">Part1</a></strong>不看php可以从第37个视频开始看</p>\n<p><strong><a href=\"https://www.bilibili.com/video/av15866060/?spm_id_from=333.788.videocard.0\" target=\"_blank\" rel=\"noopener\">Part2</a></strong></p>\n<p><a href=\"https://pan.baidu.com/s/1w-lcQCMTNLuSEg0e_hpKuQ\" target=\"_blank\" rel=\"noopener\">课件网盘链接</a> – 提取码:mc10</p>\n<p>这个ajax的视频比较老了,,,</p>\n<p>又另外找了一个备看</p>\n<p><a href=\"https://www.bilibili.com/video/av22807707/?spm_id_from=333.788.videocard.4\" target=\"_blank\" rel=\"noopener\">李南江亲授-jQuery+Ajax从放弃到知根知底</a></p>\n<h2 id=\"Node\"><a href=\"#Node\" class=\"headerlink\" title=\"Node\"></a>Node</h2><p><a href=\"https://www.bilibili.com/video/av81455397\" target=\"_blank\" rel=\"noopener\">NodeJs全套视频教程</a></p>\n<p><a href=\"https://pan.baidu.com/s/1DuXusxfxaiUscfvDb0a9LA\" target=\"_blank\" rel=\"noopener\">课件网盘链接</a> – 提取码: nzys </p>\n<h2 id=\"VUE\"><a href=\"#VUE\" class=\"headerlink\" title=\"VUE\"></a>VUE</h2><p><strong><a href=\"https://www.bilibili.com/video/av75420619/?spm_id_from=333.788.videocard.2\" target=\"_blank\" rel=\"noopener\">Pink 老师推荐-Vue.js快速入门课程</a></strong> </p>\n<p><strong><a href=\"https://www.bilibili.com/video/av50680998\" target=\"_blank\" rel=\"noopener\">Vue-黑马程序员视频</a></strong> —&gt;p1–p199是2018经典vue基础+项目实战教程—p200至最后是2019年最新的vue全家桶(包含了比较流行的新技术)+项目实战教程</p>\n<h1 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h1><p><a href=\"https://thirtyzhang.github.io/git\">Git</a></p>\n<p><a href=\"https://naotu.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度脑图</a></p>\n<p><a href=\"https://www.bootcdn.cn/\" target=\"_blank\" rel=\"noopener\">BootCDN</a></p>\n<p><a href=\"https://www.html.cn/doc/underscore/#throttle\" target=\"_blank\" rel=\"noopener\">Underscore.js (1.9.1) 中文文档 </a></p>\n<p><a href=\"https://aui.github.io/art-template/zh-cn/\" target=\"_blank\" rel=\"noopener\">模板引擎</a></p>\n<p><a href=\"https://www.bypass.cn/\" target=\"_blank\" rel=\"noopener\">Bypass-分流抢票</a></p>\n<h2 id=\"学习站点\"><a href=\"#学习站点\" class=\"headerlink\" title=\"学习站点\"></a>学习站点</h2><p><a href=\"https://www.liaoxuefeng.com/\" target=\"_blank\" rel=\"noopener\">廖雪峰</a></p>\n<p><a href=\"http://www.ruanyifeng.com/blog/\" target=\"_blank\" rel=\"noopener\">阮一峰</a></p>\n<p>git - 典型错误</p>\n<p><img src=\"1.png\" alt=\"png\"></p>\n<h2 id=\"手动封装数组方法\"><a href=\"#手动封装数组方法\" class=\"headerlink\" title=\"手动封装数组方法\"></a>手动封装数组方法</h2><pre><code class=\"js\">        var arr = [5,6,7];\n        function myForEach(fn) {\n            for(var i = 0 ; i &lt; this.length; i++){\n                fn(this[i],i,this); //循环调用回调函数,遍历数组中的值\n            }\n        }\n\n        console.log(myForEach);\n\n        Array.prototype.myForEach = myForEach; //把函数添加为Array的原型方法\n\n        //调用\n        arr.myForEach(function (item,index,arr) {\n            console.log(item,index,arr);\n        })</code></pre>\n<h2 id=\"典型错误\"><a href=\"#典型错误\" class=\"headerlink\" title=\"典型错误\"></a>典型错误</h2><p><strong>npm install</strong> 的时候出现错误：</p>\n<p>npm ERR! Unexpected end of JSON input while parsing near ‘…”,”webpack-dev-server’<br>1<br>解决方案：</p>\n<p>第一步：</p>\n<p>npm cache clean –force<br>1<br>第二步：（再安装）</p>\n<p>npm install</p>\n"}],"PostAsset":[{"_id":"source/_posts/EasyHexo搭建个人博客/1579682303863.png","slug":"1579682303863.png","post":"ck5p78anm00038kq4bi0w5780","modified":1,"renderable":0},{"_id":"source/_posts/预习路线/1.png","slug":"1.png","post":"ck5p78aoc000i8kq4dut8d5ke","modified":1,"renderable":0},{"_id":"source/_posts/Markdown语法/2.png","slug":"2.png","post":"ck5p78anw00098kq47q4t89dm","modified":1,"renderable":0},{"_id":"source/_posts/Markdown语法/3.png","slug":"3.png","post":"ck5p78anw00098kq47q4t89dm","modified":1,"renderable":0}],"PostCategory":[{"post_id":"ck5p78ane00018kq4lgqemfi3","category_id":"ck5p78anq00058kq4cl42dqci","_id":"ck5p78aod000j8kq4q3dgua01"},{"post_id":"ck5p78ao5000g8kq46a80o0af","category_id":"ck5p78ao2000c8kq4iu3aqy8u","_id":"ck5p78aog000n8kq450kw0z00"},{"post_id":"ck5p78anm00038kq4bi0w5780","category_id":"ck5p78ao2000c8kq4iu3aqy8u","_id":"ck5p78aoh000q8kq4wixpls6n"},{"post_id":"ck5p78ant00078kq4nl6n49m5","category_id":"ck5p78ao2000c8kq4iu3aqy8u","_id":"ck5p78aoi000t8kq4qno6x119"},{"post_id":"ck5p78anw00098kq47q4t89dm","category_id":"ck5p78ao2000c8kq4iu3aqy8u","_id":"ck5p78aok000x8kq48pk5okxn"},{"post_id":"ck5p78ao0000b8kq4z7ugglpr","category_id":"ck5p78ao2000c8kq4iu3aqy8u","_id":"ck5p78aol00108kq4wyh1mt1m"},{"post_id":"ck5p78aoc000i8kq4dut8d5ke","category_id":"ck5p78aok000w8kq4z2livh05","_id":"ck5p78aom00138kq4vlmvp4tg"}],"PostTag":[{"post_id":"ck5p78ane00018kq4lgqemfi3","tag_id":"ck5p78ans00068kq42t9hyot9","_id":"ck5p78ao5000f8kq47gxn41cg"},{"post_id":"ck5p78anm00038kq4bi0w5780","tag_id":"ck5p78ao2000d8kq4hksqhus6","_id":"ck5p78aof000m8kq4ab7t24n6"},{"post_id":"ck5p78ant00078kq4nl6n49m5","tag_id":"ck5p78aoe000l8kq4ptw7oell","_id":"ck5p78aoi000r8kq46ud1xtk6"},{"post_id":"ck5p78anw00098kq47q4t89dm","tag_id":"ck5p78aoe000l8kq4ptw7oell","_id":"ck5p78aok000v8kq40l5fy4dq"},{"post_id":"ck5p78ao0000b8kq4z7ugglpr","tag_id":"ck5p78aoe000l8kq4ptw7oell","_id":"ck5p78aol000z8kq4p9i5rj8p"},{"post_id":"ck5p78ao5000g8kq46a80o0af","tag_id":"ck5p78aoe000l8kq4ptw7oell","_id":"ck5p78aom00128kq48arw2p8p"},{"post_id":"ck5p78aoc000i8kq4dut8d5ke","tag_id":"ck5p78aom00118kq4mlrotfim","_id":"ck5p78aon00148kq4ylisbuwy"}],"Tag":[{"name":"随笔","_id":"ck5p78ans00068kq42t9hyot9"},{"name":"框架","_id":"ck5p78ao2000d8kq4hksqhus6"},{"name":"工具","_id":"ck5p78aoe000l8kq4ptw7oell"},{"name":"学习","_id":"ck5p78aom00118kq4mlrotfim"}]}}