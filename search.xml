<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2020/01/21/markdown-yu-fa/"/>
      <url>/2020/01/21/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<div align="middle"> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28892385&auto=1&height=66"></iframe></div><h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><table><thead><tr><th align="center"><strong>语法</strong></th></tr></thead><tbody><tr><td align="center"><code>#</code>一级标题</td></tr><tr><td align="center"><code>##</code>二级标题</td></tr><tr><td align="center"><code>###</code>三级标题</td></tr><tr><td align="center"><code>####</code>四级标题</td></tr><tr><td align="center"><code>#####</code>五级标题</td></tr><tr><td align="center"><code>######</code>六级标题</td></tr></tbody></table><p><img src="2.png" alt="png"></p><h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><p><code>*斜体*</code>  <em>斜体</em></p><p><code>_斜体_</code>  _斜体_</p><p><code>**粗体**</code>  <strong>粗体</strong></p><p><code>***加粗斜体***</code><strong><em>加粗斜体</em></strong></p><p><code>~~删除线~~</code>  <del>删除线</del></p><h2 id="插入图片或连接"><a href="#插入图片或连接" class="headerlink" title="插入图片或连接"></a>插入图片或连接</h2><p><code>[描述](图片路径或者URL)</code>  描述可以不写</p><h2 id="分割线三种方式"><a href="#分割线三种方式" class="headerlink" title="分割线三种方式"></a>分割线三种方式</h2><p>你可以在一行中用三个以上的星号<code>*</code>、减号<code>-</code>、底线<code>_</code>来建立一个分隔线，行内不能有其他东西。 </p><p><code>---</code></p><hr><p><code>***</code></p><hr><p><code>___</code></p><hr><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p><strong>行内式</strong>：如果在一个行内需要引用代码，只要用反引号`引起来就好（一般在ESC键下方，和~同一个键） </p><p>`用两个反引号` <code>行内/单行代码块</code></p><p><strong>多行代码块与语法高亮</strong>：在需要高亮的代码块的前一行及后一行使用三个单反引号“`”包裹 </p><p>```js</p><p>三个反引号可以表明代码语言,这里写的js</p><p>````</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"我是js代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在被引用的文本前加上<code>&gt;</code>符号，以及一个空格就可以了，如一个<code>&gt;</code>符号会产生一次缩进</p><p><code>&gt;引用</code> </p><blockquote><p>引用</p></blockquote><p><code>&gt;&gt;引用</code></p><blockquote><blockquote><p>引用</p></blockquote></blockquote><p><code>&gt;&gt;&gt;引用</code></p><blockquote><blockquote><blockquote><p>引用</p></blockquote></blockquote></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><strong>无序列表</strong></p><p>使用 *，+，- 都可以表示无序列表。任意选用一个即可, 注意：符号后面一定要有一个空格，起到缩进的作用。 </p><p><code>- 无序列表</code>- </p><p><code>* 无序列表</code></p><p><code>+ 无序列表</code></p><ul><li>无序列表</li><li>无序列表</li><li>无序列表</li></ul><p><strong>有序列表</strong></p><p>使用数字和一个英文句点表示有序列表。 注意：英文句点后面一定要有一个空格，起到缩进的作用。 </p><p><code>1.有序列表</code></p><p><code>2.有序列表</code></p><p><code>3.有序列表</code></p><ol><li>有序列表</li><li>有序列表</li><li>有序列表</li></ol><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符\"></a>转义字符<code>\</code></h2><p>如果在使用符号时与Markdown语法冲突,可以在符号前面加上<code>\</code>即可正常显示</p><p>如在使用列表时，只要是数字后面加上英文的点，就会无意间产生列表，比如2017.12.30 这时候想表达的是日期，有些软件把它被误认为是列表。解决方式：在每个点前面加上\就可以了</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p><code>|姓名|性别|分数|</code></p><p><code>|:-:|:-:|:-:|</code></p><p><code>|小明|男|100|</code></p><p><code>|小明|男|100|</code></p><p>表格对齐方式：我们可以指定表格单元格的对齐方式，冒号在左边表示左对齐，右边表示有对齐，两边都有表示居中 </p><table><thead><tr><th align="center">姓名</th><th align="center">性别</th><th align="center">分数</th></tr></thead><tbody><tr><td align="center">小明</td><td align="center">男</td><td align="center">100</td></tr><tr><td align="center">小明</td><td align="center">男</td><td align="center">100</td></tr></tbody></table><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>Markdown语法学到这里日常已经够用了,下面介绍一款实时预览的 Markdown 文本编辑器</p><h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><p>Typora 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是<strong>完全免费</strong>的。 </p><p>点击下载:<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a></p><h2 id="GFM-标准"><a href="#GFM-标准" class="headerlink" title="GFM 标准"></a>GFM 标准</h2><p> <a href="https://github.github.com/gfm/" target="_blank" rel="noopener">GFM 标准</a>，它是由著名代码托管网站 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 <code>文件 - 偏好设置 - Markdown 语法偏好 - 严格模式</code> 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 <a href="http://support.typora.io/Strict-Mode/" target="_blank" rel="noopener">这篇文档</a> 中查看。</p><h2 id="设置图片"><a href="#设置图片" class="headerlink" title="设置图片"></a>设置图片</h2><p>Typora 支持在拖动或 <code>Ctrl + V</code> 网络图片后自动将其保存到本地。你可以在 <code>文件 - 偏好设置 - 编辑器 - 图片插入</code> 中选择复制到哪个路径，什么情况下需要复制。</p><p><img src="3.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 效率 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预习路线</title>
      <link href="/2020/01/20/yu-xi-lu-xian/"/>
      <url>/2020/01/20/yu-xi-lu-xian/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28285910&auto=1&height=66"></iframe></div><div align="middle"> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28892385&auto=1&height=66"></iframe></div><h1 id="预习路线"><a href="#预习路线" class="headerlink" title="预习路线"></a>预习路线</h1><ul><li>ajax  —  node  —  vue  — 小程序 — react </li></ul><h2 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h2><p><strong><a href="https://www.bilibili.com/video/av15657082" target="_blank" rel="noopener">Part1</a></strong>不看php可以从第37个视频开始看</p><p><strong><a href="https://www.bilibili.com/video/av15866060/?spm_id_from=333.788.videocard.0" target="_blank" rel="noopener">Part2</a></strong></p><p><a href="https://pan.baidu.com/s/1w-lcQCMTNLuSEg0e_hpKuQ" target="_blank" rel="noopener">课件网盘链接</a> – 提取码:mc10</p><p>这个ajax的视频比较老了,,,</p><p>又另外找了一个备看</p><p><a href="https://www.bilibili.com/video/av22807707/?spm_id_from=333.788.videocard.4" target="_blank" rel="noopener">李南江亲授-jQuery+Ajax从放弃到知根知底</a></p><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p><a href="https://www.bilibili.com/video/av81455397" target="_blank" rel="noopener">NodeJs全套视频教程</a></p><p><a href="https://pan.baidu.com/s/1DuXusxfxaiUscfvDb0a9LA" target="_blank" rel="noopener">课件网盘链接</a> – 提取码: nzys </p><h2 id="VUE"><a href="#VUE" class="headerlink" title="VUE"></a>VUE</h2><p><strong><a href="https://www.bilibili.com/video/av75420619/?spm_id_from=333.788.videocard.2" target="_blank" rel="noopener">Pink 老师推荐-Vue.js快速入门课程</a></strong> </p><p><strong><a href="https://www.bilibili.com/video/av50680998" target="_blank" rel="noopener">Vue-黑马程序员视频</a></strong> —&gt;p1–p199是2018经典vue基础+项目实战教程—p200至最后是2019年最新的vue全家桶(包含了比较流行的新技术)+项目实战教程</p><h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><p><a href="https://thirtyzhang.github.io/git">Git</a></p><p><a href="https://naotu.baidu.com/" target="_blank" rel="noopener">百度脑图</a></p><p><a href="https://www.bootcdn.cn/" target="_blank" rel="noopener">BootCDN</a></p><p><a href="https://www.html.cn/doc/underscore/#throttle" target="_blank" rel="noopener">Underscore.js (1.9.1) 中文文档 </a></p><p><a href="https://aui.github.io/art-template/zh-cn/" target="_blank" rel="noopener">模板引擎</a></p><p><a href="https://www.bypass.cn/" target="_blank" rel="noopener">Bypass-分流抢票</a></p><h2 id="学习站点"><a href="#学习站点" class="headerlink" title="学习站点"></a>学习站点</h2><p><a href="https://www.liaoxuefeng.com/" target="_blank" rel="noopener">廖雪峰</a></p><p><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">阮一峰</a></p><p>git - 典型错误</p><p><img src="1.png" alt="png"></p><h2 id="手动封装数组方法"><a href="#手动封装数组方法" class="headerlink" title="手动封装数组方法"></a>手动封装数组方法</h2><pre class="line-numbers language-js"><code class="language-js">        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">myForEach</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//循环调用回调函数,遍历数组中的值</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myForEach<span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>myForEach <span class="token operator">=</span> myForEach<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//把函数添加为Array的原型方法</span>        <span class="token comment" spellcheck="true">//调用</span>        arr<span class="token punctuation">.</span><span class="token function">myForEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="典型错误"><a href="#典型错误" class="headerlink" title="典型错误"></a>典型错误</h2><p><strong>npm install</strong> 的时候出现错误：</p><p>npm ERR! Unexpected end of JSON input while parsing near ‘…”,”webpack-dev-server’<br>1<br>解决方案：</p><p>第一步：</p><p>npm cache clean –force<br>1<br>第二步：（再安装）</p><p>npm install</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标题</title>
      <link href="/2018/01/22/2017-conclusion/"/>
      <url>/2018/01/22/2017-conclusion/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
